<START> ::= <prog> #start

<aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
<aParams> ::= EPSILON 

<aParamsTail> ::= ',' <expr> #aparamstail

<addOp> ::= '+' #addop
<addOp> ::= '-' #addop
<addOp> ::= 'or' #addop

<arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr

<arraySize> ::= '[' <arraySize2> #arraysize

<arraySize2> ::= 'intnum' #intnum ']' 
<arraySize2> ::= ']' #p 

<assignOp> ::= ':=' #assign

<attributeDecl> ::= 'attribute' <varDecl> #attributdecl

<classDecl> ::= 'class' 'id' #id <opt-classDecl2> '{' #p <rept-classDecl4> #reptclassdecl4 '}' ';' #classdecl

<classOrImplOrFunc> ::= <classDecl> #classorimplorfunc
<classOrImplOrFunc> ::= <implDef> #classorimplorfunc
<classOrImplOrFunc> ::= <funcDef> #classorimplorfunc

<expr> ::= <arithExpr> <expr2> #expr

<expr2> ::= EPSILON #p
<expr2> ::= <relOp> <arithExpr> #expr2

<relOp> ::= '==' #relOp
<relOp> ::= '<>' #relOp
<relOp> ::= '<' #relOp
<relOp> ::= '>' #relOp
<relOp> ::= '<=' #relOp
<relOp> ::= '>=' #relOp

<fParams> ::= 'id' #id ':' <type> #p <rept-fParams3> #reptfparams3 #p <rept-fParams4> #reptfparams4 #fparams
<fParams> ::= EPSILON

<fParamsTail> ::= ',' 'id' #id ':' <type> #p <rept-fParams3> #reptfparams3 #fparamstail 

<factor> ::= <rept-factor> #factor
<factor> ::= 'intLit' #factor
<factor> ::= 'floatLit' #factor
<factor> ::= '(' <arithExpr> ')' #factor 
<factor> ::= 'not' <factor> #factor2
<factor> ::= <sign> <factor> #factor2

<rept-factor> ::= 'id' #id <rept-factor2>
<rept-factor> ::= 'self' #self <idnest2> #selfandidnest2 <rept-factor> #dot

<idnest2> ::= '(' #p <aParams> ')' #idnest2 '.' 
<idnest2> ::= #p <rept-variable2> #reptvariable2 #idnest2 '.' 

<rept-factor2> ::= '(' <aParams> #aparamsandid ')' <rept-factor3>
<rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>

<rept-factor3> ::= '.' <rept-factor> #dot
<rept-factor3> ::= EPSILON

<rept-factor4> ::= '.' <rept-factor> #dot
<rept-factor4> ::= EPSILON 

<funcBody> ::= '{' #p <rept-funcBody1> #reptfuncbody1 #funcbody '}' 

<funcDecl> ::= <funcHead> #funcdecl ';' 

<funcDef> ::= <funcHead> <funcBody> #funcdef

<funcHead> ::= 'function' #p 'id' #id '(' <fParams> ')' '=>' <returnType> #funchead
<funcHead> ::= 'constructor' #p '(' <fParams> ')' #funchead

<implDef> ::= 'implementation' 'id' #id '{' #p <rept-implDef3> #reptimpldef3 #impldef '}' 

<indice> ::= '[' <arithExpr> #indice ']' 

<localVarDecl> ::= 'local' <varDecl> #localvardecl

<localVarDeclOrStat> ::= <localVarDecl> #localvardeclorstat
<localVarDeclOrStat> ::= <statement> #localvardeclorstat

<memberDecl> ::= <funcDecl> #memberdecl
<memberDecl> ::= <attributeDecl> #memberdecl

<multOp> ::= '*' #multop
<multOp> ::= '/' #multop
<multOp> ::= 'and' #multop

<opt-classDecl2> ::= 'isa' #p 'id' #id #p <rept-opt-classDecl22> #reptoptclassdecl22 #optclassdecl2 
<opt-classDecl2> ::= #p EPSILON #optclassdecl2  

<prog> ::= #p <rept-prog0> #reptprog0 #prog

<rept-prog0> ::= <classOrImplOrFunc> #classorimplorfunc <rept-prog0> 
<rept-prog0> ::= EPSILON 

<relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr

<rept-aParams1> ::= <aParamsTail> <rept-aParams1>  
<rept-aParams1> ::= EPSILON 

<rept-classDecl4> ::= <visibility> <memberDecl> #visibilityandmemberdecl <rept-classDecl4> 
<rept-classDecl4> ::= EPSILON 

<rept-fParams3> ::= <arraySize> <rept-fParams3>
<rept-fParams3> ::= EPSILON 

<rept-fParams4> ::= <fParamsTail> <rept-fParams4> 
<rept-fParams4> ::= EPSILON 

<rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
<rept-funcBody1> ::= EPSILON 

<rept-implDef3> ::= <funcDef> <rept-implDef3> 
<rept-implDef3> ::= EPSILON 

<rept-opt-classDecl22> ::= ',' 'id' #id <rept-opt-classDecl22> 
<rept-opt-classDecl22> ::= EPSILON 

<rept-statBlock1> ::= <statement> <rept-statBlock1> 
<rept-statBlock1> ::= EPSILON 

<rept-variable2> ::= <indice> <rept-variable2> 
<rept-variable2> ::= EPSILON 

<returnType> ::= <type> #returntype
<returnType> ::= 'void' #void #returntype

<rightrec-arithExpr> ::= EPSILON 
<rightrec-arithExpr> ::= <addOp> <term> #rightrecarithexpr <rightrec-arithExpr> 

<rightrec-term> ::= EPSILON 
<rightrec-term> ::= <multOp> <factor> #rightrecterm <rightrec-term> 

<sign> ::= '+' #sign
<sign> ::= '-' #sign

<statBlock> ::= '{' #p <rept-statBlock1> #reptstatblock1 '}' #statblock
<statBlock> ::= <statement> #statblock
<statBlock> ::= EPSILON #p

<statement> ::= 'if' #if '(' <relExpr> ')' #condition 'then' <statBlock> #then 'else' <statBlock> #felse ';' #ifstatement
<statement> ::= 'while' #while '(' <relExpr> ')' #condition <statBlock>  #then ';' #whilestatement 
<statement> ::= 'read' #read '(' <variable> ')' #readstatement ';' 
<statement> ::= 'write' #write '(' <expr> ')' #writestatement ';' 
<statement> ::= 'return' #return '(' <expr> ')' #freturnstatement ';' 
<statement> ::= <rept-statement> #statement

<rept-statement> ::= 'self' #self <idnest2> #selfandidnest2 <rept-statement> #dot
<rept-statement> ::= 'id' #id <rept-statement2>

<rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
<rept-statement2> ::= '(' <aParams> #aparamsandid ')' <rept-statement3>

<rept-statement3> ::= '.' <rept-statement> #dot
<rept-statement3> ::= ';'

<rept-statement4> ::= '.' <rept-statement> #dot
<rept-statement4> ::= <assignOp> <expr> #reptstatement4 ';'

<term> ::= <factor> <rightrec-term> #term

<type> ::= 'int' #type 
<type> ::= 'float' #type 
<type> ::= 'id' #type 

<varDecl> ::= 'id' #id ':' <type> #p <rept-fParams3> #reptfparams3 #vardecl ';' 

<variable> ::= 'self' #self <idnest2> #selfandidnest2 <variable> #dot
<variable> ::= 'id' #id <variable2> 

<variable2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <variable3>
<variable2> ::= '(' <aParams> #aparamsandid ')' '.' <variable> #dot

<variable3> ::= EPSILON 
<variable3> ::= '.' <variable> #dot 

<visibility> ::= 'public' #visibility 
<visibility> ::= 'private' #visibility 

