<START> ::= <prog> 

<aParams> ::= <expr> <rept-aParams1> 
<aParams> ::= EPSILON 

<aParamsTail> ::= ',' <expr> 

<addOp> ::= '+' 
<addOp> ::= '-' 
<addOp> ::= 'or' 

<arithExpr> ::= <arithExpr> <addOp> <term> 
<arithExpr> ::= <term> 

<arraySize> ::= '[' 'intNum' ']' 
<arraySize> ::= '[' ']' 

<assignOp> ::= ':=' 

<assignStat> ::= <variable> <assignOp> <expr> 

<attributeDecl> ::= 'attribute' <varDecl> 

<classDecl> ::= 'class' 'id' <opt-classDecl2> '{' <rept-classDecl4> '}' ';' 

<classOrImplOrFunc> ::= <classDecl> 
<classOrImplOrFunc> ::= <implDef> 
<classOrImplOrFunc> ::= <funcDef> 

<expr> ::= <arithExpr> 
<expr> ::= <relExpr> 

<fParams> ::= 'id' ':' <type> <rept-fParams3> <rept-fParams4> 
<fParams> ::= EPSILON 

<fParamsTail> ::= ',' 'id' ':' <type> <rept-fParams3> 

<factor> ::= <variable> 
<factor> ::= <functionCall> 
<factor> ::= 'intLit' 
<factor> ::= 'floatLit' 
<factor> ::= '(' <arithExpr> ')' 
<factor> ::= 'not' <factor> 
<factor> ::= <sign> <factor> 

<funcBody> ::= '{' <rept-funcBody1> '}' 

<funcDecl> ::= <funcHead> ';' 

<funcDef> ::= <funcHead> <funcBody> 

<funcHead> ::= 'function' 'id' '(' <fParams> ')' '=' '>' <returnType> 
<funcHead> ::= 'constructor' '(' <fParams> ')' 

<functionCall> ::= <rept-functionCall0> <ids> '(' <aParams> ')' 

<idOrSelf> ::= 'id' 
<idOrSelf> ::= 'self' 

<idnest> ::= <idOrSelf> <rept-idnest1> '.' 
<idnest> ::= <idOrSelf> '(' <aParams> ')' '.' 

<implDef> ::= 'implementation' 'id' '{' <rept-implDef3> '}' 

<indice> ::= '[' <arithExpr> ']' 

<localVarDecl> ::= 'local' <varDecl> 

<localVarDeclOrStat> ::= <localVarDecl> 
<localVarDeclOrStat> ::= <statement> 

<memberDecl> ::= <funcDecl> 
<memberDecl> ::= <attributeDecl> 

<multOp> ::= '*' 
<multOp> ::= '/' 
<multOp> ::= 'and' 

<opt-classDecl2> ::= 'isa' 'id' <rept-opt-classDecl22> 
<opt-classDecl2> ::= EPSILON 

<prog> ::= <rept-prog0> 

<relExpr> ::= <arithExpr> <relOp> <arithExpr> 

<relOp> ::= '==' 
<relOp> ::= '<>' 
<relOp> ::= '<' 
<relOp> ::= '>' 
<relOp> ::= '<=' 
<relOp> ::= '>=' 

<rept-aParams1> ::= <aParamsTail> <rept-aParams1> 
<rept-aParams1> ::= EPSILON 

<rept-classDecl4> ::= <visibility> <memberDecl> <rept-classDecl4> 
<rept-classDecl4> ::= EPSILON 

<rept-fParams3> ::= <arraySize> <rept-fParams3> 
<rept-fParams3> ::= EPSILON 

<rept-fParams4> ::= <fParamsTail> <rept-fParams4> 
<rept-fParams4> ::= EPSILON 

<rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1> 
<rept-funcBody1> ::= EPSILON 

<rept-functionCall0> ::= <idnest> <rept-functionCall0> 
<rept-functionCall0> ::= EPSILON 

<rept-idnest1> ::= <indice> <rept-idnest1> 
<rept-idnest1> ::= EPSILON 

<rept-implDef3> ::= <funcDef> <rept-implDef3> 
<rept-implDef3> ::= EPSILON 

<rept-opt-classDecl22> ::= ',' 'id' <rept-opt-classDecl22> 
<rept-opt-classDecl22> ::= EPSILON 

<rept-prog0> ::= <classOrImplOrFunc> <rept-prog0> 
<rept-prog0> ::= EPSILON 

<rept-statBlock1> ::= <statement> <rept-statBlock1> 
<rept-statBlock1> ::= EPSILON 

<returnType> ::= <type> 
<returnType> ::= 'void' 

<sign> ::= '+' 
<sign> ::= '-' 

<statBlock> ::= '{' <rept-statBlock1> '}' 
<statBlock> ::= <statement> 
<statBlock> ::= EPSILON 

<statement> ::= <assignStat> ';' 
<statement> ::= 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' 
<statement> ::= 'while' '(' <relExpr> ')' <statBlock> ';' 
<statement> ::= 'read' '(' <variable> ')' ';' 
<statement> ::= 'write' '(' <expr> ')' ';' 
<statement> ::= 'return' '(' <expr> ')' ';' 
<statement> ::= <functionCall> ';' 

<term> ::= <term> <multOp> <factor> 
<term> ::= <factor> 

<type> ::= 'int' 
<type> ::= 'float' 
<type> ::= 'id' 

<varDecl> ::= 'id' ':' <type> <rept-fParams3> ';' 

<variable> ::= <rept-functionCall0> <ids> <rept-idnest1> 

<visibility> ::= 'public' 
<visibility> ::= 'private' 
