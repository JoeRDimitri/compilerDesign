ROW: rept-statement4, at value: 63
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : if, at value: 48
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : float, at value: 46
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : +, at value: 45
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : int, at value: 44
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : >, at value: 42
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : and, at value: 41
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : :=, at value: 39
Table entry: <rept-statement4> ::= <assignOp> <expr> #reptstatement4 ';'
ROW: rept-statement4, at value: 63
COLUMN : <, at value: 38
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : public, at value: 35
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : /, at value: 33
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : {, at value: 32
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : else, at value: 31
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : [, at value: 30
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : ., at value: 29
Table entry: <rept-statement4> ::= '.' <rept-statement> #dot
ROW: rept-statement4, at value: 63
COLUMN : id, at value: 21
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : ], at value: 10
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : private, at value: 9
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : }, at value: 4
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : then, at value: 0
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : :, at value: 3
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : or, at value: 7
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : ), at value: 5
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : class, at value: 11
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : *, at value: 12
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : read, at value: 14
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : while, at value: 15
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : return, at value: 16
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : write, at value: 17
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : (, at value: 18
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : local, at value: 19
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : not, at value: 20
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : function, at value: 28
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : -, at value: 27
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : self, at value: 22
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : $, at value: 23
Table entry: error
ROW: rept-statement4, at value: 63
COLUMN : void, at value: 25
Table entry: error
ROW: sign, at value: 62
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: sign, at value: 62
COLUMN : intnum, at value: 49
Table entry: error
ROW: sign, at value: 62
COLUMN : if, at value: 48
Table entry: error
ROW: sign, at value: 62
COLUMN : ;, at value: 47
Table entry: error
ROW: sign, at value: 62
COLUMN : float, at value: 46
Table entry: error
ROW: sign, at value: 62
COLUMN : +, at value: 45
Table entry: <sign> ::= '+' #sign
ROW: sign, at value: 62
COLUMN : int, at value: 44
Table entry: error
ROW: sign, at value: 62
COLUMN : <=, at value: 43
Table entry: error
ROW: sign, at value: 62
COLUMN : >, at value: 42
Table entry: error
ROW: sign, at value: 62
COLUMN : and, at value: 41
Table entry: error
ROW: sign, at value: 62
COLUMN : ,, at value: 40
Table entry: error
ROW: sign, at value: 62
COLUMN : :=, at value: 39
Table entry: error
ROW: sign, at value: 62
COLUMN : <, at value: 38
Table entry: error
ROW: sign, at value: 62
COLUMN : <>, at value: 37
Table entry: error
ROW: sign, at value: 62
COLUMN : implementation, at value: 36
Table entry: error
ROW: sign, at value: 62
COLUMN : public, at value: 35
Table entry: error
ROW: sign, at value: 62
COLUMN : ==, at value: 34
Table entry: error
ROW: sign, at value: 62
COLUMN : /, at value: 33
Table entry: error
ROW: sign, at value: 62
COLUMN : {, at value: 32
Table entry: error
ROW: sign, at value: 62
COLUMN : else, at value: 31
Table entry: error
ROW: sign, at value: 62
COLUMN : [, at value: 30
Table entry: error
ROW: sign, at value: 62
COLUMN : ., at value: 29
Table entry: error
ROW: sign, at value: 62
COLUMN : id, at value: 21
Table entry: error
ROW: sign, at value: 62
COLUMN : ], at value: 10
Table entry: error
ROW: sign, at value: 62
COLUMN : private, at value: 9
Table entry: error
ROW: sign, at value: 62
COLUMN : attribute, at value: 6
Table entry: error
ROW: sign, at value: 62
COLUMN : }, at value: 4
Table entry: error
ROW: sign, at value: 62
COLUMN : then, at value: 0
Table entry: error
ROW: sign, at value: 62
COLUMN : :, at value: 3
Table entry: error
ROW: sign, at value: 62
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: sign, at value: 62
COLUMN : isa, at value: 8
Table entry: error
ROW: sign, at value: 62
COLUMN : or, at value: 7
Table entry: error
ROW: sign, at value: 62
COLUMN : ), at value: 5
Table entry: error
ROW: sign, at value: 62
COLUMN : =>, at value: 1
Table entry: error
ROW: sign, at value: 62
COLUMN : class, at value: 11
Table entry: error
ROW: sign, at value: 62
COLUMN : *, at value: 12
Table entry: error
ROW: sign, at value: 62
COLUMN : >=, at value: 13
Table entry: error
ROW: sign, at value: 62
COLUMN : read, at value: 14
Table entry: error
ROW: sign, at value: 62
COLUMN : while, at value: 15
Table entry: error
ROW: sign, at value: 62
COLUMN : return, at value: 16
Table entry: error
ROW: sign, at value: 62
COLUMN : write, at value: 17
Table entry: error
ROW: sign, at value: 62
COLUMN : (, at value: 18
Table entry: error
ROW: sign, at value: 62
COLUMN : local, at value: 19
Table entry: error
ROW: sign, at value: 62
COLUMN : not, at value: 20
Table entry: error
ROW: sign, at value: 62
COLUMN : function, at value: 28
Table entry: error
ROW: sign, at value: 62
COLUMN : -, at value: 27
Table entry: <sign> ::= '-' #sign
ROW: sign, at value: 62
COLUMN : self, at value: 22
Table entry: error
ROW: sign, at value: 62
COLUMN : floatnum, at value: 26
Table entry: error
ROW: sign, at value: 62
COLUMN : $, at value: 23
Table entry: error
ROW: sign, at value: 62
COLUMN : void, at value: 25
Table entry: error
ROW: relExpr, at value: 61
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: relExpr, at value: 61
COLUMN : intnum, at value: 49
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : if, at value: 48
Table entry: error
ROW: relExpr, at value: 61
COLUMN : ;, at value: 47
Table entry: error
ROW: relExpr, at value: 61
COLUMN : float, at value: 46
Table entry: error
ROW: relExpr, at value: 61
COLUMN : +, at value: 45
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : int, at value: 44
Table entry: error
ROW: relExpr, at value: 61
COLUMN : <=, at value: 43
Table entry: error
ROW: relExpr, at value: 61
COLUMN : >, at value: 42
Table entry: error
ROW: relExpr, at value: 61
COLUMN : and, at value: 41
Table entry: error
ROW: relExpr, at value: 61
COLUMN : ,, at value: 40
Table entry: error
ROW: relExpr, at value: 61
COLUMN : :=, at value: 39
Table entry: error
ROW: relExpr, at value: 61
COLUMN : <, at value: 38
Table entry: error
ROW: relExpr, at value: 61
COLUMN : <>, at value: 37
Table entry: error
ROW: relExpr, at value: 61
COLUMN : implementation, at value: 36
Table entry: error
ROW: relExpr, at value: 61
COLUMN : public, at value: 35
Table entry: error
ROW: relExpr, at value: 61
COLUMN : ==, at value: 34
Table entry: error
ROW: relExpr, at value: 61
COLUMN : /, at value: 33
Table entry: error
ROW: relExpr, at value: 61
COLUMN : {, at value: 32
Table entry: error
ROW: relExpr, at value: 61
COLUMN : else, at value: 31
Table entry: error
ROW: relExpr, at value: 61
COLUMN : [, at value: 30
Table entry: error
ROW: relExpr, at value: 61
COLUMN : ., at value: 29
Table entry: error
ROW: relExpr, at value: 61
COLUMN : id, at value: 21
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : ], at value: 10
Table entry: error
ROW: relExpr, at value: 61
COLUMN : private, at value: 9
Table entry: error
ROW: relExpr, at value: 61
COLUMN : attribute, at value: 6
Table entry: error
ROW: relExpr, at value: 61
COLUMN : }, at value: 4
Table entry: error
ROW: relExpr, at value: 61
COLUMN : then, at value: 0
Table entry: error
ROW: relExpr, at value: 61
COLUMN : :, at value: 3
Table entry: error
ROW: relExpr, at value: 61
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: relExpr, at value: 61
COLUMN : isa, at value: 8
Table entry: error
ROW: relExpr, at value: 61
COLUMN : or, at value: 7
Table entry: error
ROW: relExpr, at value: 61
COLUMN : ), at value: 5
Table entry: error
ROW: relExpr, at value: 61
COLUMN : =>, at value: 1
Table entry: error
ROW: relExpr, at value: 61
COLUMN : class, at value: 11
Table entry: error
ROW: relExpr, at value: 61
COLUMN : *, at value: 12
Table entry: error
ROW: relExpr, at value: 61
COLUMN : >=, at value: 13
Table entry: error
ROW: relExpr, at value: 61
COLUMN : read, at value: 14
Table entry: error
ROW: relExpr, at value: 61
COLUMN : while, at value: 15
Table entry: error
ROW: relExpr, at value: 61
COLUMN : return, at value: 16
Table entry: error
ROW: relExpr, at value: 61
COLUMN : write, at value: 17
Table entry: error
ROW: relExpr, at value: 61
COLUMN : (, at value: 18
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : local, at value: 19
Table entry: error
ROW: relExpr, at value: 61
COLUMN : not, at value: 20
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : function, at value: 28
Table entry: error
ROW: relExpr, at value: 61
COLUMN : -, at value: 27
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : self, at value: 22
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : floatnum, at value: 26
Table entry: <relExpr> ::= <arithExpr> <relOp> <arithExpr> #relexpr
ROW: relExpr, at value: 61
COLUMN : $, at value: 23
Table entry: error
ROW: relExpr, at value: 61
COLUMN : void, at value: 25
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : intnum, at value: 49
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : if, at value: 48
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : ;, at value: 47
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : float, at value: 46
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : +, at value: 45
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : int, at value: 44
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : <=, at value: 43
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : >, at value: 42
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : and, at value: 41
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : ,, at value: 40
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : :=, at value: 39
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : <, at value: 38
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : <>, at value: 37
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : implementation, at value: 36
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : public, at value: 35
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : ==, at value: 34
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : /, at value: 33
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : {, at value: 32
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : else, at value: 31
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : [, at value: 30
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : ., at value: 29
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : id, at value: 21
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : ], at value: 10
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : private, at value: 9
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : attribute, at value: 6
Table entry: <memberDecl> ::= <attributeDecl>
ROW: memberDecl, at value: 60
COLUMN : }, at value: 4
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : then, at value: 0
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : :, at value: 3
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : isa, at value: 8
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : or, at value: 7
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : ), at value: 5
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : =>, at value: 1
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : class, at value: 11
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : *, at value: 12
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : >=, at value: 13
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : read, at value: 14
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : while, at value: 15
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : return, at value: 16
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : write, at value: 17
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : (, at value: 18
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : local, at value: 19
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : not, at value: 20
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : function, at value: 28
Table entry: <memberDecl> ::= <funcDecl>
ROW: memberDecl, at value: 60
COLUMN : -, at value: 27
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : self, at value: 22
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : floatnum, at value: 26
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : $, at value: 23
Table entry: error
ROW: memberDecl, at value: 60
COLUMN : void, at value: 25
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : intnum, at value: 49
Table entry: <arraySize2> ::= 'intnum' #intnum ']' 
ROW: arraySize2, at value: 25
COLUMN : if, at value: 48
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : ;, at value: 47
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : float, at value: 46
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : +, at value: 45
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : int, at value: 44
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : <=, at value: 43
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : >, at value: 42
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : and, at value: 41
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : ,, at value: 40
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : :=, at value: 39
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : <, at value: 38
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : <>, at value: 37
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : implementation, at value: 36
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : public, at value: 35
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : ==, at value: 34
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : /, at value: 33
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : {, at value: 32
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : else, at value: 31
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : [, at value: 30
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : ., at value: 29
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : id, at value: 21
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : ], at value: 10
Table entry: <arraySize2> ::= ']' #p 
ROW: arraySize2, at value: 25
COLUMN : private, at value: 9
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : attribute, at value: 6
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : }, at value: 4
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : then, at value: 0
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : :, at value: 3
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : isa, at value: 8
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : or, at value: 7
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : ), at value: 5
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : =>, at value: 1
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : class, at value: 11
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : *, at value: 12
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : >=, at value: 13
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : read, at value: 14
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : while, at value: 15
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : return, at value: 16
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : write, at value: 17
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : (, at value: 18
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : local, at value: 19
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : not, at value: 20
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : function, at value: 28
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : -, at value: 27
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : self, at value: 22
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : floatnum, at value: 26
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : $, at value: 23
Table entry: error
ROW: arraySize2, at value: 25
COLUMN : void, at value: 25
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : intnum, at value: 49
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : if, at value: 48
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : ;, at value: 47
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : float, at value: 46
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : +, at value: 45
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : int, at value: 44
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : <=, at value: 43
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : >, at value: 42
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : and, at value: 41
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : ,, at value: 40
Table entry: <fParamsTail> ::= ',' 'id' #id ':' <type> #p <rept-fParams3> #reptfparams3 
ROW: fParamsTail, at value: 24
COLUMN : :=, at value: 39
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : <, at value: 38
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : <>, at value: 37
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : implementation, at value: 36
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : public, at value: 35
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : ==, at value: 34
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : /, at value: 33
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : {, at value: 32
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : else, at value: 31
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : [, at value: 30
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : ., at value: 29
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : id, at value: 21
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : ], at value: 10
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : private, at value: 9
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : attribute, at value: 6
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : }, at value: 4
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : then, at value: 0
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : :, at value: 3
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : isa, at value: 8
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : or, at value: 7
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : ), at value: 5
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : =>, at value: 1
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : class, at value: 11
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : *, at value: 12
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : >=, at value: 13
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : read, at value: 14
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : while, at value: 15
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : return, at value: 16
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : write, at value: 17
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : (, at value: 18
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : local, at value: 19
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : not, at value: 20
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : function, at value: 28
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : -, at value: 27
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : self, at value: 22
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : floatnum, at value: 26
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : $, at value: 23
Table entry: error
ROW: fParamsTail, at value: 24
COLUMN : void, at value: 25
Table entry: error
ROW: varDecl, at value: 2
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: varDecl, at value: 2
COLUMN : intnum, at value: 49
Table entry: error
ROW: varDecl, at value: 2
COLUMN : if, at value: 48
Table entry: error
ROW: varDecl, at value: 2
COLUMN : ;, at value: 47
Table entry: error
ROW: varDecl, at value: 2
COLUMN : float, at value: 46
Table entry: error
ROW: varDecl, at value: 2
COLUMN : +, at value: 45
Table entry: error
ROW: varDecl, at value: 2
COLUMN : int, at value: 44
Table entry: error
ROW: varDecl, at value: 2
COLUMN : <=, at value: 43
Table entry: error
ROW: varDecl, at value: 2
COLUMN : >, at value: 42
Table entry: error
ROW: varDecl, at value: 2
COLUMN : and, at value: 41
Table entry: error
ROW: varDecl, at value: 2
COLUMN : ,, at value: 40
Table entry: error
ROW: varDecl, at value: 2
COLUMN : :=, at value: 39
Table entry: error
ROW: varDecl, at value: 2
COLUMN : <, at value: 38
Table entry: error
ROW: varDecl, at value: 2
COLUMN : <>, at value: 37
Table entry: error
ROW: varDecl, at value: 2
COLUMN : implementation, at value: 36
Table entry: error
ROW: varDecl, at value: 2
COLUMN : public, at value: 35
Table entry: error
ROW: varDecl, at value: 2
COLUMN : ==, at value: 34
Table entry: error
ROW: varDecl, at value: 2
COLUMN : /, at value: 33
Table entry: error
ROW: varDecl, at value: 2
COLUMN : {, at value: 32
Table entry: error
ROW: varDecl, at value: 2
COLUMN : else, at value: 31
Table entry: error
ROW: varDecl, at value: 2
COLUMN : [, at value: 30
Table entry: error
ROW: varDecl, at value: 2
COLUMN : ., at value: 29
Table entry: error
ROW: varDecl, at value: 2
COLUMN : id, at value: 21
Table entry: <varDecl> ::= 'id' #id ':' <type> #p <rept-varDecl3> #reptvardecl3 #vardecl ';' 
ROW: varDecl, at value: 2
COLUMN : ], at value: 10
Table entry: error
ROW: varDecl, at value: 2
COLUMN : private, at value: 9
Table entry: error
ROW: varDecl, at value: 2
COLUMN : attribute, at value: 6
Table entry: error
ROW: varDecl, at value: 2
COLUMN : }, at value: 4
Table entry: error
ROW: varDecl, at value: 2
COLUMN : then, at value: 0
Table entry: error
ROW: varDecl, at value: 2
COLUMN : :, at value: 3
Table entry: error
ROW: varDecl, at value: 2
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: varDecl, at value: 2
COLUMN : isa, at value: 8
Table entry: error
ROW: varDecl, at value: 2
COLUMN : or, at value: 7
Table entry: error
ROW: varDecl, at value: 2
COLUMN : ), at value: 5
Table entry: error
ROW: varDecl, at value: 2
COLUMN : =>, at value: 1
Table entry: error
ROW: varDecl, at value: 2
COLUMN : class, at value: 11
Table entry: error
ROW: varDecl, at value: 2
COLUMN : *, at value: 12
Table entry: error
ROW: varDecl, at value: 2
COLUMN : >=, at value: 13
Table entry: error
ROW: varDecl, at value: 2
COLUMN : read, at value: 14
Table entry: error
ROW: varDecl, at value: 2
COLUMN : while, at value: 15
Table entry: error
ROW: varDecl, at value: 2
COLUMN : return, at value: 16
Table entry: error
ROW: varDecl, at value: 2
COLUMN : write, at value: 17
Table entry: error
ROW: varDecl, at value: 2
COLUMN : (, at value: 18
Table entry: error
ROW: varDecl, at value: 2
COLUMN : local, at value: 19
Table entry: error
ROW: varDecl, at value: 2
COLUMN : not, at value: 20
Table entry: error
ROW: varDecl, at value: 2
COLUMN : function, at value: 28
Table entry: error
ROW: varDecl, at value: 2
COLUMN : -, at value: 27
Table entry: error
ROW: varDecl, at value: 2
COLUMN : self, at value: 22
Table entry: error
ROW: varDecl, at value: 2
COLUMN : floatnum, at value: 26
Table entry: error
ROW: varDecl, at value: 2
COLUMN : $, at value: 23
Table entry: error
ROW: varDecl, at value: 2
COLUMN : void, at value: 25
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : EPSILON, at value: 0
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : if, at value: 48
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : ;, at value: 47
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : float, at value: 46
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : +, at value: 45
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : int, at value: 44
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : <=, at value: 43
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : >, at value: 42
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : and, at value: 41
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : ,, at value: 40
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : :=, at value: 39
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : <, at value: 38
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : <>, at value: 37
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : public, at value: 35
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : ==, at value: 34
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : /, at value: 33
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : {, at value: 32
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : else, at value: 31
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : [, at value: 30
Table entry: <rept-variable2> ::= <indice> <rept-variable2> 
ROW: rept-variable2, at value: 26
COLUMN : ., at value: 29
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : id, at value: 21
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : ], at value: 10
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : private, at value: 9
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : }, at value: 4
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : then, at value: 0
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : :, at value: 3
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : or, at value: 7
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : ), at value: 5
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : class, at value: 11
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : *, at value: 12
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : >=, at value: 13
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : read, at value: 14
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : while, at value: 15
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : return, at value: 16
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : write, at value: 17
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : (, at value: 18
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : local, at value: 19
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : not, at value: 20
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : function, at value: 28
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : -, at value: 27
Table entry: <rept-variable2> ::= EPSILON 
ROW: rept-variable2, at value: 26
COLUMN : self, at value: 22
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : $, at value: 23
Table entry: error
ROW: rept-variable2, at value: 26
COLUMN : void, at value: 25
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : intnum, at value: 49
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : if, at value: 48
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : ;, at value: 47
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : float, at value: 46
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : +, at value: 45
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : int, at value: 44
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : <=, at value: 43
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : >, at value: 42
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : and, at value: 41
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : ,, at value: 40
Table entry: <aParamsTail> ::= ',' <expr> #aparamstail 
ROW: aParamsTail, at value: 28
COLUMN : :=, at value: 39
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : <, at value: 38
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : <>, at value: 37
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : implementation, at value: 36
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : public, at value: 35
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : ==, at value: 34
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : /, at value: 33
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : {, at value: 32
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : else, at value: 31
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : [, at value: 30
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : ., at value: 29
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : id, at value: 21
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : ], at value: 10
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : private, at value: 9
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : attribute, at value: 6
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : }, at value: 4
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : then, at value: 0
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : :, at value: 3
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : isa, at value: 8
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : or, at value: 7
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : ), at value: 5
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : =>, at value: 1
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : class, at value: 11
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : *, at value: 12
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : >=, at value: 13
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : read, at value: 14
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : while, at value: 15
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : return, at value: 16
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : write, at value: 17
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : (, at value: 18
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : local, at value: 19
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : not, at value: 20
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : function, at value: 28
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : -, at value: 27
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : self, at value: 22
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : floatnum, at value: 26
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : $, at value: 23
Table entry: error
ROW: aParamsTail, at value: 28
COLUMN : void, at value: 25
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : intnum, at value: 49
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : if, at value: 48
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : ;, at value: 47
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : float, at value: 46
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : +, at value: 45
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : int, at value: 44
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : <=, at value: 43
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : >, at value: 42
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : and, at value: 41
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : ,, at value: 40
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : :=, at value: 39
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : <, at value: 38
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : <>, at value: 37
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : implementation, at value: 36
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : public, at value: 35
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : ==, at value: 34
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : /, at value: 33
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : {, at value: 32
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : else, at value: 31
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : [, at value: 30
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : ., at value: 29
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : id, at value: 21
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : ], at value: 10
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : private, at value: 9
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : attribute, at value: 6
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : }, at value: 4
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : then, at value: 0
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : :, at value: 3
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : isa, at value: 8
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : or, at value: 7
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : ), at value: 5
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : =>, at value: 1
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : class, at value: 11
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : *, at value: 12
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : >=, at value: 13
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : read, at value: 14
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : while, at value: 15
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : return, at value: 16
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : write, at value: 17
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : (, at value: 18
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : local, at value: 19
Table entry: <localVarDecl> ::= 'local' <varDecl> #localvardecl
ROW: localVarDecl, at value: 27
COLUMN : not, at value: 20
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : function, at value: 28
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : -, at value: 27
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : self, at value: 22
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : floatnum, at value: 26
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : $, at value: 23
Table entry: error
ROW: localVarDecl, at value: 27
COLUMN : void, at value: 25
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : EPSILON, at value: 0
Table entry: <rept-prog0> ::= EPSILON 
ROW: rept-prog0, at value: 23
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : if, at value: 48
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : float, at value: 46
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : +, at value: 45
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : int, at value: 44
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : >, at value: 42
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : and, at value: 41
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : <, at value: 38
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : implementation, at value: 36
Table entry: <rept-prog0> ::= <classOrImplOrFunc> <rept-prog0> 
ROW: rept-prog0, at value: 23
COLUMN : public, at value: 35
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : /, at value: 33
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : {, at value: 32
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : else, at value: 31
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : [, at value: 30
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : ., at value: 29
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : id, at value: 21
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : ], at value: 10
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : private, at value: 9
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : }, at value: 4
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : then, at value: 0
Table entry: <rept-prog0> ::= EPSILON 
ROW: rept-prog0, at value: 23
COLUMN : :, at value: 3
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : or, at value: 7
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : ), at value: 5
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : class, at value: 11
Table entry: <rept-prog0> ::= <classOrImplOrFunc> <rept-prog0> 
ROW: rept-prog0, at value: 23
COLUMN : *, at value: 12
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : read, at value: 14
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : while, at value: 15
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : return, at value: 16
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : write, at value: 17
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : (, at value: 18
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : local, at value: 19
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : not, at value: 20
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : function, at value: 28
Table entry: <rept-prog0> ::= <classOrImplOrFunc> <rept-prog0> 
ROW: rept-prog0, at value: 23
COLUMN : -, at value: 27
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : self, at value: 22
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-prog0, at value: 23
COLUMN : $, at value: 23
Table entry: <rept-prog0> ::= EPSILON 
ROW: rept-prog0, at value: 23
COLUMN : void, at value: 25
Table entry: error
ROW: classDecl, at value: 22
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: classDecl, at value: 22
COLUMN : intnum, at value: 49
Table entry: error
ROW: classDecl, at value: 22
COLUMN : if, at value: 48
Table entry: error
ROW: classDecl, at value: 22
COLUMN : ;, at value: 47
Table entry: error
ROW: classDecl, at value: 22
COLUMN : float, at value: 46
Table entry: error
ROW: classDecl, at value: 22
COLUMN : +, at value: 45
Table entry: error
ROW: classDecl, at value: 22
COLUMN : int, at value: 44
Table entry: error
ROW: classDecl, at value: 22
COLUMN : <=, at value: 43
Table entry: error
ROW: classDecl, at value: 22
COLUMN : >, at value: 42
Table entry: error
ROW: classDecl, at value: 22
COLUMN : and, at value: 41
Table entry: error
ROW: classDecl, at value: 22
COLUMN : ,, at value: 40
Table entry: error
ROW: classDecl, at value: 22
COLUMN : :=, at value: 39
Table entry: error
ROW: classDecl, at value: 22
COLUMN : <, at value: 38
Table entry: error
ROW: classDecl, at value: 22
COLUMN : <>, at value: 37
Table entry: error
ROW: classDecl, at value: 22
COLUMN : implementation, at value: 36
Table entry: error
ROW: classDecl, at value: 22
COLUMN : public, at value: 35
Table entry: error
ROW: classDecl, at value: 22
COLUMN : ==, at value: 34
Table entry: error
ROW: classDecl, at value: 22
COLUMN : /, at value: 33
Table entry: error
ROW: classDecl, at value: 22
COLUMN : {, at value: 32
Table entry: error
ROW: classDecl, at value: 22
COLUMN : else, at value: 31
Table entry: error
ROW: classDecl, at value: 22
COLUMN : [, at value: 30
Table entry: error
ROW: classDecl, at value: 22
COLUMN : ., at value: 29
Table entry: error
ROW: classDecl, at value: 22
COLUMN : id, at value: 21
Table entry: error
ROW: classDecl, at value: 22
COLUMN : ], at value: 10
Table entry: error
ROW: classDecl, at value: 22
COLUMN : private, at value: 9
Table entry: error
ROW: classDecl, at value: 22
COLUMN : attribute, at value: 6
Table entry: error
ROW: classDecl, at value: 22
COLUMN : }, at value: 4
Table entry: error
ROW: classDecl, at value: 22
COLUMN : then, at value: 0
Table entry: error
ROW: classDecl, at value: 22
COLUMN : :, at value: 3
Table entry: error
ROW: classDecl, at value: 22
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: classDecl, at value: 22
COLUMN : isa, at value: 8
Table entry: error
ROW: classDecl, at value: 22
COLUMN : or, at value: 7
Table entry: error
ROW: classDecl, at value: 22
COLUMN : ), at value: 5
Table entry: error
ROW: classDecl, at value: 22
COLUMN : =>, at value: 1
Table entry: error
ROW: classDecl, at value: 22
COLUMN : class, at value: 11
Table entry: <classDecl> ::= 'class' 'id' #id <opt-classDecl2> '{' #p <rept-classDecl4> #reptclassdecl4 '}' ';' #classdecl
ROW: classDecl, at value: 22
COLUMN : *, at value: 12
Table entry: error
ROW: classDecl, at value: 22
COLUMN : >=, at value: 13
Table entry: error
ROW: classDecl, at value: 22
COLUMN : read, at value: 14
Table entry: error
ROW: classDecl, at value: 22
COLUMN : while, at value: 15
Table entry: error
ROW: classDecl, at value: 22
COLUMN : return, at value: 16
Table entry: error
ROW: classDecl, at value: 22
COLUMN : write, at value: 17
Table entry: error
ROW: classDecl, at value: 22
COLUMN : (, at value: 18
Table entry: error
ROW: classDecl, at value: 22
COLUMN : local, at value: 19
Table entry: error
ROW: classDecl, at value: 22
COLUMN : not, at value: 20
Table entry: error
ROW: classDecl, at value: 22
COLUMN : function, at value: 28
Table entry: error
ROW: classDecl, at value: 22
COLUMN : -, at value: 27
Table entry: error
ROW: classDecl, at value: 22
COLUMN : self, at value: 22
Table entry: error
ROW: classDecl, at value: 22
COLUMN : floatnum, at value: 26
Table entry: error
ROW: classDecl, at value: 22
COLUMN : $, at value: 23
Table entry: error
ROW: classDecl, at value: 22
COLUMN : void, at value: 25
Table entry: error
ROW: statBlock, at value: 21
COLUMN : EPSILON, at value: 0
Table entry: <statBlock> ::= EPSILON #p
ROW: statBlock, at value: 21
COLUMN : intnum, at value: 49
Table entry: error
ROW: statBlock, at value: 21
COLUMN : if, at value: 48
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : ;, at value: 47
Table entry: <statBlock> ::= EPSILON #p
ROW: statBlock, at value: 21
COLUMN : float, at value: 46
Table entry: error
ROW: statBlock, at value: 21
COLUMN : +, at value: 45
Table entry: error
ROW: statBlock, at value: 21
COLUMN : int, at value: 44
Table entry: error
ROW: statBlock, at value: 21
COLUMN : <=, at value: 43
Table entry: error
ROW: statBlock, at value: 21
COLUMN : >, at value: 42
Table entry: error
ROW: statBlock, at value: 21
COLUMN : and, at value: 41
Table entry: error
ROW: statBlock, at value: 21
COLUMN : ,, at value: 40
Table entry: error
ROW: statBlock, at value: 21
COLUMN : :=, at value: 39
Table entry: error
ROW: statBlock, at value: 21
COLUMN : <, at value: 38
Table entry: error
ROW: statBlock, at value: 21
COLUMN : <>, at value: 37
Table entry: error
ROW: statBlock, at value: 21
COLUMN : implementation, at value: 36
Table entry: error
ROW: statBlock, at value: 21
COLUMN : public, at value: 35
Table entry: error
ROW: statBlock, at value: 21
COLUMN : ==, at value: 34
Table entry: error
ROW: statBlock, at value: 21
COLUMN : /, at value: 33
Table entry: error
ROW: statBlock, at value: 21
COLUMN : {, at value: 32
Table entry: <statBlock> ::= '{' #p <rept-statBlock1> #reptstatblock1 '}' #statblock
ROW: statBlock, at value: 21
COLUMN : else, at value: 31
Table entry: <statBlock> ::= EPSILON #p
ROW: statBlock, at value: 21
COLUMN : [, at value: 30
Table entry: error
ROW: statBlock, at value: 21
COLUMN : ., at value: 29
Table entry: error
ROW: statBlock, at value: 21
COLUMN : id, at value: 21
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : ], at value: 10
Table entry: error
ROW: statBlock, at value: 21
COLUMN : private, at value: 9
Table entry: error
ROW: statBlock, at value: 21
COLUMN : attribute, at value: 6
Table entry: error
ROW: statBlock, at value: 21
COLUMN : }, at value: 4
Table entry: error
ROW: statBlock, at value: 21
COLUMN : then, at value: 0
Table entry: <statBlock> ::= EPSILON #p
ROW: statBlock, at value: 21
COLUMN : :, at value: 3
Table entry: error
ROW: statBlock, at value: 21
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: statBlock, at value: 21
COLUMN : isa, at value: 8
Table entry: error
ROW: statBlock, at value: 21
COLUMN : or, at value: 7
Table entry: error
ROW: statBlock, at value: 21
COLUMN : ), at value: 5
Table entry: error
ROW: statBlock, at value: 21
COLUMN : =>, at value: 1
Table entry: error
ROW: statBlock, at value: 21
COLUMN : class, at value: 11
Table entry: error
ROW: statBlock, at value: 21
COLUMN : *, at value: 12
Table entry: error
ROW: statBlock, at value: 21
COLUMN : >=, at value: 13
Table entry: error
ROW: statBlock, at value: 21
COLUMN : read, at value: 14
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : while, at value: 15
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : return, at value: 16
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : write, at value: 17
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : (, at value: 18
Table entry: error
ROW: statBlock, at value: 21
COLUMN : local, at value: 19
Table entry: error
ROW: statBlock, at value: 21
COLUMN : not, at value: 20
Table entry: error
ROW: statBlock, at value: 21
COLUMN : function, at value: 28
Table entry: error
ROW: statBlock, at value: 21
COLUMN : -, at value: 27
Table entry: error
ROW: statBlock, at value: 21
COLUMN : self, at value: 22
Table entry: <statBlock> ::= <statement> #statblock
ROW: statBlock, at value: 21
COLUMN : floatnum, at value: 26
Table entry: error
ROW: statBlock, at value: 21
COLUMN : $, at value: 23
Table entry: error
ROW: statBlock, at value: 21
COLUMN : void, at value: 25
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : intnum, at value: 49
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : if, at value: 48
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : ;, at value: 47
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : float, at value: 46
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : +, at value: 45
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : int, at value: 44
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : <=, at value: 43
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : >, at value: 42
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : and, at value: 41
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : ,, at value: 40
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : :=, at value: 39
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : <, at value: 38
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : <>, at value: 37
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : implementation, at value: 36
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : public, at value: 35
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : ==, at value: 34
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : /, at value: 33
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : {, at value: 32
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : else, at value: 31
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : [, at value: 30
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : ., at value: 29
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : id, at value: 21
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : ], at value: 10
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : private, at value: 9
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : attribute, at value: 6
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : }, at value: 4
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : then, at value: 0
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : :, at value: 3
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : isa, at value: 8
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : or, at value: 7
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : ), at value: 5
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : =>, at value: 1
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : class, at value: 11
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : *, at value: 12
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : >=, at value: 13
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : read, at value: 14
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : while, at value: 15
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : return, at value: 16
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : write, at value: 17
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : (, at value: 18
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : local, at value: 19
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : not, at value: 20
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : function, at value: 28
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : -, at value: 27
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : self, at value: 22
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : floatnum, at value: 26
Table entry: <arithExpr> ::= <term> <rightrec-arithExpr> #arithexpr 
ROW: arithExpr, at value: 20
COLUMN : $, at value: 23
Table entry: error
ROW: arithExpr, at value: 20
COLUMN : void, at value: 25
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : EPSILON, at value: 0
Table entry: <rept-fParams4> ::= EPSILON 
ROW: rept-fParams4, at value: 19
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : if, at value: 48
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : float, at value: 46
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : +, at value: 45
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : int, at value: 44
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : >, at value: 42
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : and, at value: 41
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : ,, at value: 40
Table entry: <rept-fParams4> ::= <fParamsTail> <rept-fParams4> 
ROW: rept-fParams4, at value: 19
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : <, at value: 38
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : public, at value: 35
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : /, at value: 33
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : {, at value: 32
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : else, at value: 31
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : [, at value: 30
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : ., at value: 29
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : id, at value: 21
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : ], at value: 10
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : private, at value: 9
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : }, at value: 4
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : then, at value: 0
Table entry: <rept-fParams4> ::= EPSILON 
ROW: rept-fParams4, at value: 19
COLUMN : :, at value: 3
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : or, at value: 7
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : ), at value: 5
Table entry: <rept-fParams4> ::= EPSILON 
ROW: rept-fParams4, at value: 19
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : class, at value: 11
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : *, at value: 12
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : read, at value: 14
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : while, at value: 15
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : return, at value: 16
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : write, at value: 17
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : (, at value: 18
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : local, at value: 19
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : not, at value: 20
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : function, at value: 28
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : -, at value: 27
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : self, at value: 22
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : $, at value: 23
Table entry: error
ROW: rept-fParams4, at value: 19
COLUMN : void, at value: 25
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : EPSILON, at value: 0
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : if, at value: 48
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : ;, at value: 47
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : float, at value: 46
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : +, at value: 45
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : int, at value: 44
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : <=, at value: 43
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : >, at value: 42
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : and, at value: 41
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : ,, at value: 40
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : <, at value: 38
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : <>, at value: 37
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : public, at value: 35
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : ==, at value: 34
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : /, at value: 33
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : {, at value: 32
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : else, at value: 31
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : [, at value: 30
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : ., at value: 29
Table entry: <rept-factor4> ::= '.' <rept-factor> #dot
ROW: rept-factor4, at value: 18
COLUMN : id, at value: 21
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : ], at value: 10
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : private, at value: 9
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : }, at value: 4
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : then, at value: 0
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : :, at value: 3
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : or, at value: 7
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : ), at value: 5
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : class, at value: 11
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : *, at value: 12
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : >=, at value: 13
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : read, at value: 14
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : while, at value: 15
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : return, at value: 16
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : write, at value: 17
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : (, at value: 18
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : local, at value: 19
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : not, at value: 20
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : function, at value: 28
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : -, at value: 27
Table entry: <rept-factor4> ::= EPSILON 
ROW: rept-factor4, at value: 18
COLUMN : self, at value: 22
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : $, at value: 23
Table entry: error
ROW: rept-factor4, at value: 18
COLUMN : void, at value: 25
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : if, at value: 48
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : float, at value: 46
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : +, at value: 45
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : int, at value: 44
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : >, at value: 42
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : and, at value: 41
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : <, at value: 38
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : public, at value: 35
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : /, at value: 33
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : {, at value: 32
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : else, at value: 31
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : [, at value: 30
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : ., at value: 29
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : id, at value: 21
Table entry: <rept-factor> ::= 'id' #id <rept-factor2>
ROW: rept-factor, at value: 15
COLUMN : ], at value: 10
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : private, at value: 9
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : }, at value: 4
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : then, at value: 0
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : :, at value: 3
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : or, at value: 7
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : ), at value: 5
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : class, at value: 11
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : *, at value: 12
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : read, at value: 14
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : while, at value: 15
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : return, at value: 16
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : write, at value: 17
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : (, at value: 18
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : local, at value: 19
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : not, at value: 20
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : function, at value: 28
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : -, at value: 27
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : self, at value: 22
Table entry: <rept-factor> ::= 'self' #self <idnest2> #selfandidnest2 <rept-factor> #dot
ROW: rept-factor, at value: 15
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : $, at value: 23
Table entry: error
ROW: rept-factor, at value: 15
COLUMN : void, at value: 25
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : if, at value: 48
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : float, at value: 46
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : +, at value: 45
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : int, at value: 44
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : >, at value: 42
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : and, at value: 41
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : <, at value: 38
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : public, at value: 35
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : /, at value: 33
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : {, at value: 32
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : else, at value: 31
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : [, at value: 30
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : ., at value: 29
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : id, at value: 21
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : ], at value: 10
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : private, at value: 9
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : }, at value: 4
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : then, at value: 0
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : :, at value: 3
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : or, at value: 7
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : ), at value: 5
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : class, at value: 11
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : *, at value: 12
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : read, at value: 14
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : while, at value: 15
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : return, at value: 16
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : write, at value: 17
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : (, at value: 18
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : local, at value: 19
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : not, at value: 20
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : function, at value: 28
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : -, at value: 27
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : self, at value: 22
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : $, at value: 23
Table entry: error
ROW: rept-fParamsTail4, at value: 14
COLUMN : void, at value: 25
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : if, at value: 48
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : ;, at value: 47
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : float, at value: 46
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : +, at value: 45
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : int, at value: 44
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : <=, at value: 43
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : >, at value: 42
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : and, at value: 41
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : ,, at value: 40
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : <, at value: 38
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : <>, at value: 37
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : public, at value: 35
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : ==, at value: 34
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : /, at value: 33
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : {, at value: 32
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : else, at value: 31
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : [, at value: 30
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : ., at value: 29
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : id, at value: 21
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : ], at value: 10
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : private, at value: 9
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : }, at value: 4
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : then, at value: 0
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : :, at value: 3
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : or, at value: 7
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : ), at value: 5
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : class, at value: 11
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : *, at value: 12
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : >=, at value: 13
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : read, at value: 14
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : while, at value: 15
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : return, at value: 16
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : write, at value: 17
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : (, at value: 18
Table entry: <rept-factor2> ::= '(' <aParams> #aparamsandid ')' <rept-factor3>
ROW: rept-factor2, at value: 13
COLUMN : local, at value: 19
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : not, at value: 20
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : function, at value: 28
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : -, at value: 27
Table entry: <rept-factor2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-factor4>
ROW: rept-factor2, at value: 13
COLUMN : self, at value: 22
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : $, at value: 23
Table entry: error
ROW: rept-factor2, at value: 13
COLUMN : void, at value: 25
Table entry: error
ROW: factor, at value: 17
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: factor, at value: 17
COLUMN : intnum, at value: 49
Table entry: <factor> ::= 'intnum' #intnum #factor
ROW: factor, at value: 17
COLUMN : if, at value: 48
Table entry: error
ROW: factor, at value: 17
COLUMN : ;, at value: 47
Table entry: error
ROW: factor, at value: 17
COLUMN : float, at value: 46
Table entry: error
ROW: factor, at value: 17
COLUMN : +, at value: 45
Table entry: <factor> ::= <sign> <factor> #factor2
ROW: factor, at value: 17
COLUMN : int, at value: 44
Table entry: error
ROW: factor, at value: 17
COLUMN : <=, at value: 43
Table entry: error
ROW: factor, at value: 17
COLUMN : >, at value: 42
Table entry: error
ROW: factor, at value: 17
COLUMN : and, at value: 41
Table entry: error
ROW: factor, at value: 17
COLUMN : ,, at value: 40
Table entry: error
ROW: factor, at value: 17
COLUMN : :=, at value: 39
Table entry: error
ROW: factor, at value: 17
COLUMN : <, at value: 38
Table entry: error
ROW: factor, at value: 17
COLUMN : <>, at value: 37
Table entry: error
ROW: factor, at value: 17
COLUMN : implementation, at value: 36
Table entry: error
ROW: factor, at value: 17
COLUMN : public, at value: 35
Table entry: error
ROW: factor, at value: 17
COLUMN : ==, at value: 34
Table entry: error
ROW: factor, at value: 17
COLUMN : /, at value: 33
Table entry: error
ROW: factor, at value: 17
COLUMN : {, at value: 32
Table entry: error
ROW: factor, at value: 17
COLUMN : else, at value: 31
Table entry: error
ROW: factor, at value: 17
COLUMN : [, at value: 30
Table entry: error
ROW: factor, at value: 17
COLUMN : ., at value: 29
Table entry: error
ROW: factor, at value: 17
COLUMN : id, at value: 21
Table entry: <factor> ::= <rept-factor> #factor
ROW: factor, at value: 17
COLUMN : ], at value: 10
Table entry: error
ROW: factor, at value: 17
COLUMN : private, at value: 9
Table entry: error
ROW: factor, at value: 17
COLUMN : attribute, at value: 6
Table entry: error
ROW: factor, at value: 17
COLUMN : }, at value: 4
Table entry: error
ROW: factor, at value: 17
COLUMN : then, at value: 0
Table entry: error
ROW: factor, at value: 17
COLUMN : :, at value: 3
Table entry: error
ROW: factor, at value: 17
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: factor, at value: 17
COLUMN : isa, at value: 8
Table entry: error
ROW: factor, at value: 17
COLUMN : or, at value: 7
Table entry: error
ROW: factor, at value: 17
COLUMN : ), at value: 5
Table entry: error
ROW: factor, at value: 17
COLUMN : =>, at value: 1
Table entry: error
ROW: factor, at value: 17
COLUMN : class, at value: 11
Table entry: error
ROW: factor, at value: 17
COLUMN : *, at value: 12
Table entry: error
ROW: factor, at value: 17
COLUMN : >=, at value: 13
Table entry: error
ROW: factor, at value: 17
COLUMN : read, at value: 14
Table entry: error
ROW: factor, at value: 17
COLUMN : while, at value: 15
Table entry: error
ROW: factor, at value: 17
COLUMN : return, at value: 16
Table entry: error
ROW: factor, at value: 17
COLUMN : write, at value: 17
Table entry: error
ROW: factor, at value: 17
COLUMN : (, at value: 18
Table entry: <factor> ::= '(' <arithExpr> ')' #factor 
ROW: factor, at value: 17
COLUMN : local, at value: 19
Table entry: error
ROW: factor, at value: 17
COLUMN : not, at value: 20
Table entry: <factor> ::= 'not' <factor> #factor2
ROW: factor, at value: 17
COLUMN : function, at value: 28
Table entry: error
ROW: factor, at value: 17
COLUMN : -, at value: 27
Table entry: <factor> ::= <sign> <factor> #factor2
ROW: factor, at value: 17
COLUMN : self, at value: 22
Table entry: <factor> ::= <rept-factor> #factor
ROW: factor, at value: 17
COLUMN : floatnum, at value: 26
Table entry: <factor> ::= 'floatnum' #floatnum #factor
ROW: factor, at value: 17
COLUMN : $, at value: 23
Table entry: error
ROW: factor, at value: 17
COLUMN : void, at value: 25
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : EPSILON, at value: 0
Table entry: <rept-statBlock1> ::= EPSILON 
ROW: rept-statBlock1, at value: 16
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : if, at value: 48
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : float, at value: 46
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : +, at value: 45
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : int, at value: 44
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : >, at value: 42
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : and, at value: 41
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : <, at value: 38
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : public, at value: 35
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : /, at value: 33
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : {, at value: 32
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : else, at value: 31
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : [, at value: 30
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : ., at value: 29
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : id, at value: 21
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : ], at value: 10
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : private, at value: 9
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : }, at value: 4
Table entry: <rept-statBlock1> ::= EPSILON 
ROW: rept-statBlock1, at value: 16
COLUMN : then, at value: 0
Table entry: <rept-statBlock1> ::= EPSILON 
ROW: rept-statBlock1, at value: 16
COLUMN : :, at value: 3
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : or, at value: 7
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : ), at value: 5
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : class, at value: 11
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : *, at value: 12
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : read, at value: 14
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : while, at value: 15
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : return, at value: 16
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : write, at value: 17
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : (, at value: 18
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : local, at value: 19
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : not, at value: 20
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : function, at value: 28
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : -, at value: 27
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : self, at value: 22
Table entry: <rept-statBlock1> ::= <statement> <rept-statBlock1> 
ROW: rept-statBlock1, at value: 16
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : $, at value: 23
Table entry: error
ROW: rept-statBlock1, at value: 16
COLUMN : void, at value: 25
Table entry: error
ROW: variable2, at value: 0
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: variable2, at value: 0
COLUMN : intnum, at value: 49
Table entry: error
ROW: variable2, at value: 0
COLUMN : if, at value: 48
Table entry: error
ROW: variable2, at value: 0
COLUMN : ;, at value: 47
Table entry: error
ROW: variable2, at value: 0
COLUMN : float, at value: 46
Table entry: error
ROW: variable2, at value: 0
COLUMN : +, at value: 45
Table entry: error
ROW: variable2, at value: 0
COLUMN : int, at value: 44
Table entry: error
ROW: variable2, at value: 0
COLUMN : <=, at value: 43
Table entry: error
ROW: variable2, at value: 0
COLUMN : >, at value: 42
Table entry: error
ROW: variable2, at value: 0
COLUMN : and, at value: 41
Table entry: error
ROW: variable2, at value: 0
COLUMN : ,, at value: 40
Table entry: error
ROW: variable2, at value: 0
COLUMN : :=, at value: 39
Table entry: error
ROW: variable2, at value: 0
COLUMN : <, at value: 38
Table entry: error
ROW: variable2, at value: 0
COLUMN : <>, at value: 37
Table entry: error
ROW: variable2, at value: 0
COLUMN : implementation, at value: 36
Table entry: error
ROW: variable2, at value: 0
COLUMN : public, at value: 35
Table entry: error
ROW: variable2, at value: 0
COLUMN : ==, at value: 34
Table entry: error
ROW: variable2, at value: 0
COLUMN : /, at value: 33
Table entry: error
ROW: variable2, at value: 0
COLUMN : {, at value: 32
Table entry: error
ROW: variable2, at value: 0
COLUMN : else, at value: 31
Table entry: error
ROW: variable2, at value: 0
COLUMN : [, at value: 30
Table entry: <variable2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <variable3>
ROW: variable2, at value: 0
COLUMN : ., at value: 29
Table entry: <variable2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <variable3>
ROW: variable2, at value: 0
COLUMN : id, at value: 21
Table entry: error
ROW: variable2, at value: 0
COLUMN : ], at value: 10
Table entry: error
ROW: variable2, at value: 0
COLUMN : private, at value: 9
Table entry: error
ROW: variable2, at value: 0
COLUMN : attribute, at value: 6
Table entry: error
ROW: variable2, at value: 0
COLUMN : }, at value: 4
Table entry: error
ROW: variable2, at value: 0
COLUMN : then, at value: 0
Table entry: error
ROW: variable2, at value: 0
COLUMN : :, at value: 3
Table entry: error
ROW: variable2, at value: 0
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: variable2, at value: 0
COLUMN : isa, at value: 8
Table entry: error
ROW: variable2, at value: 0
COLUMN : or, at value: 7
Table entry: error
ROW: variable2, at value: 0
COLUMN : ), at value: 5
Table entry: <variable2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <variable3>
ROW: variable2, at value: 0
COLUMN : =>, at value: 1
Table entry: error
ROW: variable2, at value: 0
COLUMN : class, at value: 11
Table entry: error
ROW: variable2, at value: 0
COLUMN : *, at value: 12
Table entry: error
ROW: variable2, at value: 0
COLUMN : >=, at value: 13
Table entry: error
ROW: variable2, at value: 0
COLUMN : read, at value: 14
Table entry: error
ROW: variable2, at value: 0
COLUMN : while, at value: 15
Table entry: error
ROW: variable2, at value: 0
COLUMN : return, at value: 16
Table entry: error
ROW: variable2, at value: 0
COLUMN : write, at value: 17
Table entry: error
ROW: variable2, at value: 0
COLUMN : (, at value: 18
Table entry: <variable2> ::= '(' <aParams> #aparamsandid ')' '.' <variable> #dot
ROW: variable2, at value: 0
COLUMN : local, at value: 19
Table entry: error
ROW: variable2, at value: 0
COLUMN : not, at value: 20
Table entry: error
ROW: variable2, at value: 0
COLUMN : function, at value: 28
Table entry: error
ROW: variable2, at value: 0
COLUMN : -, at value: 27
Table entry: error
ROW: variable2, at value: 0
COLUMN : self, at value: 22
Table entry: error
ROW: variable2, at value: 0
COLUMN : floatnum, at value: 26
Table entry: error
ROW: variable2, at value: 0
COLUMN : $, at value: 23
Table entry: error
ROW: variable2, at value: 0
COLUMN : void, at value: 25
Table entry: error
ROW: prog, at value: 42
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: prog, at value: 42
COLUMN : intnum, at value: 49
Table entry: error
ROW: prog, at value: 42
COLUMN : if, at value: 48
Table entry: error
ROW: prog, at value: 42
COLUMN : ;, at value: 47
Table entry: error
ROW: prog, at value: 42
COLUMN : float, at value: 46
Table entry: error
ROW: prog, at value: 42
COLUMN : +, at value: 45
Table entry: error
ROW: prog, at value: 42
COLUMN : int, at value: 44
Table entry: error
ROW: prog, at value: 42
COLUMN : <=, at value: 43
Table entry: error
ROW: prog, at value: 42
COLUMN : >, at value: 42
Table entry: error
ROW: prog, at value: 42
COLUMN : and, at value: 41
Table entry: error
ROW: prog, at value: 42
COLUMN : ,, at value: 40
Table entry: error
ROW: prog, at value: 42
COLUMN : :=, at value: 39
Table entry: error
ROW: prog, at value: 42
COLUMN : <, at value: 38
Table entry: error
ROW: prog, at value: 42
COLUMN : <>, at value: 37
Table entry: error
ROW: prog, at value: 42
COLUMN : implementation, at value: 36
Table entry: <prog> ::= #p <rept-prog0> #reptprog0 #prog
ROW: prog, at value: 42
COLUMN : public, at value: 35
Table entry: error
ROW: prog, at value: 42
COLUMN : ==, at value: 34
Table entry: error
ROW: prog, at value: 42
COLUMN : /, at value: 33
Table entry: error
ROW: prog, at value: 42
COLUMN : {, at value: 32
Table entry: error
ROW: prog, at value: 42
COLUMN : else, at value: 31
Table entry: error
ROW: prog, at value: 42
COLUMN : [, at value: 30
Table entry: error
ROW: prog, at value: 42
COLUMN : ., at value: 29
Table entry: error
ROW: prog, at value: 42
COLUMN : id, at value: 21
Table entry: error
ROW: prog, at value: 42
COLUMN : ], at value: 10
Table entry: error
ROW: prog, at value: 42
COLUMN : private, at value: 9
Table entry: error
ROW: prog, at value: 42
COLUMN : attribute, at value: 6
Table entry: error
ROW: prog, at value: 42
COLUMN : }, at value: 4
Table entry: error
ROW: prog, at value: 42
COLUMN : then, at value: 0
Table entry: error
ROW: prog, at value: 42
COLUMN : :, at value: 3
Table entry: error
ROW: prog, at value: 42
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: prog, at value: 42
COLUMN : isa, at value: 8
Table entry: error
ROW: prog, at value: 42
COLUMN : or, at value: 7
Table entry: error
ROW: prog, at value: 42
COLUMN : ), at value: 5
Table entry: error
ROW: prog, at value: 42
COLUMN : =>, at value: 1
Table entry: error
ROW: prog, at value: 42
COLUMN : class, at value: 11
Table entry: <prog> ::= #p <rept-prog0> #reptprog0 #prog
ROW: prog, at value: 42
COLUMN : *, at value: 12
Table entry: error
ROW: prog, at value: 42
COLUMN : >=, at value: 13
Table entry: error
ROW: prog, at value: 42
COLUMN : read, at value: 14
Table entry: error
ROW: prog, at value: 42
COLUMN : while, at value: 15
Table entry: error
ROW: prog, at value: 42
COLUMN : return, at value: 16
Table entry: error
ROW: prog, at value: 42
COLUMN : write, at value: 17
Table entry: error
ROW: prog, at value: 42
COLUMN : (, at value: 18
Table entry: error
ROW: prog, at value: 42
COLUMN : local, at value: 19
Table entry: error
ROW: prog, at value: 42
COLUMN : not, at value: 20
Table entry: error
ROW: prog, at value: 42
COLUMN : function, at value: 28
Table entry: <prog> ::= #p <rept-prog0> #reptprog0 #prog
ROW: prog, at value: 42
COLUMN : -, at value: 27
Table entry: error
ROW: prog, at value: 42
COLUMN : self, at value: 22
Table entry: error
ROW: prog, at value: 42
COLUMN : floatnum, at value: 26
Table entry: error
ROW: prog, at value: 42
COLUMN : $, at value: 23
Table entry: <prog> ::= #p <rept-prog0> #reptprog0 #prog
ROW: prog, at value: 42
COLUMN : void, at value: 25
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : EPSILON, at value: 0
Table entry: <rept-fParams3> ::= EPSILON 
ROW: rept-fParams3, at value: 6
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : if, at value: 48
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : float, at value: 46
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : +, at value: 45
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : int, at value: 44
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : >, at value: 42
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : and, at value: 41
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : ,, at value: 40
Table entry: <rept-fParams3> ::= EPSILON 
ROW: rept-fParams3, at value: 6
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : <, at value: 38
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : public, at value: 35
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : /, at value: 33
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : {, at value: 32
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : else, at value: 31
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : [, at value: 30
Table entry: <rept-fParams3> ::= <arraySize> <rept-fParams3>
ROW: rept-fParams3, at value: 6
COLUMN : ., at value: 29
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : id, at value: 21
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : ], at value: 10
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : private, at value: 9
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : }, at value: 4
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : then, at value: 0
Table entry: <rept-fParams3> ::= EPSILON 
ROW: rept-fParams3, at value: 6
COLUMN : :, at value: 3
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : or, at value: 7
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : ), at value: 5
Table entry: <rept-fParams3> ::= EPSILON 
ROW: rept-fParams3, at value: 6
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : class, at value: 11
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : *, at value: 12
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : read, at value: 14
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : while, at value: 15
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : return, at value: 16
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : write, at value: 17
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : (, at value: 18
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : local, at value: 19
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : not, at value: 20
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : function, at value: 28
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : -, at value: 27
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : self, at value: 22
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : $, at value: 23
Table entry: error
ROW: rept-fParams3, at value: 6
COLUMN : void, at value: 25
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : intnum, at value: 49
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : if, at value: 48
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : ;, at value: 47
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : float, at value: 46
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : +, at value: 45
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : int, at value: 44
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : <=, at value: 43
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : >, at value: 42
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : and, at value: 41
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : ,, at value: 40
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : :=, at value: 39
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : <, at value: 38
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : <>, at value: 37
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : implementation, at value: 36
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : public, at value: 35
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : ==, at value: 34
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : /, at value: 33
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : {, at value: 32
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : else, at value: 31
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : [, at value: 30
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : ., at value: 29
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : id, at value: 21
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : ], at value: 10
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : private, at value: 9
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : attribute, at value: 6
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : }, at value: 4
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : then, at value: 0
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : :, at value: 3
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : isa, at value: 8
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : or, at value: 7
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : ), at value: 5
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : =>, at value: 1
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : class, at value: 11
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : *, at value: 12
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : >=, at value: 13
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : read, at value: 14
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : while, at value: 15
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : return, at value: 16
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : write, at value: 17
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : (, at value: 18
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : local, at value: 19
Table entry: <localVarDeclOrStat> ::= <localVarDecl> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : not, at value: 20
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : function, at value: 28
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : -, at value: 27
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : self, at value: 22
Table entry: <localVarDeclOrStat> ::= <statement> 
ROW: localVarDeclOrStat, at value: 5
COLUMN : floatnum, at value: 26
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : $, at value: 23
Table entry: error
ROW: localVarDeclOrStat, at value: 5
COLUMN : void, at value: 25
Table entry: error
ROW: expr2, at value: 10
COLUMN : EPSILON, at value: 0
Table entry: <expr2> ::= EPSILON #p
ROW: expr2, at value: 10
COLUMN : intnum, at value: 49
Table entry: error
ROW: expr2, at value: 10
COLUMN : if, at value: 48
Table entry: error
ROW: expr2, at value: 10
COLUMN : ;, at value: 47
Table entry: <expr2> ::= EPSILON #p
ROW: expr2, at value: 10
COLUMN : float, at value: 46
Table entry: error
ROW: expr2, at value: 10
COLUMN : +, at value: 45
Table entry: error
ROW: expr2, at value: 10
COLUMN : int, at value: 44
Table entry: error
ROW: expr2, at value: 10
COLUMN : <=, at value: 43
Table entry: <expr2> ::= <relOp> <arithExpr> #expr2
ROW: expr2, at value: 10
COLUMN : >, at value: 42
Table entry: <expr2> ::= <relOp> <arithExpr> #expr2
ROW: expr2, at value: 10
COLUMN : and, at value: 41
Table entry: error
ROW: expr2, at value: 10
COLUMN : ,, at value: 40
Table entry: <expr2> ::= EPSILON #p
ROW: expr2, at value: 10
COLUMN : :=, at value: 39
Table entry: error
ROW: expr2, at value: 10
COLUMN : <, at value: 38
Table entry: <expr2> ::= <relOp> <arithExpr> #expr2
ROW: expr2, at value: 10
COLUMN : <>, at value: 37
Table entry: <expr2> ::= <relOp> <arithExpr> #expr2
ROW: expr2, at value: 10
COLUMN : implementation, at value: 36
Table entry: error
ROW: expr2, at value: 10
COLUMN : public, at value: 35
Table entry: error
ROW: expr2, at value: 10
COLUMN : ==, at value: 34
Table entry: <expr2> ::= <relOp> <arithExpr> #expr2
ROW: expr2, at value: 10
COLUMN : /, at value: 33
Table entry: error
ROW: expr2, at value: 10
COLUMN : {, at value: 32
Table entry: error
ROW: expr2, at value: 10
COLUMN : else, at value: 31
Table entry: error
ROW: expr2, at value: 10
COLUMN : [, at value: 30
Table entry: error
ROW: expr2, at value: 10
COLUMN : ., at value: 29
Table entry: error
ROW: expr2, at value: 10
COLUMN : id, at value: 21
Table entry: error
ROW: expr2, at value: 10
COLUMN : ], at value: 10
Table entry: error
ROW: expr2, at value: 10
COLUMN : private, at value: 9
Table entry: error
ROW: expr2, at value: 10
COLUMN : attribute, at value: 6
Table entry: error
ROW: expr2, at value: 10
COLUMN : }, at value: 4
Table entry: error
ROW: expr2, at value: 10
COLUMN : then, at value: 0
Table entry: <expr2> ::= EPSILON #p
ROW: expr2, at value: 10
COLUMN : :, at value: 3
Table entry: error
ROW: expr2, at value: 10
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: expr2, at value: 10
COLUMN : isa, at value: 8
Table entry: error
ROW: expr2, at value: 10
COLUMN : or, at value: 7
Table entry: error
ROW: expr2, at value: 10
COLUMN : ), at value: 5
Table entry: <expr2> ::= EPSILON #p
ROW: expr2, at value: 10
COLUMN : =>, at value: 1
Table entry: error
ROW: expr2, at value: 10
COLUMN : class, at value: 11
Table entry: error
ROW: expr2, at value: 10
COLUMN : *, at value: 12
Table entry: error
ROW: expr2, at value: 10
COLUMN : >=, at value: 13
Table entry: <expr2> ::= <relOp> <arithExpr> #expr2
ROW: expr2, at value: 10
COLUMN : read, at value: 14
Table entry: error
ROW: expr2, at value: 10
COLUMN : while, at value: 15
Table entry: error
ROW: expr2, at value: 10
COLUMN : return, at value: 16
Table entry: error
ROW: expr2, at value: 10
COLUMN : write, at value: 17
Table entry: error
ROW: expr2, at value: 10
COLUMN : (, at value: 18
Table entry: error
ROW: expr2, at value: 10
COLUMN : local, at value: 19
Table entry: error
ROW: expr2, at value: 10
COLUMN : not, at value: 20
Table entry: error
ROW: expr2, at value: 10
COLUMN : function, at value: 28
Table entry: error
ROW: expr2, at value: 10
COLUMN : -, at value: 27
Table entry: error
ROW: expr2, at value: 10
COLUMN : self, at value: 22
Table entry: error
ROW: expr2, at value: 10
COLUMN : floatnum, at value: 26
Table entry: error
ROW: expr2, at value: 10
COLUMN : $, at value: 23
Table entry: error
ROW: expr2, at value: 10
COLUMN : void, at value: 25
Table entry: error
ROW: funcBody, at value: 9
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: funcBody, at value: 9
COLUMN : intnum, at value: 49
Table entry: error
ROW: funcBody, at value: 9
COLUMN : if, at value: 48
Table entry: error
ROW: funcBody, at value: 9
COLUMN : ;, at value: 47
Table entry: error
ROW: funcBody, at value: 9
COLUMN : float, at value: 46
Table entry: error
ROW: funcBody, at value: 9
COLUMN : +, at value: 45
Table entry: error
ROW: funcBody, at value: 9
COLUMN : int, at value: 44
Table entry: error
ROW: funcBody, at value: 9
COLUMN : <=, at value: 43
Table entry: error
ROW: funcBody, at value: 9
COLUMN : >, at value: 42
Table entry: error
ROW: funcBody, at value: 9
COLUMN : and, at value: 41
Table entry: error
ROW: funcBody, at value: 9
COLUMN : ,, at value: 40
Table entry: error
ROW: funcBody, at value: 9
COLUMN : :=, at value: 39
Table entry: error
ROW: funcBody, at value: 9
COLUMN : <, at value: 38
Table entry: error
ROW: funcBody, at value: 9
COLUMN : <>, at value: 37
Table entry: error
ROW: funcBody, at value: 9
COLUMN : implementation, at value: 36
Table entry: error
ROW: funcBody, at value: 9
COLUMN : public, at value: 35
Table entry: error
ROW: funcBody, at value: 9
COLUMN : ==, at value: 34
Table entry: error
ROW: funcBody, at value: 9
COLUMN : /, at value: 33
Table entry: error
ROW: funcBody, at value: 9
COLUMN : {, at value: 32
Table entry: <funcBody> ::= '{' #p <rept-funcBody1> #reptfuncbody1 #funcbody '}' 
ROW: funcBody, at value: 9
COLUMN : else, at value: 31
Table entry: error
ROW: funcBody, at value: 9
COLUMN : [, at value: 30
Table entry: error
ROW: funcBody, at value: 9
COLUMN : ., at value: 29
Table entry: error
ROW: funcBody, at value: 9
COLUMN : id, at value: 21
Table entry: error
ROW: funcBody, at value: 9
COLUMN : ], at value: 10
Table entry: error
ROW: funcBody, at value: 9
COLUMN : private, at value: 9
Table entry: error
ROW: funcBody, at value: 9
COLUMN : attribute, at value: 6
Table entry: error
ROW: funcBody, at value: 9
COLUMN : }, at value: 4
Table entry: error
ROW: funcBody, at value: 9
COLUMN : then, at value: 0
Table entry: error
ROW: funcBody, at value: 9
COLUMN : :, at value: 3
Table entry: error
ROW: funcBody, at value: 9
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: funcBody, at value: 9
COLUMN : isa, at value: 8
Table entry: error
ROW: funcBody, at value: 9
COLUMN : or, at value: 7
Table entry: error
ROW: funcBody, at value: 9
COLUMN : ), at value: 5
Table entry: error
ROW: funcBody, at value: 9
COLUMN : =>, at value: 1
Table entry: error
ROW: funcBody, at value: 9
COLUMN : class, at value: 11
Table entry: error
ROW: funcBody, at value: 9
COLUMN : *, at value: 12
Table entry: error
ROW: funcBody, at value: 9
COLUMN : >=, at value: 13
Table entry: error
ROW: funcBody, at value: 9
COLUMN : read, at value: 14
Table entry: error
ROW: funcBody, at value: 9
COLUMN : while, at value: 15
Table entry: error
ROW: funcBody, at value: 9
COLUMN : return, at value: 16
Table entry: error
ROW: funcBody, at value: 9
COLUMN : write, at value: 17
Table entry: error
ROW: funcBody, at value: 9
COLUMN : (, at value: 18
Table entry: error
ROW: funcBody, at value: 9
COLUMN : local, at value: 19
Table entry: error
ROW: funcBody, at value: 9
COLUMN : not, at value: 20
Table entry: error
ROW: funcBody, at value: 9
COLUMN : function, at value: 28
Table entry: error
ROW: funcBody, at value: 9
COLUMN : -, at value: 27
Table entry: error
ROW: funcBody, at value: 9
COLUMN : self, at value: 22
Table entry: error
ROW: funcBody, at value: 9
COLUMN : floatnum, at value: 26
Table entry: error
ROW: funcBody, at value: 9
COLUMN : $, at value: 23
Table entry: error
ROW: funcBody, at value: 9
COLUMN : void, at value: 25
Table entry: error
ROW: returnType, at value: 11
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: returnType, at value: 11
COLUMN : intnum, at value: 49
Table entry: error
ROW: returnType, at value: 11
COLUMN : if, at value: 48
Table entry: error
ROW: returnType, at value: 11
COLUMN : ;, at value: 47
Table entry: error
ROW: returnType, at value: 11
COLUMN : float, at value: 46
Table entry: <returnType> ::= <type> #returntype
ROW: returnType, at value: 11
COLUMN : +, at value: 45
Table entry: error
ROW: returnType, at value: 11
COLUMN : int, at value: 44
Table entry: <returnType> ::= <type> #returntype
ROW: returnType, at value: 11
COLUMN : <=, at value: 43
Table entry: error
ROW: returnType, at value: 11
COLUMN : >, at value: 42
Table entry: error
ROW: returnType, at value: 11
COLUMN : and, at value: 41
Table entry: error
ROW: returnType, at value: 11
COLUMN : ,, at value: 40
Table entry: error
ROW: returnType, at value: 11
COLUMN : :=, at value: 39
Table entry: error
ROW: returnType, at value: 11
COLUMN : <, at value: 38
Table entry: error
ROW: returnType, at value: 11
COLUMN : <>, at value: 37
Table entry: error
ROW: returnType, at value: 11
COLUMN : implementation, at value: 36
Table entry: error
ROW: returnType, at value: 11
COLUMN : public, at value: 35
Table entry: error
ROW: returnType, at value: 11
COLUMN : ==, at value: 34
Table entry: error
ROW: returnType, at value: 11
COLUMN : /, at value: 33
Table entry: error
ROW: returnType, at value: 11
COLUMN : {, at value: 32
Table entry: error
ROW: returnType, at value: 11
COLUMN : else, at value: 31
Table entry: error
ROW: returnType, at value: 11
COLUMN : [, at value: 30
Table entry: error
ROW: returnType, at value: 11
COLUMN : ., at value: 29
Table entry: error
ROW: returnType, at value: 11
COLUMN : id, at value: 21
Table entry: <returnType> ::= <type> #returntype
ROW: returnType, at value: 11
COLUMN : ], at value: 10
Table entry: error
ROW: returnType, at value: 11
COLUMN : private, at value: 9
Table entry: error
ROW: returnType, at value: 11
COLUMN : attribute, at value: 6
Table entry: error
ROW: returnType, at value: 11
COLUMN : }, at value: 4
Table entry: error
ROW: returnType, at value: 11
COLUMN : then, at value: 0
Table entry: error
ROW: returnType, at value: 11
COLUMN : :, at value: 3
Table entry: error
ROW: returnType, at value: 11
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: returnType, at value: 11
COLUMN : isa, at value: 8
Table entry: error
ROW: returnType, at value: 11
COLUMN : or, at value: 7
Table entry: error
ROW: returnType, at value: 11
COLUMN : ), at value: 5
Table entry: error
ROW: returnType, at value: 11
COLUMN : =>, at value: 1
Table entry: error
ROW: returnType, at value: 11
COLUMN : class, at value: 11
Table entry: error
ROW: returnType, at value: 11
COLUMN : *, at value: 12
Table entry: error
ROW: returnType, at value: 11
COLUMN : >=, at value: 13
Table entry: error
ROW: returnType, at value: 11
COLUMN : read, at value: 14
Table entry: error
ROW: returnType, at value: 11
COLUMN : while, at value: 15
Table entry: error
ROW: returnType, at value: 11
COLUMN : return, at value: 16
Table entry: error
ROW: returnType, at value: 11
COLUMN : write, at value: 17
Table entry: error
ROW: returnType, at value: 11
COLUMN : (, at value: 18
Table entry: error
ROW: returnType, at value: 11
COLUMN : local, at value: 19
Table entry: error
ROW: returnType, at value: 11
COLUMN : not, at value: 20
Table entry: error
ROW: returnType, at value: 11
COLUMN : function, at value: 28
Table entry: error
ROW: returnType, at value: 11
COLUMN : -, at value: 27
Table entry: error
ROW: returnType, at value: 11
COLUMN : self, at value: 22
Table entry: error
ROW: returnType, at value: 11
COLUMN : floatnum, at value: 26
Table entry: error
ROW: returnType, at value: 11
COLUMN : $, at value: 23
Table entry: error
ROW: returnType, at value: 11
COLUMN : void, at value: 25
Table entry: <returnType> ::= 'void' #void #returntype
ROW: variable, at value: 1
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: variable, at value: 1
COLUMN : intnum, at value: 49
Table entry: error
ROW: variable, at value: 1
COLUMN : if, at value: 48
Table entry: error
ROW: variable, at value: 1
COLUMN : ;, at value: 47
Table entry: error
ROW: variable, at value: 1
COLUMN : float, at value: 46
Table entry: error
ROW: variable, at value: 1
COLUMN : +, at value: 45
Table entry: error
ROW: variable, at value: 1
COLUMN : int, at value: 44
Table entry: error
ROW: variable, at value: 1
COLUMN : <=, at value: 43
Table entry: error
ROW: variable, at value: 1
COLUMN : >, at value: 42
Table entry: error
ROW: variable, at value: 1
COLUMN : and, at value: 41
Table entry: error
ROW: variable, at value: 1
COLUMN : ,, at value: 40
Table entry: error
ROW: variable, at value: 1
COLUMN : :=, at value: 39
Table entry: error
ROW: variable, at value: 1
COLUMN : <, at value: 38
Table entry: error
ROW: variable, at value: 1
COLUMN : <>, at value: 37
Table entry: error
ROW: variable, at value: 1
COLUMN : implementation, at value: 36
Table entry: error
ROW: variable, at value: 1
COLUMN : public, at value: 35
Table entry: error
ROW: variable, at value: 1
COLUMN : ==, at value: 34
Table entry: error
ROW: variable, at value: 1
COLUMN : /, at value: 33
Table entry: error
ROW: variable, at value: 1
COLUMN : {, at value: 32
Table entry: error
ROW: variable, at value: 1
COLUMN : else, at value: 31
Table entry: error
ROW: variable, at value: 1
COLUMN : [, at value: 30
Table entry: error
ROW: variable, at value: 1
COLUMN : ., at value: 29
Table entry: error
ROW: variable, at value: 1
COLUMN : id, at value: 21
Table entry: <variable> ::= 'id' #id <variable2> 
ROW: variable, at value: 1
COLUMN : ], at value: 10
Table entry: error
ROW: variable, at value: 1
COLUMN : private, at value: 9
Table entry: error
ROW: variable, at value: 1
COLUMN : attribute, at value: 6
Table entry: error
ROW: variable, at value: 1
COLUMN : }, at value: 4
Table entry: error
ROW: variable, at value: 1
COLUMN : then, at value: 0
Table entry: error
ROW: variable, at value: 1
COLUMN : :, at value: 3
Table entry: error
ROW: variable, at value: 1
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: variable, at value: 1
COLUMN : isa, at value: 8
Table entry: error
ROW: variable, at value: 1
COLUMN : or, at value: 7
Table entry: error
ROW: variable, at value: 1
COLUMN : ), at value: 5
Table entry: error
ROW: variable, at value: 1
COLUMN : =>, at value: 1
Table entry: error
ROW: variable, at value: 1
COLUMN : class, at value: 11
Table entry: error
ROW: variable, at value: 1
COLUMN : *, at value: 12
Table entry: error
ROW: variable, at value: 1
COLUMN : >=, at value: 13
Table entry: error
ROW: variable, at value: 1
COLUMN : read, at value: 14
Table entry: error
ROW: variable, at value: 1
COLUMN : while, at value: 15
Table entry: error
ROW: variable, at value: 1
COLUMN : return, at value: 16
Table entry: error
ROW: variable, at value: 1
COLUMN : write, at value: 17
Table entry: error
ROW: variable, at value: 1
COLUMN : (, at value: 18
Table entry: error
ROW: variable, at value: 1
COLUMN : local, at value: 19
Table entry: error
ROW: variable, at value: 1
COLUMN : not, at value: 20
Table entry: error
ROW: variable, at value: 1
COLUMN : function, at value: 28
Table entry: error
ROW: variable, at value: 1
COLUMN : -, at value: 27
Table entry: error
ROW: variable, at value: 1
COLUMN : self, at value: 22
Table entry: <variable> ::= 'self' #self <idnest2> #selfandidnest2 <variable> #dot
ROW: variable, at value: 1
COLUMN : floatnum, at value: 26
Table entry: error
ROW: variable, at value: 1
COLUMN : $, at value: 23
Table entry: error
ROW: variable, at value: 1
COLUMN : void, at value: 25
Table entry: error
ROW: funcHead, at value: 4
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: funcHead, at value: 4
COLUMN : intnum, at value: 49
Table entry: error
ROW: funcHead, at value: 4
COLUMN : if, at value: 48
Table entry: error
ROW: funcHead, at value: 4
COLUMN : ;, at value: 47
Table entry: error
ROW: funcHead, at value: 4
COLUMN : float, at value: 46
Table entry: error
ROW: funcHead, at value: 4
COLUMN : +, at value: 45
Table entry: error
ROW: funcHead, at value: 4
COLUMN : int, at value: 44
Table entry: error
ROW: funcHead, at value: 4
COLUMN : <=, at value: 43
Table entry: error
ROW: funcHead, at value: 4
COLUMN : >, at value: 42
Table entry: error
ROW: funcHead, at value: 4
COLUMN : and, at value: 41
Table entry: error
ROW: funcHead, at value: 4
COLUMN : ,, at value: 40
Table entry: error
ROW: funcHead, at value: 4
COLUMN : :=, at value: 39
Table entry: error
ROW: funcHead, at value: 4
COLUMN : <, at value: 38
Table entry: error
ROW: funcHead, at value: 4
COLUMN : <>, at value: 37
Table entry: error
ROW: funcHead, at value: 4
COLUMN : implementation, at value: 36
Table entry: error
ROW: funcHead, at value: 4
COLUMN : public, at value: 35
Table entry: error
ROW: funcHead, at value: 4
COLUMN : ==, at value: 34
Table entry: error
ROW: funcHead, at value: 4
COLUMN : /, at value: 33
Table entry: error
ROW: funcHead, at value: 4
COLUMN : {, at value: 32
Table entry: error
ROW: funcHead, at value: 4
COLUMN : else, at value: 31
Table entry: error
ROW: funcHead, at value: 4
COLUMN : [, at value: 30
Table entry: error
ROW: funcHead, at value: 4
COLUMN : ., at value: 29
Table entry: error
ROW: funcHead, at value: 4
COLUMN : id, at value: 21
Table entry: error
ROW: funcHead, at value: 4
COLUMN : ], at value: 10
Table entry: error
ROW: funcHead, at value: 4
COLUMN : private, at value: 9
Table entry: error
ROW: funcHead, at value: 4
COLUMN : attribute, at value: 6
Table entry: error
ROW: funcHead, at value: 4
COLUMN : }, at value: 4
Table entry: error
ROW: funcHead, at value: 4
COLUMN : then, at value: 0
Table entry: error
ROW: funcHead, at value: 4
COLUMN : :, at value: 3
Table entry: error
ROW: funcHead, at value: 4
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: funcHead, at value: 4
COLUMN : isa, at value: 8
Table entry: error
ROW: funcHead, at value: 4
COLUMN : or, at value: 7
Table entry: error
ROW: funcHead, at value: 4
COLUMN : ), at value: 5
Table entry: error
ROW: funcHead, at value: 4
COLUMN : =>, at value: 1
Table entry: error
ROW: funcHead, at value: 4
COLUMN : class, at value: 11
Table entry: error
ROW: funcHead, at value: 4
COLUMN : *, at value: 12
Table entry: error
ROW: funcHead, at value: 4
COLUMN : >=, at value: 13
Table entry: error
ROW: funcHead, at value: 4
COLUMN : read, at value: 14
Table entry: error
ROW: funcHead, at value: 4
COLUMN : while, at value: 15
Table entry: error
ROW: funcHead, at value: 4
COLUMN : return, at value: 16
Table entry: error
ROW: funcHead, at value: 4
COLUMN : write, at value: 17
Table entry: error
ROW: funcHead, at value: 4
COLUMN : (, at value: 18
Table entry: error
ROW: funcHead, at value: 4
COLUMN : local, at value: 19
Table entry: error
ROW: funcHead, at value: 4
COLUMN : not, at value: 20
Table entry: error
ROW: funcHead, at value: 4
COLUMN : function, at value: 28
Table entry: <funcHead> ::= 'function' #p 'id' #id '(' <fParams> ')' '=>' <returnType> #funchead
ROW: funcHead, at value: 4
COLUMN : -, at value: 27
Table entry: error
ROW: funcHead, at value: 4
COLUMN : self, at value: 22
Table entry: error
ROW: funcHead, at value: 4
COLUMN : floatnum, at value: 26
Table entry: error
ROW: funcHead, at value: 4
COLUMN : $, at value: 23
Table entry: error
ROW: funcHead, at value: 4
COLUMN : void, at value: 25
Table entry: error
ROW: idnest2, at value: 3
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: idnest2, at value: 3
COLUMN : intnum, at value: 49
Table entry: error
ROW: idnest2, at value: 3
COLUMN : if, at value: 48
Table entry: error
ROW: idnest2, at value: 3
COLUMN : ;, at value: 47
Table entry: error
ROW: idnest2, at value: 3
COLUMN : float, at value: 46
Table entry: error
ROW: idnest2, at value: 3
COLUMN : +, at value: 45
Table entry: error
ROW: idnest2, at value: 3
COLUMN : int, at value: 44
Table entry: error
ROW: idnest2, at value: 3
COLUMN : <=, at value: 43
Table entry: error
ROW: idnest2, at value: 3
COLUMN : >, at value: 42
Table entry: error
ROW: idnest2, at value: 3
COLUMN : and, at value: 41
Table entry: error
ROW: idnest2, at value: 3
COLUMN : ,, at value: 40
Table entry: error
ROW: idnest2, at value: 3
COLUMN : :=, at value: 39
Table entry: error
ROW: idnest2, at value: 3
COLUMN : <, at value: 38
Table entry: error
ROW: idnest2, at value: 3
COLUMN : <>, at value: 37
Table entry: error
ROW: idnest2, at value: 3
COLUMN : implementation, at value: 36
Table entry: error
ROW: idnest2, at value: 3
COLUMN : public, at value: 35
Table entry: error
ROW: idnest2, at value: 3
COLUMN : ==, at value: 34
Table entry: error
ROW: idnest2, at value: 3
COLUMN : /, at value: 33
Table entry: error
ROW: idnest2, at value: 3
COLUMN : {, at value: 32
Table entry: error
ROW: idnest2, at value: 3
COLUMN : else, at value: 31
Table entry: error
ROW: idnest2, at value: 3
COLUMN : [, at value: 30
Table entry: <idnest2> ::= #p <rept-variable2> #reptvariable2 #idnest2 '.' 
ROW: idnest2, at value: 3
COLUMN : ., at value: 29
Table entry: <idnest2> ::= #p <rept-variable2> #reptvariable2 #idnest2 '.' 
ROW: idnest2, at value: 3
COLUMN : id, at value: 21
Table entry: error
ROW: idnest2, at value: 3
COLUMN : ], at value: 10
Table entry: error
ROW: idnest2, at value: 3
COLUMN : private, at value: 9
Table entry: error
ROW: idnest2, at value: 3
COLUMN : attribute, at value: 6
Table entry: error
ROW: idnest2, at value: 3
COLUMN : }, at value: 4
Table entry: error
ROW: idnest2, at value: 3
COLUMN : then, at value: 0
Table entry: error
ROW: idnest2, at value: 3
COLUMN : :, at value: 3
Table entry: error
ROW: idnest2, at value: 3
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: idnest2, at value: 3
COLUMN : isa, at value: 8
Table entry: error
ROW: idnest2, at value: 3
COLUMN : or, at value: 7
Table entry: error
ROW: idnest2, at value: 3
COLUMN : ), at value: 5
Table entry: error
ROW: idnest2, at value: 3
COLUMN : =>, at value: 1
Table entry: error
ROW: idnest2, at value: 3
COLUMN : class, at value: 11
Table entry: error
ROW: idnest2, at value: 3
COLUMN : *, at value: 12
Table entry: error
ROW: idnest2, at value: 3
COLUMN : >=, at value: 13
Table entry: error
ROW: idnest2, at value: 3
COLUMN : read, at value: 14
Table entry: error
ROW: idnest2, at value: 3
COLUMN : while, at value: 15
Table entry: error
ROW: idnest2, at value: 3
COLUMN : return, at value: 16
Table entry: error
ROW: idnest2, at value: 3
COLUMN : write, at value: 17
Table entry: error
ROW: idnest2, at value: 3
COLUMN : (, at value: 18
Table entry: <idnest2> ::= '(' #p <aParams> ')' #idnest2 '.' 
ROW: idnest2, at value: 3
COLUMN : local, at value: 19
Table entry: error
ROW: idnest2, at value: 3
COLUMN : not, at value: 20
Table entry: error
ROW: idnest2, at value: 3
COLUMN : function, at value: 28
Table entry: error
ROW: idnest2, at value: 3
COLUMN : -, at value: 27
Table entry: error
ROW: idnest2, at value: 3
COLUMN : self, at value: 22
Table entry: error
ROW: idnest2, at value: 3
COLUMN : floatnum, at value: 26
Table entry: error
ROW: idnest2, at value: 3
COLUMN : $, at value: 23
Table entry: error
ROW: idnest2, at value: 3
COLUMN : void, at value: 25
Table entry: error
ROW: variable3, at value: 7
COLUMN : EPSILON, at value: 0
Table entry: <variable3> ::= EPSILON 
ROW: variable3, at value: 7
COLUMN : intnum, at value: 49
Table entry: error
ROW: variable3, at value: 7
COLUMN : if, at value: 48
Table entry: error
ROW: variable3, at value: 7
COLUMN : ;, at value: 47
Table entry: error
ROW: variable3, at value: 7
COLUMN : float, at value: 46
Table entry: error
ROW: variable3, at value: 7
COLUMN : +, at value: 45
Table entry: error
ROW: variable3, at value: 7
COLUMN : int, at value: 44
Table entry: error
ROW: variable3, at value: 7
COLUMN : <=, at value: 43
Table entry: error
ROW: variable3, at value: 7
COLUMN : >, at value: 42
Table entry: error
ROW: variable3, at value: 7
COLUMN : and, at value: 41
Table entry: error
ROW: variable3, at value: 7
COLUMN : ,, at value: 40
Table entry: error
ROW: variable3, at value: 7
COLUMN : :=, at value: 39
Table entry: error
ROW: variable3, at value: 7
COLUMN : <, at value: 38
Table entry: error
ROW: variable3, at value: 7
COLUMN : <>, at value: 37
Table entry: error
ROW: variable3, at value: 7
COLUMN : implementation, at value: 36
Table entry: error
ROW: variable3, at value: 7
COLUMN : public, at value: 35
Table entry: error
ROW: variable3, at value: 7
COLUMN : ==, at value: 34
Table entry: error
ROW: variable3, at value: 7
COLUMN : /, at value: 33
Table entry: error
ROW: variable3, at value: 7
COLUMN : {, at value: 32
Table entry: error
ROW: variable3, at value: 7
COLUMN : else, at value: 31
Table entry: error
ROW: variable3, at value: 7
COLUMN : [, at value: 30
Table entry: error
ROW: variable3, at value: 7
COLUMN : ., at value: 29
Table entry: <variable3> ::= '.' <variable> #dot 
ROW: variable3, at value: 7
COLUMN : id, at value: 21
Table entry: error
ROW: variable3, at value: 7
COLUMN : ], at value: 10
Table entry: error
ROW: variable3, at value: 7
COLUMN : private, at value: 9
Table entry: error
ROW: variable3, at value: 7
COLUMN : attribute, at value: 6
Table entry: error
ROW: variable3, at value: 7
COLUMN : }, at value: 4
Table entry: error
ROW: variable3, at value: 7
COLUMN : then, at value: 0
Table entry: <variable3> ::= EPSILON 
ROW: variable3, at value: 7
COLUMN : :, at value: 3
Table entry: error
ROW: variable3, at value: 7
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: variable3, at value: 7
COLUMN : isa, at value: 8
Table entry: error
ROW: variable3, at value: 7
COLUMN : or, at value: 7
Table entry: error
ROW: variable3, at value: 7
COLUMN : ), at value: 5
Table entry: <variable3> ::= EPSILON 
ROW: variable3, at value: 7
COLUMN : =>, at value: 1
Table entry: error
ROW: variable3, at value: 7
COLUMN : class, at value: 11
Table entry: error
ROW: variable3, at value: 7
COLUMN : *, at value: 12
Table entry: error
ROW: variable3, at value: 7
COLUMN : >=, at value: 13
Table entry: error
ROW: variable3, at value: 7
COLUMN : read, at value: 14
Table entry: error
ROW: variable3, at value: 7
COLUMN : while, at value: 15
Table entry: error
ROW: variable3, at value: 7
COLUMN : return, at value: 16
Table entry: error
ROW: variable3, at value: 7
COLUMN : write, at value: 17
Table entry: error
ROW: variable3, at value: 7
COLUMN : (, at value: 18
Table entry: error
ROW: variable3, at value: 7
COLUMN : local, at value: 19
Table entry: error
ROW: variable3, at value: 7
COLUMN : not, at value: 20
Table entry: error
ROW: variable3, at value: 7
COLUMN : function, at value: 28
Table entry: error
ROW: variable3, at value: 7
COLUMN : -, at value: 27
Table entry: error
ROW: variable3, at value: 7
COLUMN : self, at value: 22
Table entry: error
ROW: variable3, at value: 7
COLUMN : floatnum, at value: 26
Table entry: error
ROW: variable3, at value: 7
COLUMN : $, at value: 23
Table entry: error
ROW: variable3, at value: 7
COLUMN : void, at value: 25
Table entry: error
ROW: funcDef, at value: 8
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: funcDef, at value: 8
COLUMN : intnum, at value: 49
Table entry: error
ROW: funcDef, at value: 8
COLUMN : if, at value: 48
Table entry: error
ROW: funcDef, at value: 8
COLUMN : ;, at value: 47
Table entry: error
ROW: funcDef, at value: 8
COLUMN : float, at value: 46
Table entry: error
ROW: funcDef, at value: 8
COLUMN : +, at value: 45
Table entry: error
ROW: funcDef, at value: 8
COLUMN : int, at value: 44
Table entry: error
ROW: funcDef, at value: 8
COLUMN : <=, at value: 43
Table entry: error
ROW: funcDef, at value: 8
COLUMN : >, at value: 42
Table entry: error
ROW: funcDef, at value: 8
COLUMN : and, at value: 41
Table entry: error
ROW: funcDef, at value: 8
COLUMN : ,, at value: 40
Table entry: error
ROW: funcDef, at value: 8
COLUMN : :=, at value: 39
Table entry: error
ROW: funcDef, at value: 8
COLUMN : <, at value: 38
Table entry: error
ROW: funcDef, at value: 8
COLUMN : <>, at value: 37
Table entry: error
ROW: funcDef, at value: 8
COLUMN : implementation, at value: 36
Table entry: error
ROW: funcDef, at value: 8
COLUMN : public, at value: 35
Table entry: error
ROW: funcDef, at value: 8
COLUMN : ==, at value: 34
Table entry: error
ROW: funcDef, at value: 8
COLUMN : /, at value: 33
Table entry: error
ROW: funcDef, at value: 8
COLUMN : {, at value: 32
Table entry: error
ROW: funcDef, at value: 8
COLUMN : else, at value: 31
Table entry: error
ROW: funcDef, at value: 8
COLUMN : [, at value: 30
Table entry: error
ROW: funcDef, at value: 8
COLUMN : ., at value: 29
Table entry: error
ROW: funcDef, at value: 8
COLUMN : id, at value: 21
Table entry: error
ROW: funcDef, at value: 8
COLUMN : ], at value: 10
Table entry: error
ROW: funcDef, at value: 8
COLUMN : private, at value: 9
Table entry: error
ROW: funcDef, at value: 8
COLUMN : attribute, at value: 6
Table entry: error
ROW: funcDef, at value: 8
COLUMN : }, at value: 4
Table entry: error
ROW: funcDef, at value: 8
COLUMN : then, at value: 0
Table entry: error
ROW: funcDef, at value: 8
COLUMN : :, at value: 3
Table entry: error
ROW: funcDef, at value: 8
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: funcDef, at value: 8
COLUMN : isa, at value: 8
Table entry: error
ROW: funcDef, at value: 8
COLUMN : or, at value: 7
Table entry: error
ROW: funcDef, at value: 8
COLUMN : ), at value: 5
Table entry: error
ROW: funcDef, at value: 8
COLUMN : =>, at value: 1
Table entry: error
ROW: funcDef, at value: 8
COLUMN : class, at value: 11
Table entry: error
ROW: funcDef, at value: 8
COLUMN : *, at value: 12
Table entry: error
ROW: funcDef, at value: 8
COLUMN : >=, at value: 13
Table entry: error
ROW: funcDef, at value: 8
COLUMN : read, at value: 14
Table entry: error
ROW: funcDef, at value: 8
COLUMN : while, at value: 15
Table entry: error
ROW: funcDef, at value: 8
COLUMN : return, at value: 16
Table entry: error
ROW: funcDef, at value: 8
COLUMN : write, at value: 17
Table entry: error
ROW: funcDef, at value: 8
COLUMN : (, at value: 18
Table entry: error
ROW: funcDef, at value: 8
COLUMN : local, at value: 19
Table entry: error
ROW: funcDef, at value: 8
COLUMN : not, at value: 20
Table entry: error
ROW: funcDef, at value: 8
COLUMN : function, at value: 28
Table entry: <funcDef> ::= <funcHead> <funcBody> #funcdef
ROW: funcDef, at value: 8
COLUMN : -, at value: 27
Table entry: error
ROW: funcDef, at value: 8
COLUMN : self, at value: 22
Table entry: error
ROW: funcDef, at value: 8
COLUMN : floatnum, at value: 26
Table entry: error
ROW: funcDef, at value: 8
COLUMN : $, at value: 23
Table entry: error
ROW: funcDef, at value: 8
COLUMN : void, at value: 25
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : EPSILON, at value: 0
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : if, at value: 48
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : ;, at value: 47
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : float, at value: 46
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : +, at value: 45
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : int, at value: 44
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : <=, at value: 43
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : >, at value: 42
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : and, at value: 41
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : ,, at value: 40
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : <, at value: 38
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : <>, at value: 37
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : public, at value: 35
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : ==, at value: 34
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : /, at value: 33
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : {, at value: 32
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : else, at value: 31
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : [, at value: 30
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : ., at value: 29
Table entry: <rept-factor3> ::= '.' <rept-factor> #dot
ROW: rept-factor3, at value: 12
COLUMN : id, at value: 21
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : ], at value: 10
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : private, at value: 9
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : }, at value: 4
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : then, at value: 0
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : :, at value: 3
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : or, at value: 7
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : ), at value: 5
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : class, at value: 11
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : *, at value: 12
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : >=, at value: 13
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : read, at value: 14
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : while, at value: 15
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : return, at value: 16
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : write, at value: 17
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : (, at value: 18
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : local, at value: 19
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : not, at value: 20
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : function, at value: 28
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : -, at value: 27
Table entry: <rept-factor3> ::= EPSILON
ROW: rept-factor3, at value: 12
COLUMN : self, at value: 22
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : $, at value: 23
Table entry: error
ROW: rept-factor3, at value: 12
COLUMN : void, at value: 25
Table entry: error
ROW: aParams, at value: 29
COLUMN : EPSILON, at value: 0
Table entry: <aParams> ::= EPSILON 
ROW: aParams, at value: 29
COLUMN : intnum, at value: 49
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : if, at value: 48
Table entry: error
ROW: aParams, at value: 29
COLUMN : ;, at value: 47
Table entry: error
ROW: aParams, at value: 29
COLUMN : float, at value: 46
Table entry: error
ROW: aParams, at value: 29
COLUMN : +, at value: 45
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : int, at value: 44
Table entry: error
ROW: aParams, at value: 29
COLUMN : <=, at value: 43
Table entry: error
ROW: aParams, at value: 29
COLUMN : >, at value: 42
Table entry: error
ROW: aParams, at value: 29
COLUMN : and, at value: 41
Table entry: error
ROW: aParams, at value: 29
COLUMN : ,, at value: 40
Table entry: error
ROW: aParams, at value: 29
COLUMN : :=, at value: 39
Table entry: error
ROW: aParams, at value: 29
COLUMN : <, at value: 38
Table entry: error
ROW: aParams, at value: 29
COLUMN : <>, at value: 37
Table entry: error
ROW: aParams, at value: 29
COLUMN : implementation, at value: 36
Table entry: error
ROW: aParams, at value: 29
COLUMN : public, at value: 35
Table entry: error
ROW: aParams, at value: 29
COLUMN : ==, at value: 34
Table entry: error
ROW: aParams, at value: 29
COLUMN : /, at value: 33
Table entry: error
ROW: aParams, at value: 29
COLUMN : {, at value: 32
Table entry: error
ROW: aParams, at value: 29
COLUMN : else, at value: 31
Table entry: error
ROW: aParams, at value: 29
COLUMN : [, at value: 30
Table entry: error
ROW: aParams, at value: 29
COLUMN : ., at value: 29
Table entry: error
ROW: aParams, at value: 29
COLUMN : id, at value: 21
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : ], at value: 10
Table entry: error
ROW: aParams, at value: 29
COLUMN : private, at value: 9
Table entry: error
ROW: aParams, at value: 29
COLUMN : attribute, at value: 6
Table entry: error
ROW: aParams, at value: 29
COLUMN : }, at value: 4
Table entry: error
ROW: aParams, at value: 29
COLUMN : then, at value: 0
Table entry: <aParams> ::= EPSILON 
ROW: aParams, at value: 29
COLUMN : :, at value: 3
Table entry: error
ROW: aParams, at value: 29
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: aParams, at value: 29
COLUMN : isa, at value: 8
Table entry: error
ROW: aParams, at value: 29
COLUMN : or, at value: 7
Table entry: error
ROW: aParams, at value: 29
COLUMN : ), at value: 5
Table entry: <aParams> ::= EPSILON 
ROW: aParams, at value: 29
COLUMN : =>, at value: 1
Table entry: error
ROW: aParams, at value: 29
COLUMN : class, at value: 11
Table entry: error
ROW: aParams, at value: 29
COLUMN : *, at value: 12
Table entry: error
ROW: aParams, at value: 29
COLUMN : >=, at value: 13
Table entry: error
ROW: aParams, at value: 29
COLUMN : read, at value: 14
Table entry: error
ROW: aParams, at value: 29
COLUMN : while, at value: 15
Table entry: error
ROW: aParams, at value: 29
COLUMN : return, at value: 16
Table entry: error
ROW: aParams, at value: 29
COLUMN : write, at value: 17
Table entry: error
ROW: aParams, at value: 29
COLUMN : (, at value: 18
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : local, at value: 19
Table entry: error
ROW: aParams, at value: 29
COLUMN : not, at value: 20
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : function, at value: 28
Table entry: error
ROW: aParams, at value: 29
COLUMN : -, at value: 27
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : self, at value: 22
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : floatnum, at value: 26
Table entry: <aParams> ::= <expr> #p <rept-aParams1> #reptaparams1 #aparams 
ROW: aParams, at value: 29
COLUMN : $, at value: 23
Table entry: error
ROW: aParams, at value: 29
COLUMN : void, at value: 25
Table entry: error
ROW: fParams, at value: 30
COLUMN : EPSILON, at value: 0
Table entry: <fParams> ::= EPSILON
ROW: fParams, at value: 30
COLUMN : intnum, at value: 49
Table entry: error
ROW: fParams, at value: 30
COLUMN : if, at value: 48
Table entry: error
ROW: fParams, at value: 30
COLUMN : ;, at value: 47
Table entry: error
ROW: fParams, at value: 30
COLUMN : float, at value: 46
Table entry: error
ROW: fParams, at value: 30
COLUMN : +, at value: 45
Table entry: error
ROW: fParams, at value: 30
COLUMN : int, at value: 44
Table entry: error
ROW: fParams, at value: 30
COLUMN : <=, at value: 43
Table entry: error
ROW: fParams, at value: 30
COLUMN : >, at value: 42
Table entry: error
ROW: fParams, at value: 30
COLUMN : and, at value: 41
Table entry: error
ROW: fParams, at value: 30
COLUMN : ,, at value: 40
Table entry: error
ROW: fParams, at value: 30
COLUMN : :=, at value: 39
Table entry: error
ROW: fParams, at value: 30
COLUMN : <, at value: 38
Table entry: error
ROW: fParams, at value: 30
COLUMN : <>, at value: 37
Table entry: error
ROW: fParams, at value: 30
COLUMN : implementation, at value: 36
Table entry: error
ROW: fParams, at value: 30
COLUMN : public, at value: 35
Table entry: error
ROW: fParams, at value: 30
COLUMN : ==, at value: 34
Table entry: error
ROW: fParams, at value: 30
COLUMN : /, at value: 33
Table entry: error
ROW: fParams, at value: 30
COLUMN : {, at value: 32
Table entry: error
ROW: fParams, at value: 30
COLUMN : else, at value: 31
Table entry: error
ROW: fParams, at value: 30
COLUMN : [, at value: 30
Table entry: error
ROW: fParams, at value: 30
COLUMN : ., at value: 29
Table entry: error
ROW: fParams, at value: 30
COLUMN : id, at value: 21
Table entry: <fParams> ::= 'id' #id ':' <type> #p <rept-fParams3> #reptfparams3 #p <rept-fParams4> #reptfparams4 #fparams
ROW: fParams, at value: 30
COLUMN : ], at value: 10
Table entry: error
ROW: fParams, at value: 30
COLUMN : private, at value: 9
Table entry: error
ROW: fParams, at value: 30
COLUMN : attribute, at value: 6
Table entry: error
ROW: fParams, at value: 30
COLUMN : }, at value: 4
Table entry: error
ROW: fParams, at value: 30
COLUMN : then, at value: 0
Table entry: <fParams> ::= EPSILON
ROW: fParams, at value: 30
COLUMN : :, at value: 3
Table entry: error
ROW: fParams, at value: 30
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: fParams, at value: 30
COLUMN : isa, at value: 8
Table entry: error
ROW: fParams, at value: 30
COLUMN : or, at value: 7
Table entry: error
ROW: fParams, at value: 30
COLUMN : ), at value: 5
Table entry: <fParams> ::= EPSILON
ROW: fParams, at value: 30
COLUMN : =>, at value: 1
Table entry: error
ROW: fParams, at value: 30
COLUMN : class, at value: 11
Table entry: error
ROW: fParams, at value: 30
COLUMN : *, at value: 12
Table entry: error
ROW: fParams, at value: 30
COLUMN : >=, at value: 13
Table entry: error
ROW: fParams, at value: 30
COLUMN : read, at value: 14
Table entry: error
ROW: fParams, at value: 30
COLUMN : while, at value: 15
Table entry: error
ROW: fParams, at value: 30
COLUMN : return, at value: 16
Table entry: error
ROW: fParams, at value: 30
COLUMN : write, at value: 17
Table entry: error
ROW: fParams, at value: 30
COLUMN : (, at value: 18
Table entry: error
ROW: fParams, at value: 30
COLUMN : local, at value: 19
Table entry: error
ROW: fParams, at value: 30
COLUMN : not, at value: 20
Table entry: error
ROW: fParams, at value: 30
COLUMN : function, at value: 28
Table entry: error
ROW: fParams, at value: 30
COLUMN : -, at value: 27
Table entry: error
ROW: fParams, at value: 30
COLUMN : self, at value: 22
Table entry: error
ROW: fParams, at value: 30
COLUMN : floatnum, at value: 26
Table entry: error
ROW: fParams, at value: 30
COLUMN : $, at value: 23
Table entry: error
ROW: fParams, at value: 30
COLUMN : void, at value: 25
Table entry: error
ROW: expr, at value: 31
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: expr, at value: 31
COLUMN : intnum, at value: 49
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : if, at value: 48
Table entry: error
ROW: expr, at value: 31
COLUMN : ;, at value: 47
Table entry: error
ROW: expr, at value: 31
COLUMN : float, at value: 46
Table entry: error
ROW: expr, at value: 31
COLUMN : +, at value: 45
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : int, at value: 44
Table entry: error
ROW: expr, at value: 31
COLUMN : <=, at value: 43
Table entry: error
ROW: expr, at value: 31
COLUMN : >, at value: 42
Table entry: error
ROW: expr, at value: 31
COLUMN : and, at value: 41
Table entry: error
ROW: expr, at value: 31
COLUMN : ,, at value: 40
Table entry: error
ROW: expr, at value: 31
COLUMN : :=, at value: 39
Table entry: error
ROW: expr, at value: 31
COLUMN : <, at value: 38
Table entry: error
ROW: expr, at value: 31
COLUMN : <>, at value: 37
Table entry: error
ROW: expr, at value: 31
COLUMN : implementation, at value: 36
Table entry: error
ROW: expr, at value: 31
COLUMN : public, at value: 35
Table entry: error
ROW: expr, at value: 31
COLUMN : ==, at value: 34
Table entry: error
ROW: expr, at value: 31
COLUMN : /, at value: 33
Table entry: error
ROW: expr, at value: 31
COLUMN : {, at value: 32
Table entry: error
ROW: expr, at value: 31
COLUMN : else, at value: 31
Table entry: error
ROW: expr, at value: 31
COLUMN : [, at value: 30
Table entry: error
ROW: expr, at value: 31
COLUMN : ., at value: 29
Table entry: error
ROW: expr, at value: 31
COLUMN : id, at value: 21
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : ], at value: 10
Table entry: error
ROW: expr, at value: 31
COLUMN : private, at value: 9
Table entry: error
ROW: expr, at value: 31
COLUMN : attribute, at value: 6
Table entry: error
ROW: expr, at value: 31
COLUMN : }, at value: 4
Table entry: error
ROW: expr, at value: 31
COLUMN : then, at value: 0
Table entry: error
ROW: expr, at value: 31
COLUMN : :, at value: 3
Table entry: error
ROW: expr, at value: 31
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: expr, at value: 31
COLUMN : isa, at value: 8
Table entry: error
ROW: expr, at value: 31
COLUMN : or, at value: 7
Table entry: error
ROW: expr, at value: 31
COLUMN : ), at value: 5
Table entry: error
ROW: expr, at value: 31
COLUMN : =>, at value: 1
Table entry: error
ROW: expr, at value: 31
COLUMN : class, at value: 11
Table entry: error
ROW: expr, at value: 31
COLUMN : *, at value: 12
Table entry: error
ROW: expr, at value: 31
COLUMN : >=, at value: 13
Table entry: error
ROW: expr, at value: 31
COLUMN : read, at value: 14
Table entry: error
ROW: expr, at value: 31
COLUMN : while, at value: 15
Table entry: error
ROW: expr, at value: 31
COLUMN : return, at value: 16
Table entry: error
ROW: expr, at value: 31
COLUMN : write, at value: 17
Table entry: error
ROW: expr, at value: 31
COLUMN : (, at value: 18
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : local, at value: 19
Table entry: error
ROW: expr, at value: 31
COLUMN : not, at value: 20
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : function, at value: 28
Table entry: error
ROW: expr, at value: 31
COLUMN : -, at value: 27
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : self, at value: 22
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : floatnum, at value: 26
Table entry: <expr> ::= <arithExpr> <expr2> #expr
ROW: expr, at value: 31
COLUMN : $, at value: 23
Table entry: error
ROW: expr, at value: 31
COLUMN : void, at value: 25
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : EPSILON, at value: 0
Table entry: <opt-classDecl2> ::= #p EPSILON #optclassdecl2  
ROW: opt-classDecl2, at value: 32
COLUMN : intnum, at value: 49
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : if, at value: 48
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : ;, at value: 47
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : float, at value: 46
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : +, at value: 45
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : int, at value: 44
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : <=, at value: 43
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : >, at value: 42
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : and, at value: 41
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : ,, at value: 40
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : :=, at value: 39
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : <, at value: 38
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : <>, at value: 37
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : implementation, at value: 36
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : public, at value: 35
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : ==, at value: 34
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : /, at value: 33
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : {, at value: 32
Table entry: <opt-classDecl2> ::= #p EPSILON #optclassdecl2  
ROW: opt-classDecl2, at value: 32
COLUMN : else, at value: 31
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : [, at value: 30
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : ., at value: 29
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : id, at value: 21
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : ], at value: 10
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : private, at value: 9
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : attribute, at value: 6
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : }, at value: 4
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : then, at value: 0
Table entry: <opt-classDecl2> ::= #p EPSILON #optclassdecl2  
ROW: opt-classDecl2, at value: 32
COLUMN : :, at value: 3
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : isa, at value: 8
Table entry: <opt-classDecl2> ::= 'isa' #p 'id' #id #p <rept-opt-classDecl22> #reptoptclassdecl22 #optclassdecl2 
ROW: opt-classDecl2, at value: 32
COLUMN : or, at value: 7
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : ), at value: 5
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : =>, at value: 1
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : class, at value: 11
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : *, at value: 12
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : >=, at value: 13
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : read, at value: 14
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : while, at value: 15
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : return, at value: 16
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : write, at value: 17
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : (, at value: 18
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : local, at value: 19
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : not, at value: 20
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : function, at value: 28
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : -, at value: 27
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : self, at value: 22
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : floatnum, at value: 26
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : $, at value: 23
Table entry: error
ROW: opt-classDecl2, at value: 32
COLUMN : void, at value: 25
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : if, at value: 48
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : ;, at value: 47
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : float, at value: 46
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : +, at value: 45
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : int, at value: 44
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : >, at value: 42
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : and, at value: 41
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : :=, at value: 39
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : <, at value: 38
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : public, at value: 35
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : /, at value: 33
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : {, at value: 32
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : else, at value: 31
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : [, at value: 30
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : ., at value: 29
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : id, at value: 21
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : ], at value: 10
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : private, at value: 9
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : }, at value: 4
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : then, at value: 0
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : :, at value: 3
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : or, at value: 7
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : ), at value: 5
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : class, at value: 11
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : *, at value: 12
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : read, at value: 14
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : while, at value: 15
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : return, at value: 16
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : write, at value: 17
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : (, at value: 18
Table entry: <rept-statement2> ::= '(' <aParams> #aparamsandid ')' <rept-statement3>
ROW: rept-statement2, at value: 33
COLUMN : local, at value: 19
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : not, at value: 20
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : function, at value: 28
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : -, at value: 27
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : self, at value: 22
Table entry: <rept-statement2> ::= #p <rept-variable2> #reptvariable2 #reptvariable2andid <rept-statement4> 
ROW: rept-statement2, at value: 33
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : $, at value: 23
Table entry: error
ROW: rept-statement2, at value: 33
COLUMN : void, at value: 25
Table entry: error
ROW: addOp, at value: 34
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: addOp, at value: 34
COLUMN : intnum, at value: 49
Table entry: error
ROW: addOp, at value: 34
COLUMN : if, at value: 48
Table entry: error
ROW: addOp, at value: 34
COLUMN : ;, at value: 47
Table entry: error
ROW: addOp, at value: 34
COLUMN : float, at value: 46
Table entry: error
ROW: addOp, at value: 34
COLUMN : +, at value: 45
Table entry: <addOp> ::= '+' #addop 
ROW: addOp, at value: 34
COLUMN : int, at value: 44
Table entry: error
ROW: addOp, at value: 34
COLUMN : <=, at value: 43
Table entry: error
ROW: addOp, at value: 34
COLUMN : >, at value: 42
Table entry: error
ROW: addOp, at value: 34
COLUMN : and, at value: 41
Table entry: error
ROW: addOp, at value: 34
COLUMN : ,, at value: 40
Table entry: error
ROW: addOp, at value: 34
COLUMN : :=, at value: 39
Table entry: error
ROW: addOp, at value: 34
COLUMN : <, at value: 38
Table entry: error
ROW: addOp, at value: 34
COLUMN : <>, at value: 37
Table entry: error
ROW: addOp, at value: 34
COLUMN : implementation, at value: 36
Table entry: error
ROW: addOp, at value: 34
COLUMN : public, at value: 35
Table entry: error
ROW: addOp, at value: 34
COLUMN : ==, at value: 34
Table entry: error
ROW: addOp, at value: 34
COLUMN : /, at value: 33
Table entry: error
ROW: addOp, at value: 34
COLUMN : {, at value: 32
Table entry: error
ROW: addOp, at value: 34
COLUMN : else, at value: 31
Table entry: error
ROW: addOp, at value: 34
COLUMN : [, at value: 30
Table entry: error
ROW: addOp, at value: 34
COLUMN : ., at value: 29
Table entry: error
ROW: addOp, at value: 34
COLUMN : id, at value: 21
Table entry: error
ROW: addOp, at value: 34
COLUMN : ], at value: 10
Table entry: error
ROW: addOp, at value: 34
COLUMN : private, at value: 9
Table entry: error
ROW: addOp, at value: 34
COLUMN : attribute, at value: 6
Table entry: error
ROW: addOp, at value: 34
COLUMN : }, at value: 4
Table entry: error
ROW: addOp, at value: 34
COLUMN : then, at value: 0
Table entry: error
ROW: addOp, at value: 34
COLUMN : :, at value: 3
Table entry: error
ROW: addOp, at value: 34
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: addOp, at value: 34
COLUMN : isa, at value: 8
Table entry: error
ROW: addOp, at value: 34
COLUMN : or, at value: 7
Table entry: <addOp> ::= 'or' #addop 
ROW: addOp, at value: 34
COLUMN : ), at value: 5
Table entry: error
ROW: addOp, at value: 34
COLUMN : =>, at value: 1
Table entry: error
ROW: addOp, at value: 34
COLUMN : class, at value: 11
Table entry: error
ROW: addOp, at value: 34
COLUMN : *, at value: 12
Table entry: error
ROW: addOp, at value: 34
COLUMN : >=, at value: 13
Table entry: error
ROW: addOp, at value: 34
COLUMN : read, at value: 14
Table entry: error
ROW: addOp, at value: 34
COLUMN : while, at value: 15
Table entry: error
ROW: addOp, at value: 34
COLUMN : return, at value: 16
Table entry: error
ROW: addOp, at value: 34
COLUMN : write, at value: 17
Table entry: error
ROW: addOp, at value: 34
COLUMN : (, at value: 18
Table entry: error
ROW: addOp, at value: 34
COLUMN : local, at value: 19
Table entry: error
ROW: addOp, at value: 34
COLUMN : not, at value: 20
Table entry: error
ROW: addOp, at value: 34
COLUMN : function, at value: 28
Table entry: error
ROW: addOp, at value: 34
COLUMN : -, at value: 27
Table entry: <addOp> ::= '-' #addop 
ROW: addOp, at value: 34
COLUMN : self, at value: 22
Table entry: error
ROW: addOp, at value: 34
COLUMN : floatnum, at value: 26
Table entry: error
ROW: addOp, at value: 34
COLUMN : $, at value: 23
Table entry: error
ROW: addOp, at value: 34
COLUMN : void, at value: 25
Table entry: error
ROW: assignOp, at value: 35
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: assignOp, at value: 35
COLUMN : intnum, at value: 49
Table entry: error
ROW: assignOp, at value: 35
COLUMN : if, at value: 48
Table entry: error
ROW: assignOp, at value: 35
COLUMN : ;, at value: 47
Table entry: error
ROW: assignOp, at value: 35
COLUMN : float, at value: 46
Table entry: error
ROW: assignOp, at value: 35
COLUMN : +, at value: 45
Table entry: error
ROW: assignOp, at value: 35
COLUMN : int, at value: 44
Table entry: error
ROW: assignOp, at value: 35
COLUMN : <=, at value: 43
Table entry: error
ROW: assignOp, at value: 35
COLUMN : >, at value: 42
Table entry: error
ROW: assignOp, at value: 35
COLUMN : and, at value: 41
Table entry: error
ROW: assignOp, at value: 35
COLUMN : ,, at value: 40
Table entry: error
ROW: assignOp, at value: 35
COLUMN : :=, at value: 39
Table entry: <assignOp> ::= ':=' #assign
ROW: assignOp, at value: 35
COLUMN : <, at value: 38
Table entry: error
ROW: assignOp, at value: 35
COLUMN : <>, at value: 37
Table entry: error
ROW: assignOp, at value: 35
COLUMN : implementation, at value: 36
Table entry: error
ROW: assignOp, at value: 35
COLUMN : public, at value: 35
Table entry: error
ROW: assignOp, at value: 35
COLUMN : ==, at value: 34
Table entry: error
ROW: assignOp, at value: 35
COLUMN : /, at value: 33
Table entry: error
ROW: assignOp, at value: 35
COLUMN : {, at value: 32
Table entry: error
ROW: assignOp, at value: 35
COLUMN : else, at value: 31
Table entry: error
ROW: assignOp, at value: 35
COLUMN : [, at value: 30
Table entry: error
ROW: assignOp, at value: 35
COLUMN : ., at value: 29
Table entry: error
ROW: assignOp, at value: 35
COLUMN : id, at value: 21
Table entry: error
ROW: assignOp, at value: 35
COLUMN : ], at value: 10
Table entry: error
ROW: assignOp, at value: 35
COLUMN : private, at value: 9
Table entry: error
ROW: assignOp, at value: 35
COLUMN : attribute, at value: 6
Table entry: error
ROW: assignOp, at value: 35
COLUMN : }, at value: 4
Table entry: error
ROW: assignOp, at value: 35
COLUMN : then, at value: 0
Table entry: error
ROW: assignOp, at value: 35
COLUMN : :, at value: 3
Table entry: error
ROW: assignOp, at value: 35
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: assignOp, at value: 35
COLUMN : isa, at value: 8
Table entry: error
ROW: assignOp, at value: 35
COLUMN : or, at value: 7
Table entry: error
ROW: assignOp, at value: 35
COLUMN : ), at value: 5
Table entry: error
ROW: assignOp, at value: 35
COLUMN : =>, at value: 1
Table entry: error
ROW: assignOp, at value: 35
COLUMN : class, at value: 11
Table entry: error
ROW: assignOp, at value: 35
COLUMN : *, at value: 12
Table entry: error
ROW: assignOp, at value: 35
COLUMN : >=, at value: 13
Table entry: error
ROW: assignOp, at value: 35
COLUMN : read, at value: 14
Table entry: error
ROW: assignOp, at value: 35
COLUMN : while, at value: 15
Table entry: error
ROW: assignOp, at value: 35
COLUMN : return, at value: 16
Table entry: error
ROW: assignOp, at value: 35
COLUMN : write, at value: 17
Table entry: error
ROW: assignOp, at value: 35
COLUMN : (, at value: 18
Table entry: error
ROW: assignOp, at value: 35
COLUMN : local, at value: 19
Table entry: error
ROW: assignOp, at value: 35
COLUMN : not, at value: 20
Table entry: error
ROW: assignOp, at value: 35
COLUMN : function, at value: 28
Table entry: error
ROW: assignOp, at value: 35
COLUMN : -, at value: 27
Table entry: error
ROW: assignOp, at value: 35
COLUMN : self, at value: 22
Table entry: error
ROW: assignOp, at value: 35
COLUMN : floatnum, at value: 26
Table entry: error
ROW: assignOp, at value: 35
COLUMN : $, at value: 23
Table entry: error
ROW: assignOp, at value: 35
COLUMN : void, at value: 25
Table entry: error
ROW: visibility, at value: 36
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: visibility, at value: 36
COLUMN : intnum, at value: 49
Table entry: error
ROW: visibility, at value: 36
COLUMN : if, at value: 48
Table entry: error
ROW: visibility, at value: 36
COLUMN : ;, at value: 47
Table entry: error
ROW: visibility, at value: 36
COLUMN : float, at value: 46
Table entry: error
ROW: visibility, at value: 36
COLUMN : +, at value: 45
Table entry: error
ROW: visibility, at value: 36
COLUMN : int, at value: 44
Table entry: error
ROW: visibility, at value: 36
COLUMN : <=, at value: 43
Table entry: error
ROW: visibility, at value: 36
COLUMN : >, at value: 42
Table entry: error
ROW: visibility, at value: 36
COLUMN : and, at value: 41
Table entry: error
ROW: visibility, at value: 36
COLUMN : ,, at value: 40
Table entry: error
ROW: visibility, at value: 36
COLUMN : :=, at value: 39
Table entry: error
ROW: visibility, at value: 36
COLUMN : <, at value: 38
Table entry: error
ROW: visibility, at value: 36
COLUMN : <>, at value: 37
Table entry: error
ROW: visibility, at value: 36
COLUMN : implementation, at value: 36
Table entry: error
ROW: visibility, at value: 36
COLUMN : public, at value: 35
Table entry: <visibility> ::= 'public' #visibility 
ROW: visibility, at value: 36
COLUMN : ==, at value: 34
Table entry: error
ROW: visibility, at value: 36
COLUMN : /, at value: 33
Table entry: error
ROW: visibility, at value: 36
COLUMN : {, at value: 32
Table entry: error
ROW: visibility, at value: 36
COLUMN : else, at value: 31
Table entry: error
ROW: visibility, at value: 36
COLUMN : [, at value: 30
Table entry: error
ROW: visibility, at value: 36
COLUMN : ., at value: 29
Table entry: error
ROW: visibility, at value: 36
COLUMN : id, at value: 21
Table entry: error
ROW: visibility, at value: 36
COLUMN : ], at value: 10
Table entry: error
ROW: visibility, at value: 36
COLUMN : private, at value: 9
Table entry: <visibility> ::= 'private' #visibility 
ROW: visibility, at value: 36
COLUMN : attribute, at value: 6
Table entry: error
ROW: visibility, at value: 36
COLUMN : }, at value: 4
Table entry: error
ROW: visibility, at value: 36
COLUMN : then, at value: 0
Table entry: error
ROW: visibility, at value: 36
COLUMN : :, at value: 3
Table entry: error
ROW: visibility, at value: 36
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: visibility, at value: 36
COLUMN : isa, at value: 8
Table entry: error
ROW: visibility, at value: 36
COLUMN : or, at value: 7
Table entry: error
ROW: visibility, at value: 36
COLUMN : ), at value: 5
Table entry: error
ROW: visibility, at value: 36
COLUMN : =>, at value: 1
Table entry: error
ROW: visibility, at value: 36
COLUMN : class, at value: 11
Table entry: error
ROW: visibility, at value: 36
COLUMN : *, at value: 12
Table entry: error
ROW: visibility, at value: 36
COLUMN : >=, at value: 13
Table entry: error
ROW: visibility, at value: 36
COLUMN : read, at value: 14
Table entry: error
ROW: visibility, at value: 36
COLUMN : while, at value: 15
Table entry: error
ROW: visibility, at value: 36
COLUMN : return, at value: 16
Table entry: error
ROW: visibility, at value: 36
COLUMN : write, at value: 17
Table entry: error
ROW: visibility, at value: 36
COLUMN : (, at value: 18
Table entry: error
ROW: visibility, at value: 36
COLUMN : local, at value: 19
Table entry: error
ROW: visibility, at value: 36
COLUMN : not, at value: 20
Table entry: error
ROW: visibility, at value: 36
COLUMN : function, at value: 28
Table entry: error
ROW: visibility, at value: 36
COLUMN : -, at value: 27
Table entry: error
ROW: visibility, at value: 36
COLUMN : self, at value: 22
Table entry: error
ROW: visibility, at value: 36
COLUMN : floatnum, at value: 26
Table entry: error
ROW: visibility, at value: 36
COLUMN : $, at value: 23
Table entry: error
ROW: visibility, at value: 36
COLUMN : void, at value: 25
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : intnum, at value: 49
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : if, at value: 48
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : ;, at value: 47
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : float, at value: 46
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : +, at value: 45
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : int, at value: 44
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : <=, at value: 43
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : >, at value: 42
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : and, at value: 41
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : ,, at value: 40
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : :=, at value: 39
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : <, at value: 38
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : <>, at value: 37
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : implementation, at value: 36
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : public, at value: 35
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : ==, at value: 34
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : /, at value: 33
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : {, at value: 32
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : else, at value: 31
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : [, at value: 30
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : ., at value: 29
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : id, at value: 21
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : ], at value: 10
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : private, at value: 9
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : attribute, at value: 6
Table entry: <attributeDecl> ::= 'attribute' <varDecl> #attributdecl
ROW: attributeDecl, at value: 37
COLUMN : }, at value: 4
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : then, at value: 0
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : :, at value: 3
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : isa, at value: 8
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : or, at value: 7
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : ), at value: 5
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : =>, at value: 1
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : class, at value: 11
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : *, at value: 12
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : >=, at value: 13
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : read, at value: 14
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : while, at value: 15
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : return, at value: 16
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : write, at value: 17
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : (, at value: 18
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : local, at value: 19
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : not, at value: 20
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : function, at value: 28
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : -, at value: 27
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : self, at value: 22
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : floatnum, at value: 26
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : $, at value: 23
Table entry: error
ROW: attributeDecl, at value: 37
COLUMN : void, at value: 25
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : EPSILON, at value: 0
Table entry: <rept-aParams1> ::= EPSILON 
ROW: rept-aParams1, at value: 38
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : if, at value: 48
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : float, at value: 46
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : +, at value: 45
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : int, at value: 44
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : >, at value: 42
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : and, at value: 41
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : ,, at value: 40
Table entry: <rept-aParams1> ::= <aParamsTail> <rept-aParams1>  
ROW: rept-aParams1, at value: 38
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : <, at value: 38
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : public, at value: 35
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : /, at value: 33
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : {, at value: 32
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : else, at value: 31
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : [, at value: 30
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : ., at value: 29
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : id, at value: 21
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : ], at value: 10
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : private, at value: 9
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : }, at value: 4
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : then, at value: 0
Table entry: <rept-aParams1> ::= EPSILON 
ROW: rept-aParams1, at value: 38
COLUMN : :, at value: 3
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : or, at value: 7
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : ), at value: 5
Table entry: <rept-aParams1> ::= EPSILON 
ROW: rept-aParams1, at value: 38
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : class, at value: 11
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : *, at value: 12
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : read, at value: 14
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : while, at value: 15
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : return, at value: 16
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : write, at value: 17
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : (, at value: 18
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : local, at value: 19
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : not, at value: 20
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : function, at value: 28
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : -, at value: 27
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : self, at value: 22
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : $, at value: 23
Table entry: error
ROW: rept-aParams1, at value: 38
COLUMN : void, at value: 25
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : if, at value: 48
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : float, at value: 46
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : +, at value: 45
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : int, at value: 44
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : >, at value: 42
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : and, at value: 41
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : <, at value: 38
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : public, at value: 35
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : /, at value: 33
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : {, at value: 32
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : else, at value: 31
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : [, at value: 30
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : ., at value: 29
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : id, at value: 21
Table entry: <rept-statement> ::= 'id' #id <rept-statement2>
ROW: rept-statement, at value: 39
COLUMN : ], at value: 10
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : private, at value: 9
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : }, at value: 4
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : then, at value: 0
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : :, at value: 3
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : or, at value: 7
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : ), at value: 5
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : class, at value: 11
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : *, at value: 12
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : read, at value: 14
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : while, at value: 15
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : return, at value: 16
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : write, at value: 17
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : (, at value: 18
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : local, at value: 19
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : not, at value: 20
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : function, at value: 28
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : -, at value: 27
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : self, at value: 22
Table entry: <rept-statement> ::= 'self' #self <idnest2> #selfandidnest2 <rept-statement> #dot
ROW: rept-statement, at value: 39
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : $, at value: 23
Table entry: error
ROW: rept-statement, at value: 39
COLUMN : void, at value: 25
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : if, at value: 48
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : ;, at value: 47
Table entry: <rept-statement3> ::= ';'
ROW: rept-statement3, at value: 40
COLUMN : float, at value: 46
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : +, at value: 45
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : int, at value: 44
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : >, at value: 42
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : and, at value: 41
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : <, at value: 38
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : public, at value: 35
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : /, at value: 33
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : {, at value: 32
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : else, at value: 31
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : [, at value: 30
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : ., at value: 29
Table entry: <rept-statement3> ::= '.' <rept-statement> #dot
ROW: rept-statement3, at value: 40
COLUMN : id, at value: 21
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : ], at value: 10
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : private, at value: 9
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : }, at value: 4
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : then, at value: 0
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : :, at value: 3
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : or, at value: 7
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : ), at value: 5
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : class, at value: 11
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : *, at value: 12
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : read, at value: 14
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : while, at value: 15
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : return, at value: 16
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : write, at value: 17
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : (, at value: 18
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : local, at value: 19
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : not, at value: 20
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : function, at value: 28
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : -, at value: 27
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : self, at value: 22
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : $, at value: 23
Table entry: error
ROW: rept-statement3, at value: 40
COLUMN : void, at value: 25
Table entry: error
ROW: multOp, at value: 41
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: multOp, at value: 41
COLUMN : intnum, at value: 49
Table entry: error
ROW: multOp, at value: 41
COLUMN : if, at value: 48
Table entry: error
ROW: multOp, at value: 41
COLUMN : ;, at value: 47
Table entry: error
ROW: multOp, at value: 41
COLUMN : float, at value: 46
Table entry: error
ROW: multOp, at value: 41
COLUMN : +, at value: 45
Table entry: error
ROW: multOp, at value: 41
COLUMN : int, at value: 44
Table entry: error
ROW: multOp, at value: 41
COLUMN : <=, at value: 43
Table entry: error
ROW: multOp, at value: 41
COLUMN : >, at value: 42
Table entry: error
ROW: multOp, at value: 41
COLUMN : and, at value: 41
Table entry: <multOp> ::= 'and' #multop
ROW: multOp, at value: 41
COLUMN : ,, at value: 40
Table entry: error
ROW: multOp, at value: 41
COLUMN : :=, at value: 39
Table entry: error
ROW: multOp, at value: 41
COLUMN : <, at value: 38
Table entry: error
ROW: multOp, at value: 41
COLUMN : <>, at value: 37
Table entry: error
ROW: multOp, at value: 41
COLUMN : implementation, at value: 36
Table entry: error
ROW: multOp, at value: 41
COLUMN : public, at value: 35
Table entry: error
ROW: multOp, at value: 41
COLUMN : ==, at value: 34
Table entry: error
ROW: multOp, at value: 41
COLUMN : /, at value: 33
Table entry: <multOp> ::= '/' #multop
ROW: multOp, at value: 41
COLUMN : {, at value: 32
Table entry: error
ROW: multOp, at value: 41
COLUMN : else, at value: 31
Table entry: error
ROW: multOp, at value: 41
COLUMN : [, at value: 30
Table entry: error
ROW: multOp, at value: 41
COLUMN : ., at value: 29
Table entry: error
ROW: multOp, at value: 41
COLUMN : id, at value: 21
Table entry: error
ROW: multOp, at value: 41
COLUMN : ], at value: 10
Table entry: error
ROW: multOp, at value: 41
COLUMN : private, at value: 9
Table entry: error
ROW: multOp, at value: 41
COLUMN : attribute, at value: 6
Table entry: error
ROW: multOp, at value: 41
COLUMN : }, at value: 4
Table entry: error
ROW: multOp, at value: 41
COLUMN : then, at value: 0
Table entry: error
ROW: multOp, at value: 41
COLUMN : :, at value: 3
Table entry: error
ROW: multOp, at value: 41
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: multOp, at value: 41
COLUMN : isa, at value: 8
Table entry: error
ROW: multOp, at value: 41
COLUMN : or, at value: 7
Table entry: error
ROW: multOp, at value: 41
COLUMN : ), at value: 5
Table entry: error
ROW: multOp, at value: 41
COLUMN : =>, at value: 1
Table entry: error
ROW: multOp, at value: 41
COLUMN : class, at value: 11
Table entry: error
ROW: multOp, at value: 41
COLUMN : *, at value: 12
Table entry: <multOp> ::= '*' #multop
ROW: multOp, at value: 41
COLUMN : >=, at value: 13
Table entry: error
ROW: multOp, at value: 41
COLUMN : read, at value: 14
Table entry: error
ROW: multOp, at value: 41
COLUMN : while, at value: 15
Table entry: error
ROW: multOp, at value: 41
COLUMN : return, at value: 16
Table entry: error
ROW: multOp, at value: 41
COLUMN : write, at value: 17
Table entry: error
ROW: multOp, at value: 41
COLUMN : (, at value: 18
Table entry: error
ROW: multOp, at value: 41
COLUMN : local, at value: 19
Table entry: error
ROW: multOp, at value: 41
COLUMN : not, at value: 20
Table entry: error
ROW: multOp, at value: 41
COLUMN : function, at value: 28
Table entry: error
ROW: multOp, at value: 41
COLUMN : -, at value: 27
Table entry: error
ROW: multOp, at value: 41
COLUMN : self, at value: 22
Table entry: error
ROW: multOp, at value: 41
COLUMN : floatnum, at value: 26
Table entry: error
ROW: multOp, at value: 41
COLUMN : $, at value: 23
Table entry: error
ROW: multOp, at value: 41
COLUMN : void, at value: 25
Table entry: error
ROW: START, at value: 43
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: START, at value: 43
COLUMN : intnum, at value: 49
Table entry: error
ROW: START, at value: 43
COLUMN : if, at value: 48
Table entry: error
ROW: START, at value: 43
COLUMN : ;, at value: 47
Table entry: error
ROW: START, at value: 43
COLUMN : float, at value: 46
Table entry: error
ROW: START, at value: 43
COLUMN : +, at value: 45
Table entry: error
ROW: START, at value: 43
COLUMN : int, at value: 44
Table entry: error
ROW: START, at value: 43
COLUMN : <=, at value: 43
Table entry: error
ROW: START, at value: 43
COLUMN : >, at value: 42
Table entry: error
ROW: START, at value: 43
COLUMN : and, at value: 41
Table entry: error
ROW: START, at value: 43
COLUMN : ,, at value: 40
Table entry: error
ROW: START, at value: 43
COLUMN : :=, at value: 39
Table entry: error
ROW: START, at value: 43
COLUMN : <, at value: 38
Table entry: error
ROW: START, at value: 43
COLUMN : <>, at value: 37
Table entry: error
ROW: START, at value: 43
COLUMN : implementation, at value: 36
Table entry: <START> ::= <prog> #start 
ROW: START, at value: 43
COLUMN : public, at value: 35
Table entry: error
ROW: START, at value: 43
COLUMN : ==, at value: 34
Table entry: error
ROW: START, at value: 43
COLUMN : /, at value: 33
Table entry: error
ROW: START, at value: 43
COLUMN : {, at value: 32
Table entry: error
ROW: START, at value: 43
COLUMN : else, at value: 31
Table entry: error
ROW: START, at value: 43
COLUMN : [, at value: 30
Table entry: error
ROW: START, at value: 43
COLUMN : ., at value: 29
Table entry: error
ROW: START, at value: 43
COLUMN : id, at value: 21
Table entry: error
ROW: START, at value: 43
COLUMN : ], at value: 10
Table entry: error
ROW: START, at value: 43
COLUMN : private, at value: 9
Table entry: error
ROW: START, at value: 43
COLUMN : attribute, at value: 6
Table entry: error
ROW: START, at value: 43
COLUMN : }, at value: 4
Table entry: error
ROW: START, at value: 43
COLUMN : then, at value: 0
Table entry: error
ROW: START, at value: 43
COLUMN : :, at value: 3
Table entry: error
ROW: START, at value: 43
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: START, at value: 43
COLUMN : isa, at value: 8
Table entry: error
ROW: START, at value: 43
COLUMN : or, at value: 7
Table entry: error
ROW: START, at value: 43
COLUMN : ), at value: 5
Table entry: error
ROW: START, at value: 43
COLUMN : =>, at value: 1
Table entry: error
ROW: START, at value: 43
COLUMN : class, at value: 11
Table entry: <START> ::= <prog> #start 
ROW: START, at value: 43
COLUMN : *, at value: 12
Table entry: error
ROW: START, at value: 43
COLUMN : >=, at value: 13
Table entry: error
ROW: START, at value: 43
COLUMN : read, at value: 14
Table entry: error
ROW: START, at value: 43
COLUMN : while, at value: 15
Table entry: error
ROW: START, at value: 43
COLUMN : return, at value: 16
Table entry: error
ROW: START, at value: 43
COLUMN : write, at value: 17
Table entry: error
ROW: START, at value: 43
COLUMN : (, at value: 18
Table entry: error
ROW: START, at value: 43
COLUMN : local, at value: 19
Table entry: error
ROW: START, at value: 43
COLUMN : not, at value: 20
Table entry: error
ROW: START, at value: 43
COLUMN : function, at value: 28
Table entry: <START> ::= <prog> #start 
ROW: START, at value: 43
COLUMN : -, at value: 27
Table entry: error
ROW: START, at value: 43
COLUMN : self, at value: 22
Table entry: error
ROW: START, at value: 43
COLUMN : floatnum, at value: 26
Table entry: error
ROW: START, at value: 43
COLUMN : $, at value: 23
Table entry: <START> ::= <prog> #start 
ROW: START, at value: 43
COLUMN : void, at value: 25
Table entry: error
ROW: relOp, at value: 44
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: relOp, at value: 44
COLUMN : intnum, at value: 49
Table entry: error
ROW: relOp, at value: 44
COLUMN : if, at value: 48
Table entry: error
ROW: relOp, at value: 44
COLUMN : ;, at value: 47
Table entry: error
ROW: relOp, at value: 44
COLUMN : float, at value: 46
Table entry: error
ROW: relOp, at value: 44
COLUMN : +, at value: 45
Table entry: error
ROW: relOp, at value: 44
COLUMN : int, at value: 44
Table entry: error
ROW: relOp, at value: 44
COLUMN : <=, at value: 43
Table entry: <relOp> ::= '<=' #relop
ROW: relOp, at value: 44
COLUMN : >, at value: 42
Table entry: <relOp> ::= '>' #relop
ROW: relOp, at value: 44
COLUMN : and, at value: 41
Table entry: error
ROW: relOp, at value: 44
COLUMN : ,, at value: 40
Table entry: error
ROW: relOp, at value: 44
COLUMN : :=, at value: 39
Table entry: error
ROW: relOp, at value: 44
COLUMN : <, at value: 38
Table entry: <relOp> ::= '<' #relop
ROW: relOp, at value: 44
COLUMN : <>, at value: 37
Table entry: <relOp> ::= '<>' #relop
ROW: relOp, at value: 44
COLUMN : implementation, at value: 36
Table entry: error
ROW: relOp, at value: 44
COLUMN : public, at value: 35
Table entry: error
ROW: relOp, at value: 44
COLUMN : ==, at value: 34
Table entry: <relOp> ::= '==' #relop
ROW: relOp, at value: 44
COLUMN : /, at value: 33
Table entry: error
ROW: relOp, at value: 44
COLUMN : {, at value: 32
Table entry: error
ROW: relOp, at value: 44
COLUMN : else, at value: 31
Table entry: error
ROW: relOp, at value: 44
COLUMN : [, at value: 30
Table entry: error
ROW: relOp, at value: 44
COLUMN : ., at value: 29
Table entry: error
ROW: relOp, at value: 44
COLUMN : id, at value: 21
Table entry: error
ROW: relOp, at value: 44
COLUMN : ], at value: 10
Table entry: error
ROW: relOp, at value: 44
COLUMN : private, at value: 9
Table entry: error
ROW: relOp, at value: 44
COLUMN : attribute, at value: 6
Table entry: error
ROW: relOp, at value: 44
COLUMN : }, at value: 4
Table entry: error
ROW: relOp, at value: 44
COLUMN : then, at value: 0
Table entry: error
ROW: relOp, at value: 44
COLUMN : :, at value: 3
Table entry: error
ROW: relOp, at value: 44
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: relOp, at value: 44
COLUMN : isa, at value: 8
Table entry: error
ROW: relOp, at value: 44
COLUMN : or, at value: 7
Table entry: error
ROW: relOp, at value: 44
COLUMN : ), at value: 5
Table entry: error
ROW: relOp, at value: 44
COLUMN : =>, at value: 1
Table entry: error
ROW: relOp, at value: 44
COLUMN : class, at value: 11
Table entry: error
ROW: relOp, at value: 44
COLUMN : *, at value: 12
Table entry: error
ROW: relOp, at value: 44
COLUMN : >=, at value: 13
Table entry: <relOp> ::= '>=' #relop
ROW: relOp, at value: 44
COLUMN : read, at value: 14
Table entry: error
ROW: relOp, at value: 44
COLUMN : while, at value: 15
Table entry: error
ROW: relOp, at value: 44
COLUMN : return, at value: 16
Table entry: error
ROW: relOp, at value: 44
COLUMN : write, at value: 17
Table entry: error
ROW: relOp, at value: 44
COLUMN : (, at value: 18
Table entry: error
ROW: relOp, at value: 44
COLUMN : local, at value: 19
Table entry: error
ROW: relOp, at value: 44
COLUMN : not, at value: 20
Table entry: error
ROW: relOp, at value: 44
COLUMN : function, at value: 28
Table entry: error
ROW: relOp, at value: 44
COLUMN : -, at value: 27
Table entry: error
ROW: relOp, at value: 44
COLUMN : self, at value: 22
Table entry: error
ROW: relOp, at value: 44
COLUMN : floatnum, at value: 26
Table entry: error
ROW: relOp, at value: 44
COLUMN : $, at value: 23
Table entry: error
ROW: relOp, at value: 44
COLUMN : void, at value: 25
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : EPSILON, at value: 0
Table entry: <rept-classDecl4> ::= EPSILON 
ROW: rept-classDecl4, at value: 45
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : if, at value: 48
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : float, at value: 46
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : +, at value: 45
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : int, at value: 44
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : >, at value: 42
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : and, at value: 41
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : <, at value: 38
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : public, at value: 35
Table entry: <rept-classDecl4> ::= <visibility> <memberDecl> #visibilityandmemberdecl <rept-classDecl4> 
ROW: rept-classDecl4, at value: 45
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : /, at value: 33
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : {, at value: 32
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : else, at value: 31
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : [, at value: 30
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : ., at value: 29
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : id, at value: 21
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : ], at value: 10
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : private, at value: 9
Table entry: <rept-classDecl4> ::= <visibility> <memberDecl> #visibilityandmemberdecl <rept-classDecl4> 
ROW: rept-classDecl4, at value: 45
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : }, at value: 4
Table entry: <rept-classDecl4> ::= EPSILON 
ROW: rept-classDecl4, at value: 45
COLUMN : then, at value: 0
Table entry: <rept-classDecl4> ::= EPSILON 
ROW: rept-classDecl4, at value: 45
COLUMN : :, at value: 3
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : or, at value: 7
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : ), at value: 5
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : class, at value: 11
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : *, at value: 12
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : read, at value: 14
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : while, at value: 15
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : return, at value: 16
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : write, at value: 17
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : (, at value: 18
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : local, at value: 19
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : not, at value: 20
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : function, at value: 28
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : -, at value: 27
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : self, at value: 22
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : $, at value: 23
Table entry: error
ROW: rept-classDecl4, at value: 45
COLUMN : void, at value: 25
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : EPSILON, at value: 0
Table entry: <rept-funcBody1> ::= EPSILON 
ROW: rept-funcBody1, at value: 46
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : if, at value: 48
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : float, at value: 46
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : +, at value: 45
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : int, at value: 44
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : >, at value: 42
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : and, at value: 41
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : <, at value: 38
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : public, at value: 35
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : /, at value: 33
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : {, at value: 32
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : else, at value: 31
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : [, at value: 30
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : ., at value: 29
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : id, at value: 21
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : ], at value: 10
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : private, at value: 9
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : }, at value: 4
Table entry: <rept-funcBody1> ::= EPSILON 
ROW: rept-funcBody1, at value: 46
COLUMN : then, at value: 0
Table entry: <rept-funcBody1> ::= EPSILON 
ROW: rept-funcBody1, at value: 46
COLUMN : :, at value: 3
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : or, at value: 7
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : ), at value: 5
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : class, at value: 11
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : *, at value: 12
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : read, at value: 14
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : while, at value: 15
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : return, at value: 16
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : write, at value: 17
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : (, at value: 18
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : local, at value: 19
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : not, at value: 20
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : function, at value: 28
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : -, at value: 27
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : self, at value: 22
Table entry: <rept-funcBody1> ::= <localVarDeclOrStat> <rept-funcBody1>
ROW: rept-funcBody1, at value: 46
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : $, at value: 23
Table entry: error
ROW: rept-funcBody1, at value: 46
COLUMN : void, at value: 25
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : EPSILON, at value: 0
Table entry: <rept-implDef3> ::= EPSILON 
ROW: rept-implDef3, at value: 47
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : if, at value: 48
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : float, at value: 46
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : +, at value: 45
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : int, at value: 44
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : >, at value: 42
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : and, at value: 41
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : <, at value: 38
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : public, at value: 35
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : /, at value: 33
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : {, at value: 32
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : else, at value: 31
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : [, at value: 30
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : ., at value: 29
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : id, at value: 21
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : ], at value: 10
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : private, at value: 9
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : }, at value: 4
Table entry: <rept-implDef3> ::= EPSILON 
ROW: rept-implDef3, at value: 47
COLUMN : then, at value: 0
Table entry: <rept-implDef3> ::= EPSILON 
ROW: rept-implDef3, at value: 47
COLUMN : :, at value: 3
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : or, at value: 7
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : ), at value: 5
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : class, at value: 11
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : *, at value: 12
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : read, at value: 14
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : while, at value: 15
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : return, at value: 16
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : write, at value: 17
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : (, at value: 18
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : local, at value: 19
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : not, at value: 20
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : function, at value: 28
Table entry: <rept-implDef3> ::= <funcDef> <rept-implDef3> 
ROW: rept-implDef3, at value: 47
COLUMN : -, at value: 27
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : self, at value: 22
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : $, at value: 23
Table entry: error
ROW: rept-implDef3, at value: 47
COLUMN : void, at value: 25
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : EPSILON, at value: 0
Table entry: <rept-opt-classDecl22> ::= EPSILON 
ROW: rept-opt-classDecl22, at value: 48
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : if, at value: 48
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : ;, at value: 47
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : float, at value: 46
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : +, at value: 45
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : int, at value: 44
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : >, at value: 42
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : and, at value: 41
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : ,, at value: 40
Table entry: <rept-opt-classDecl22> ::= ',' 'id' #id <rept-opt-classDecl22> 
ROW: rept-opt-classDecl22, at value: 48
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : <, at value: 38
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : public, at value: 35
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : /, at value: 33
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : {, at value: 32
Table entry: <rept-opt-classDecl22> ::= EPSILON 
ROW: rept-opt-classDecl22, at value: 48
COLUMN : else, at value: 31
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : [, at value: 30
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : ., at value: 29
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : id, at value: 21
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : ], at value: 10
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : private, at value: 9
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : }, at value: 4
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : then, at value: 0
Table entry: <rept-opt-classDecl22> ::= EPSILON 
ROW: rept-opt-classDecl22, at value: 48
COLUMN : :, at value: 3
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : or, at value: 7
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : ), at value: 5
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : class, at value: 11
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : *, at value: 12
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : read, at value: 14
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : while, at value: 15
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : return, at value: 16
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : write, at value: 17
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : (, at value: 18
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : local, at value: 19
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : not, at value: 20
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : function, at value: 28
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : -, at value: 27
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : self, at value: 22
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : $, at value: 23
Table entry: error
ROW: rept-opt-classDecl22, at value: 48
COLUMN : void, at value: 25
Table entry: error
ROW: indice, at value: 49
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: indice, at value: 49
COLUMN : intnum, at value: 49
Table entry: error
ROW: indice, at value: 49
COLUMN : if, at value: 48
Table entry: error
ROW: indice, at value: 49
COLUMN : ;, at value: 47
Table entry: error
ROW: indice, at value: 49
COLUMN : float, at value: 46
Table entry: error
ROW: indice, at value: 49
COLUMN : +, at value: 45
Table entry: error
ROW: indice, at value: 49
COLUMN : int, at value: 44
Table entry: error
ROW: indice, at value: 49
COLUMN : <=, at value: 43
Table entry: error
ROW: indice, at value: 49
COLUMN : >, at value: 42
Table entry: error
ROW: indice, at value: 49
COLUMN : and, at value: 41
Table entry: error
ROW: indice, at value: 49
COLUMN : ,, at value: 40
Table entry: error
ROW: indice, at value: 49
COLUMN : :=, at value: 39
Table entry: error
ROW: indice, at value: 49
COLUMN : <, at value: 38
Table entry: error
ROW: indice, at value: 49
COLUMN : <>, at value: 37
Table entry: error
ROW: indice, at value: 49
COLUMN : implementation, at value: 36
Table entry: error
ROW: indice, at value: 49
COLUMN : public, at value: 35
Table entry: error
ROW: indice, at value: 49
COLUMN : ==, at value: 34
Table entry: error
ROW: indice, at value: 49
COLUMN : /, at value: 33
Table entry: error
ROW: indice, at value: 49
COLUMN : {, at value: 32
Table entry: error
ROW: indice, at value: 49
COLUMN : else, at value: 31
Table entry: error
ROW: indice, at value: 49
COLUMN : [, at value: 30
Table entry: <indice> ::= '[' <arithExpr> #indice ']' 
ROW: indice, at value: 49
COLUMN : ., at value: 29
Table entry: error
ROW: indice, at value: 49
COLUMN : id, at value: 21
Table entry: error
ROW: indice, at value: 49
COLUMN : ], at value: 10
Table entry: error
ROW: indice, at value: 49
COLUMN : private, at value: 9
Table entry: error
ROW: indice, at value: 49
COLUMN : attribute, at value: 6
Table entry: error
ROW: indice, at value: 49
COLUMN : }, at value: 4
Table entry: error
ROW: indice, at value: 49
COLUMN : then, at value: 0
Table entry: error
ROW: indice, at value: 49
COLUMN : :, at value: 3
Table entry: error
ROW: indice, at value: 49
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: indice, at value: 49
COLUMN : isa, at value: 8
Table entry: error
ROW: indice, at value: 49
COLUMN : or, at value: 7
Table entry: error
ROW: indice, at value: 49
COLUMN : ), at value: 5
Table entry: error
ROW: indice, at value: 49
COLUMN : =>, at value: 1
Table entry: error
ROW: indice, at value: 49
COLUMN : class, at value: 11
Table entry: error
ROW: indice, at value: 49
COLUMN : *, at value: 12
Table entry: error
ROW: indice, at value: 49
COLUMN : >=, at value: 13
Table entry: error
ROW: indice, at value: 49
COLUMN : read, at value: 14
Table entry: error
ROW: indice, at value: 49
COLUMN : while, at value: 15
Table entry: error
ROW: indice, at value: 49
COLUMN : return, at value: 16
Table entry: error
ROW: indice, at value: 49
COLUMN : write, at value: 17
Table entry: error
ROW: indice, at value: 49
COLUMN : (, at value: 18
Table entry: error
ROW: indice, at value: 49
COLUMN : local, at value: 19
Table entry: error
ROW: indice, at value: 49
COLUMN : not, at value: 20
Table entry: error
ROW: indice, at value: 49
COLUMN : function, at value: 28
Table entry: error
ROW: indice, at value: 49
COLUMN : -, at value: 27
Table entry: error
ROW: indice, at value: 49
COLUMN : self, at value: 22
Table entry: error
ROW: indice, at value: 49
COLUMN : floatnum, at value: 26
Table entry: error
ROW: indice, at value: 49
COLUMN : $, at value: 23
Table entry: error
ROW: indice, at value: 49
COLUMN : void, at value: 25
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : EPSILON, at value: 0
Table entry: <rept-varDecl3> ::= EPSILON 
ROW: rept-varDecl3, at value: 50
COLUMN : intnum, at value: 49
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : if, at value: 48
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : ;, at value: 47
Table entry: <rept-varDecl3> ::= EPSILON 
ROW: rept-varDecl3, at value: 50
COLUMN : float, at value: 46
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : +, at value: 45
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : int, at value: 44
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : <=, at value: 43
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : >, at value: 42
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : and, at value: 41
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : ,, at value: 40
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : :=, at value: 39
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : <, at value: 38
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : <>, at value: 37
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : implementation, at value: 36
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : public, at value: 35
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : ==, at value: 34
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : /, at value: 33
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : {, at value: 32
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : else, at value: 31
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : [, at value: 30
Table entry: <rept-varDecl3> ::= <arraySize> <rept-varDecl3> 
ROW: rept-varDecl3, at value: 50
COLUMN : ., at value: 29
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : id, at value: 21
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : ], at value: 10
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : private, at value: 9
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : attribute, at value: 6
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : }, at value: 4
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : then, at value: 0
Table entry: <rept-varDecl3> ::= EPSILON 
ROW: rept-varDecl3, at value: 50
COLUMN : :, at value: 3
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : isa, at value: 8
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : or, at value: 7
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : ), at value: 5
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : =>, at value: 1
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : class, at value: 11
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : *, at value: 12
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : >=, at value: 13
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : read, at value: 14
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : while, at value: 15
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : return, at value: 16
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : write, at value: 17
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : (, at value: 18
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : local, at value: 19
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : not, at value: 20
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : function, at value: 28
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : -, at value: 27
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : self, at value: 22
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : $, at value: 23
Table entry: error
ROW: rept-varDecl3, at value: 50
COLUMN : void, at value: 25
Table entry: error
ROW: arraySize, at value: 51
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: arraySize, at value: 51
COLUMN : intnum, at value: 49
Table entry: error
ROW: arraySize, at value: 51
COLUMN : if, at value: 48
Table entry: error
ROW: arraySize, at value: 51
COLUMN : ;, at value: 47
Table entry: error
ROW: arraySize, at value: 51
COLUMN : float, at value: 46
Table entry: error
ROW: arraySize, at value: 51
COLUMN : +, at value: 45
Table entry: error
ROW: arraySize, at value: 51
COLUMN : int, at value: 44
Table entry: error
ROW: arraySize, at value: 51
COLUMN : <=, at value: 43
Table entry: error
ROW: arraySize, at value: 51
COLUMN : >, at value: 42
Table entry: error
ROW: arraySize, at value: 51
COLUMN : and, at value: 41
Table entry: error
ROW: arraySize, at value: 51
COLUMN : ,, at value: 40
Table entry: error
ROW: arraySize, at value: 51
COLUMN : :=, at value: 39
Table entry: error
ROW: arraySize, at value: 51
COLUMN : <, at value: 38
Table entry: error
ROW: arraySize, at value: 51
COLUMN : <>, at value: 37
Table entry: error
ROW: arraySize, at value: 51
COLUMN : implementation, at value: 36
Table entry: error
ROW: arraySize, at value: 51
COLUMN : public, at value: 35
Table entry: error
ROW: arraySize, at value: 51
COLUMN : ==, at value: 34
Table entry: error
ROW: arraySize, at value: 51
COLUMN : /, at value: 33
Table entry: error
ROW: arraySize, at value: 51
COLUMN : {, at value: 32
Table entry: error
ROW: arraySize, at value: 51
COLUMN : else, at value: 31
Table entry: error
ROW: arraySize, at value: 51
COLUMN : [, at value: 30
Table entry: <arraySize> ::= '[' <arraySize2> #arraysize
ROW: arraySize, at value: 51
COLUMN : ., at value: 29
Table entry: error
ROW: arraySize, at value: 51
COLUMN : id, at value: 21
Table entry: error
ROW: arraySize, at value: 51
COLUMN : ], at value: 10
Table entry: error
ROW: arraySize, at value: 51
COLUMN : private, at value: 9
Table entry: error
ROW: arraySize, at value: 51
COLUMN : attribute, at value: 6
Table entry: error
ROW: arraySize, at value: 51
COLUMN : }, at value: 4
Table entry: error
ROW: arraySize, at value: 51
COLUMN : then, at value: 0
Table entry: error
ROW: arraySize, at value: 51
COLUMN : :, at value: 3
Table entry: error
ROW: arraySize, at value: 51
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: arraySize, at value: 51
COLUMN : isa, at value: 8
Table entry: error
ROW: arraySize, at value: 51
COLUMN : or, at value: 7
Table entry: error
ROW: arraySize, at value: 51
COLUMN : ), at value: 5
Table entry: error
ROW: arraySize, at value: 51
COLUMN : =>, at value: 1
Table entry: error
ROW: arraySize, at value: 51
COLUMN : class, at value: 11
Table entry: error
ROW: arraySize, at value: 51
COLUMN : *, at value: 12
Table entry: error
ROW: arraySize, at value: 51
COLUMN : >=, at value: 13
Table entry: error
ROW: arraySize, at value: 51
COLUMN : read, at value: 14
Table entry: error
ROW: arraySize, at value: 51
COLUMN : while, at value: 15
Table entry: error
ROW: arraySize, at value: 51
COLUMN : return, at value: 16
Table entry: error
ROW: arraySize, at value: 51
COLUMN : write, at value: 17
Table entry: error
ROW: arraySize, at value: 51
COLUMN : (, at value: 18
Table entry: error
ROW: arraySize, at value: 51
COLUMN : local, at value: 19
Table entry: error
ROW: arraySize, at value: 51
COLUMN : not, at value: 20
Table entry: error
ROW: arraySize, at value: 51
COLUMN : function, at value: 28
Table entry: error
ROW: arraySize, at value: 51
COLUMN : -, at value: 27
Table entry: error
ROW: arraySize, at value: 51
COLUMN : self, at value: 22
Table entry: error
ROW: arraySize, at value: 51
COLUMN : floatnum, at value: 26
Table entry: error
ROW: arraySize, at value: 51
COLUMN : $, at value: 23
Table entry: error
ROW: arraySize, at value: 51
COLUMN : void, at value: 25
Table entry: error
ROW: term, at value: 52
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: term, at value: 52
COLUMN : intnum, at value: 49
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : if, at value: 48
Table entry: error
ROW: term, at value: 52
COLUMN : ;, at value: 47
Table entry: error
ROW: term, at value: 52
COLUMN : float, at value: 46
Table entry: error
ROW: term, at value: 52
COLUMN : +, at value: 45
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : int, at value: 44
Table entry: error
ROW: term, at value: 52
COLUMN : <=, at value: 43
Table entry: error
ROW: term, at value: 52
COLUMN : >, at value: 42
Table entry: error
ROW: term, at value: 52
COLUMN : and, at value: 41
Table entry: error
ROW: term, at value: 52
COLUMN : ,, at value: 40
Table entry: error
ROW: term, at value: 52
COLUMN : :=, at value: 39
Table entry: error
ROW: term, at value: 52
COLUMN : <, at value: 38
Table entry: error
ROW: term, at value: 52
COLUMN : <>, at value: 37
Table entry: error
ROW: term, at value: 52
COLUMN : implementation, at value: 36
Table entry: error
ROW: term, at value: 52
COLUMN : public, at value: 35
Table entry: error
ROW: term, at value: 52
COLUMN : ==, at value: 34
Table entry: error
ROW: term, at value: 52
COLUMN : /, at value: 33
Table entry: error
ROW: term, at value: 52
COLUMN : {, at value: 32
Table entry: error
ROW: term, at value: 52
COLUMN : else, at value: 31
Table entry: error
ROW: term, at value: 52
COLUMN : [, at value: 30
Table entry: error
ROW: term, at value: 52
COLUMN : ., at value: 29
Table entry: error
ROW: term, at value: 52
COLUMN : id, at value: 21
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : ], at value: 10
Table entry: error
ROW: term, at value: 52
COLUMN : private, at value: 9
Table entry: error
ROW: term, at value: 52
COLUMN : attribute, at value: 6
Table entry: error
ROW: term, at value: 52
COLUMN : }, at value: 4
Table entry: error
ROW: term, at value: 52
COLUMN : then, at value: 0
Table entry: error
ROW: term, at value: 52
COLUMN : :, at value: 3
Table entry: error
ROW: term, at value: 52
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: term, at value: 52
COLUMN : isa, at value: 8
Table entry: error
ROW: term, at value: 52
COLUMN : or, at value: 7
Table entry: error
ROW: term, at value: 52
COLUMN : ), at value: 5
Table entry: error
ROW: term, at value: 52
COLUMN : =>, at value: 1
Table entry: error
ROW: term, at value: 52
COLUMN : class, at value: 11
Table entry: error
ROW: term, at value: 52
COLUMN : *, at value: 12
Table entry: error
ROW: term, at value: 52
COLUMN : >=, at value: 13
Table entry: error
ROW: term, at value: 52
COLUMN : read, at value: 14
Table entry: error
ROW: term, at value: 52
COLUMN : while, at value: 15
Table entry: error
ROW: term, at value: 52
COLUMN : return, at value: 16
Table entry: error
ROW: term, at value: 52
COLUMN : write, at value: 17
Table entry: error
ROW: term, at value: 52
COLUMN : (, at value: 18
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : local, at value: 19
Table entry: error
ROW: term, at value: 52
COLUMN : not, at value: 20
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : function, at value: 28
Table entry: error
ROW: term, at value: 52
COLUMN : -, at value: 27
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : self, at value: 22
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : floatnum, at value: 26
Table entry: <term> ::= <factor> <rightrec-term> #term
ROW: term, at value: 52
COLUMN : $, at value: 23
Table entry: error
ROW: term, at value: 52
COLUMN : void, at value: 25
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : EPSILON, at value: 0
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : intnum, at value: 49
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : if, at value: 48
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : ;, at value: 47
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : float, at value: 46
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : +, at value: 45
Table entry: <rightrec-arithExpr> ::= <addOp> <term> #rightrecarithexpr <rightrec-arithExpr> 
ROW: rightrec-arithExpr, at value: 53
COLUMN : int, at value: 44
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : <=, at value: 43
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : >, at value: 42
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : and, at value: 41
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : ,, at value: 40
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : :=, at value: 39
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : <, at value: 38
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : <>, at value: 37
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : implementation, at value: 36
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : public, at value: 35
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : ==, at value: 34
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : /, at value: 33
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : {, at value: 32
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : else, at value: 31
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : [, at value: 30
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : ., at value: 29
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : id, at value: 21
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : ], at value: 10
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : private, at value: 9
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : attribute, at value: 6
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : }, at value: 4
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : then, at value: 0
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : :, at value: 3
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : isa, at value: 8
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : or, at value: 7
Table entry: <rightrec-arithExpr> ::= <addOp> <term> #rightrecarithexpr <rightrec-arithExpr> 
ROW: rightrec-arithExpr, at value: 53
COLUMN : ), at value: 5
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : =>, at value: 1
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : class, at value: 11
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : *, at value: 12
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : >=, at value: 13
Table entry: <rightrec-arithExpr> ::= EPSILON 
ROW: rightrec-arithExpr, at value: 53
COLUMN : read, at value: 14
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : while, at value: 15
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : return, at value: 16
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : write, at value: 17
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : (, at value: 18
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : local, at value: 19
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : not, at value: 20
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : function, at value: 28
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : -, at value: 27
Table entry: <rightrec-arithExpr> ::= <addOp> <term> #rightrecarithexpr <rightrec-arithExpr> 
ROW: rightrec-arithExpr, at value: 53
COLUMN : self, at value: 22
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : $, at value: 23
Table entry: error
ROW: rightrec-arithExpr, at value: 53
COLUMN : void, at value: 25
Table entry: error
ROW: statement, at value: 54
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: statement, at value: 54
COLUMN : intnum, at value: 49
Table entry: error
ROW: statement, at value: 54
COLUMN : if, at value: 48
Table entry: <statement> ::= 'if' #if '(' <relExpr> ')' #condition 'then' <statBlock> #then 'else' <statBlock> #felse ';' #ifstatement
ROW: statement, at value: 54
COLUMN : ;, at value: 47
Table entry: error
ROW: statement, at value: 54
COLUMN : float, at value: 46
Table entry: error
ROW: statement, at value: 54
COLUMN : +, at value: 45
Table entry: error
ROW: statement, at value: 54
COLUMN : int, at value: 44
Table entry: error
ROW: statement, at value: 54
COLUMN : <=, at value: 43
Table entry: error
ROW: statement, at value: 54
COLUMN : >, at value: 42
Table entry: error
ROW: statement, at value: 54
COLUMN : and, at value: 41
Table entry: error
ROW: statement, at value: 54
COLUMN : ,, at value: 40
Table entry: error
ROW: statement, at value: 54
COLUMN : :=, at value: 39
Table entry: error
ROW: statement, at value: 54
COLUMN : <, at value: 38
Table entry: error
ROW: statement, at value: 54
COLUMN : <>, at value: 37
Table entry: error
ROW: statement, at value: 54
COLUMN : implementation, at value: 36
Table entry: error
ROW: statement, at value: 54
COLUMN : public, at value: 35
Table entry: error
ROW: statement, at value: 54
COLUMN : ==, at value: 34
Table entry: error
ROW: statement, at value: 54
COLUMN : /, at value: 33
Table entry: error
ROW: statement, at value: 54
COLUMN : {, at value: 32
Table entry: error
ROW: statement, at value: 54
COLUMN : else, at value: 31
Table entry: error
ROW: statement, at value: 54
COLUMN : [, at value: 30
Table entry: error
ROW: statement, at value: 54
COLUMN : ., at value: 29
Table entry: error
ROW: statement, at value: 54
COLUMN : id, at value: 21
Table entry: <statement> ::= <rept-statement> #statement
ROW: statement, at value: 54
COLUMN : ], at value: 10
Table entry: error
ROW: statement, at value: 54
COLUMN : private, at value: 9
Table entry: error
ROW: statement, at value: 54
COLUMN : attribute, at value: 6
Table entry: error
ROW: statement, at value: 54
COLUMN : }, at value: 4
Table entry: error
ROW: statement, at value: 54
COLUMN : then, at value: 0
Table entry: error
ROW: statement, at value: 54
COLUMN : :, at value: 3
Table entry: error
ROW: statement, at value: 54
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: statement, at value: 54
COLUMN : isa, at value: 8
Table entry: error
ROW: statement, at value: 54
COLUMN : or, at value: 7
Table entry: error
ROW: statement, at value: 54
COLUMN : ), at value: 5
Table entry: error
ROW: statement, at value: 54
COLUMN : =>, at value: 1
Table entry: error
ROW: statement, at value: 54
COLUMN : class, at value: 11
Table entry: error
ROW: statement, at value: 54
COLUMN : *, at value: 12
Table entry: error
ROW: statement, at value: 54
COLUMN : >=, at value: 13
Table entry: error
ROW: statement, at value: 54
COLUMN : read, at value: 14
Table entry: <statement> ::= 'read' #read '(' <variable> ')' #readstatement ';' 
ROW: statement, at value: 54
COLUMN : while, at value: 15
Table entry: <statement> ::= 'while' #while '(' <relExpr> ')' #condition <statBlock>  #then ';' #whilestatement 
ROW: statement, at value: 54
COLUMN : return, at value: 16
Table entry: <statement> ::= 'return' #return '(' <expr> ')' #freturnstatement ';' 
ROW: statement, at value: 54
COLUMN : write, at value: 17
Table entry: <statement> ::= 'write' #write '(' <expr> ')' #writestatement ';' 
ROW: statement, at value: 54
COLUMN : (, at value: 18
Table entry: error
ROW: statement, at value: 54
COLUMN : local, at value: 19
Table entry: error
ROW: statement, at value: 54
COLUMN : not, at value: 20
Table entry: error
ROW: statement, at value: 54
COLUMN : function, at value: 28
Table entry: error
ROW: statement, at value: 54
COLUMN : -, at value: 27
Table entry: error
ROW: statement, at value: 54
COLUMN : self, at value: 22
Table entry: <statement> ::= <rept-statement> #statement
ROW: statement, at value: 54
COLUMN : floatnum, at value: 26
Table entry: error
ROW: statement, at value: 54
COLUMN : $, at value: 23
Table entry: error
ROW: statement, at value: 54
COLUMN : void, at value: 25
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : intnum, at value: 49
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : if, at value: 48
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : ;, at value: 47
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : float, at value: 46
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : +, at value: 45
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : int, at value: 44
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : <=, at value: 43
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : >, at value: 42
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : and, at value: 41
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : ,, at value: 40
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : :=, at value: 39
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : <, at value: 38
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : <>, at value: 37
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : implementation, at value: 36
Table entry: <classOrImplOrFunc> ::= <implDef> #impl
ROW: classOrImplOrFunc, at value: 55
COLUMN : public, at value: 35
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : ==, at value: 34
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : /, at value: 33
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : {, at value: 32
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : else, at value: 31
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : [, at value: 30
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : ., at value: 29
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : id, at value: 21
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : ], at value: 10
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : private, at value: 9
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : attribute, at value: 6
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : }, at value: 4
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : then, at value: 0
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : :, at value: 3
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : isa, at value: 8
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : or, at value: 7
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : ), at value: 5
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : =>, at value: 1
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : class, at value: 11
Table entry: <classOrImplOrFunc> ::= <classDecl> #class
ROW: classOrImplOrFunc, at value: 55
COLUMN : *, at value: 12
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : >=, at value: 13
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : read, at value: 14
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : while, at value: 15
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : return, at value: 16
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : write, at value: 17
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : (, at value: 18
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : local, at value: 19
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : not, at value: 20
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : function, at value: 28
Table entry: <classOrImplOrFunc> ::= <funcDef> #func
ROW: classOrImplOrFunc, at value: 55
COLUMN : -, at value: 27
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : self, at value: 22
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : floatnum, at value: 26
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : $, at value: 23
Table entry: error
ROW: classOrImplOrFunc, at value: 55
COLUMN : void, at value: 25
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : EPSILON, at value: 0
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : intnum, at value: 49
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : if, at value: 48
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : ;, at value: 47
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : float, at value: 46
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : +, at value: 45
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : int, at value: 44
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : <=, at value: 43
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : >, at value: 42
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : and, at value: 41
Table entry: <rightrec-term> ::= <multOp> <factor> #rightrecterm <rightrec-term> 
ROW: rightrec-term, at value: 56
COLUMN : ,, at value: 40
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : :=, at value: 39
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : <, at value: 38
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : <>, at value: 37
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : implementation, at value: 36
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : public, at value: 35
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : ==, at value: 34
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : /, at value: 33
Table entry: <rightrec-term> ::= <multOp> <factor> #rightrecterm <rightrec-term> 
ROW: rightrec-term, at value: 56
COLUMN : {, at value: 32
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : else, at value: 31
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : [, at value: 30
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : ., at value: 29
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : id, at value: 21
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : ], at value: 10
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : private, at value: 9
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : attribute, at value: 6
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : }, at value: 4
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : then, at value: 0
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : :, at value: 3
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : isa, at value: 8
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : or, at value: 7
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : ), at value: 5
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : =>, at value: 1
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : class, at value: 11
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : *, at value: 12
Table entry: <rightrec-term> ::= <multOp> <factor> #rightrecterm <rightrec-term> 
ROW: rightrec-term, at value: 56
COLUMN : >=, at value: 13
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : read, at value: 14
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : while, at value: 15
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : return, at value: 16
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : write, at value: 17
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : (, at value: 18
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : local, at value: 19
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : not, at value: 20
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : function, at value: 28
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : -, at value: 27
Table entry: <rightrec-term> ::= EPSILON 
ROW: rightrec-term, at value: 56
COLUMN : self, at value: 22
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : floatnum, at value: 26
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : $, at value: 23
Table entry: error
ROW: rightrec-term, at value: 56
COLUMN : void, at value: 25
Table entry: error
ROW: type, at value: 59
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: type, at value: 59
COLUMN : intnum, at value: 49
Table entry: error
ROW: type, at value: 59
COLUMN : if, at value: 48
Table entry: error
ROW: type, at value: 59
COLUMN : ;, at value: 47
Table entry: error
ROW: type, at value: 59
COLUMN : float, at value: 46
Table entry: <type> ::= 'float' #type 
ROW: type, at value: 59
COLUMN : +, at value: 45
Table entry: error
ROW: type, at value: 59
COLUMN : int, at value: 44
Table entry: <type> ::= 'int' #type 
ROW: type, at value: 59
COLUMN : <=, at value: 43
Table entry: error
ROW: type, at value: 59
COLUMN : >, at value: 42
Table entry: error
ROW: type, at value: 59
COLUMN : and, at value: 41
Table entry: error
ROW: type, at value: 59
COLUMN : ,, at value: 40
Table entry: error
ROW: type, at value: 59
COLUMN : :=, at value: 39
Table entry: error
ROW: type, at value: 59
COLUMN : <, at value: 38
Table entry: error
ROW: type, at value: 59
COLUMN : <>, at value: 37
Table entry: error
ROW: type, at value: 59
COLUMN : implementation, at value: 36
Table entry: error
ROW: type, at value: 59
COLUMN : public, at value: 35
Table entry: error
ROW: type, at value: 59
COLUMN : ==, at value: 34
Table entry: error
ROW: type, at value: 59
COLUMN : /, at value: 33
Table entry: error
ROW: type, at value: 59
COLUMN : {, at value: 32
Table entry: error
ROW: type, at value: 59
COLUMN : else, at value: 31
Table entry: error
ROW: type, at value: 59
COLUMN : [, at value: 30
Table entry: error
ROW: type, at value: 59
COLUMN : ., at value: 29
Table entry: error
ROW: type, at value: 59
COLUMN : id, at value: 21
Table entry: <type> ::= 'id' #type 
ROW: type, at value: 59
COLUMN : ], at value: 10
Table entry: error
ROW: type, at value: 59
COLUMN : private, at value: 9
Table entry: error
ROW: type, at value: 59
COLUMN : attribute, at value: 6
Table entry: error
ROW: type, at value: 59
COLUMN : }, at value: 4
Table entry: error
ROW: type, at value: 59
COLUMN : then, at value: 0
Table entry: error
ROW: type, at value: 59
COLUMN : :, at value: 3
Table entry: error
ROW: type, at value: 59
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: type, at value: 59
COLUMN : isa, at value: 8
Table entry: error
ROW: type, at value: 59
COLUMN : or, at value: 7
Table entry: error
ROW: type, at value: 59
COLUMN : ), at value: 5
Table entry: error
ROW: type, at value: 59
COLUMN : =>, at value: 1
Table entry: error
ROW: type, at value: 59
COLUMN : class, at value: 11
Table entry: error
ROW: type, at value: 59
COLUMN : *, at value: 12
Table entry: error
ROW: type, at value: 59
COLUMN : >=, at value: 13
Table entry: error
ROW: type, at value: 59
COLUMN : read, at value: 14
Table entry: error
ROW: type, at value: 59
COLUMN : while, at value: 15
Table entry: error
ROW: type, at value: 59
COLUMN : return, at value: 16
Table entry: error
ROW: type, at value: 59
COLUMN : write, at value: 17
Table entry: error
ROW: type, at value: 59
COLUMN : (, at value: 18
Table entry: error
ROW: type, at value: 59
COLUMN : local, at value: 19
Table entry: error
ROW: type, at value: 59
COLUMN : not, at value: 20
Table entry: error
ROW: type, at value: 59
COLUMN : function, at value: 28
Table entry: error
ROW: type, at value: 59
COLUMN : -, at value: 27
Table entry: error
ROW: type, at value: 59
COLUMN : self, at value: 22
Table entry: error
ROW: type, at value: 59
COLUMN : floatnum, at value: 26
Table entry: error
ROW: type, at value: 59
COLUMN : $, at value: 23
Table entry: error
ROW: type, at value: 59
COLUMN : void, at value: 25
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : intnum, at value: 49
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : if, at value: 48
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : ;, at value: 47
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : float, at value: 46
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : +, at value: 45
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : int, at value: 44
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : <=, at value: 43
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : >, at value: 42
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : and, at value: 41
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : ,, at value: 40
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : :=, at value: 39
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : <, at value: 38
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : <>, at value: 37
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : implementation, at value: 36
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : public, at value: 35
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : ==, at value: 34
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : /, at value: 33
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : {, at value: 32
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : else, at value: 31
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : [, at value: 30
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : ., at value: 29
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : id, at value: 21
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : ], at value: 10
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : private, at value: 9
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : attribute, at value: 6
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : }, at value: 4
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : then, at value: 0
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : :, at value: 3
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : isa, at value: 8
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : or, at value: 7
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : ), at value: 5
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : =>, at value: 1
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : class, at value: 11
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : *, at value: 12
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : >=, at value: 13
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : read, at value: 14
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : while, at value: 15
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : return, at value: 16
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : write, at value: 17
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : (, at value: 18
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : local, at value: 19
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : not, at value: 20
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : function, at value: 28
Table entry: <funcDecl> ::= <funcHead> #funcdecl ';' 
ROW: funcDecl, at value: 57
COLUMN : -, at value: 27
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : self, at value: 22
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : floatnum, at value: 26
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : $, at value: 23
Table entry: error
ROW: funcDecl, at value: 57
COLUMN : void, at value: 25
Table entry: error
ROW: implDef, at value: 58
COLUMN : EPSILON, at value: 0
Table entry: error
ROW: implDef, at value: 58
COLUMN : intnum, at value: 49
Table entry: error
ROW: implDef, at value: 58
COLUMN : if, at value: 48
Table entry: error
ROW: implDef, at value: 58
COLUMN : ;, at value: 47
Table entry: error
ROW: implDef, at value: 58
COLUMN : float, at value: 46
Table entry: error
ROW: implDef, at value: 58
COLUMN : +, at value: 45
Table entry: error
ROW: implDef, at value: 58
COLUMN : int, at value: 44
Table entry: error
ROW: implDef, at value: 58
COLUMN : <=, at value: 43
Table entry: error
ROW: implDef, at value: 58
COLUMN : >, at value: 42
Table entry: error
ROW: implDef, at value: 58
COLUMN : and, at value: 41
Table entry: error
ROW: implDef, at value: 58
COLUMN : ,, at value: 40
Table entry: error
ROW: implDef, at value: 58
COLUMN : :=, at value: 39
Table entry: error
ROW: implDef, at value: 58
COLUMN : <, at value: 38
Table entry: error
ROW: implDef, at value: 58
COLUMN : <>, at value: 37
Table entry: error
ROW: implDef, at value: 58
COLUMN : implementation, at value: 36
Table entry: <implDef> ::= 'implementation' 'id' #id '{' #p <rept-implDef3> #reptimpldef3 #impldef '}' 
ROW: implDef, at value: 58
COLUMN : public, at value: 35
Table entry: error
ROW: implDef, at value: 58
COLUMN : ==, at value: 34
Table entry: error
ROW: implDef, at value: 58
COLUMN : /, at value: 33
Table entry: error
ROW: implDef, at value: 58
COLUMN : {, at value: 32
Table entry: error
ROW: implDef, at value: 58
COLUMN : else, at value: 31
Table entry: error
ROW: implDef, at value: 58
COLUMN : [, at value: 30
Table entry: error
ROW: implDef, at value: 58
COLUMN : ., at value: 29
Table entry: error
ROW: implDef, at value: 58
COLUMN : id, at value: 21
Table entry: error
ROW: implDef, at value: 58
COLUMN : ], at value: 10
Table entry: error
ROW: implDef, at value: 58
COLUMN : private, at value: 9
Table entry: error
ROW: implDef, at value: 58
COLUMN : attribute, at value: 6
Table entry: error
ROW: implDef, at value: 58
COLUMN : }, at value: 4
Table entry: error
ROW: implDef, at value: 58
COLUMN : then, at value: 0
Table entry: error
ROW: implDef, at value: 58
COLUMN : :, at value: 3
Table entry: error
ROW: implDef, at value: 58
COLUMN : invalidnum, at value: 2
Table entry: error
ROW: implDef, at value: 58
COLUMN : isa, at value: 8
Table entry: error
ROW: implDef, at value: 58
COLUMN : or, at value: 7
Table entry: error
ROW: implDef, at value: 58
COLUMN : ), at value: 5
Table entry: error
ROW: implDef, at value: 58
COLUMN : =>, at value: 1
Table entry: error
ROW: implDef, at value: 58
COLUMN : class, at value: 11
Table entry: error
ROW: implDef, at value: 58
COLUMN : *, at value: 12
Table entry: error
ROW: implDef, at value: 58
COLUMN : >=, at value: 13
Table entry: error
ROW: implDef, at value: 58
COLUMN : read, at value: 14
Table entry: error
ROW: implDef, at value: 58
COLUMN : while, at value: 15
Table entry: error
ROW: implDef, at value: 58
COLUMN : return, at value: 16
Table entry: error
ROW: implDef, at value: 58
COLUMN : write, at value: 17
Table entry: error
ROW: implDef, at value: 58
COLUMN : (, at value: 18
Table entry: error
ROW: implDef, at value: 58
COLUMN : local, at value: 19
Table entry: error
ROW: implDef, at value: 58
COLUMN : not, at value: 20
Table entry: error
ROW: implDef, at value: 58
COLUMN : function, at value: 28
Table entry: error
ROW: implDef, at value: 58
COLUMN : -, at value: 27
Table entry: error
ROW: implDef, at value: 58
COLUMN : self, at value: 22
Table entry: error
ROW: implDef, at value: 58
COLUMN : floatnum, at value: 26
Table entry: error
ROW: implDef, at value: 58
COLUMN : $, at value: 23
Table entry: error
ROW: implDef, at value: 58
COLUMN : void, at value: 25
Table entry: error
