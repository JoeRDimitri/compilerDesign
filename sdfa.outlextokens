[blockcmt,/* sort the array */,1,20]
[function,function,2,8]
[id,bubbleSort,2,19]
[(,(,2,20]
[id,arr,2,23]
[:,:,2,24]
[int,int,2,28]
[[,[,2,29]
[],],2,30]
[,,,,2,31]
[id,size,2,36]
[:,:,2,37]
[int,int,2,41]
[),),2,42]
[=>,=>,2,45]
[void,void,2,50]
[{,{,3,1]
[local,local,4,7]
[id,n,4,9]
[:,:,4,10]
[;,;,4,12]
[local,local,5,7]
[id,i,5,9]
[:,:,5,10]
[int,int,5,14]
[;,;,5,15]
[local,local,6,7]
[id,j,6,9]
[:,:,6,10]
[int,int,6,14]
[;,;,6,15]
[local,local,7,7]
[id,temp,7,12]
[:,:,7,13]
[int,int,7,17]
[;,;,7,18]
[id,n,8,3]
[:=,:=,8,6]
[id,size,8,11]
[;,;,8,12]
[id,i,9,3]
[:=,:=,9,6]
[intnum,0,9,8]
[;,;,9,9]
[id,j,10,3]
[:=,:=,10,6]
[intnum,0,10,8]
[;,;,10,9]
[id,temp,11,6]
[:=,:=,11,9]
[intnum,0,11,11]
[;,;,11,12]
[while,while,12,7]
[(,(,12,9]
[id,i,12,10]
[<,<,12,12]
[id,n,12,14]
[-,-,12,15]
[intnum,1,12,16]
[),),12,17]
[{,{,12,19]
[while,while,13,9]
[(,(,13,11]
[id,j,13,12]
[<,<,13,14]
[id,n,13,16]
[-,-,13,17]
[id,i,13,18]
[-,-,13,19]
[intnum,1,13,20]
[),),13,21]
[{,{,13,23]
[if,if,14,8]
[(,(,14,10]
[id,arr,14,13]
[[,[,14,14]
[id,j,14,15]
[],],14,16]
[>,>,14,18]
[id,arr,14,22]
[[,[,14,23]
[id,j,14,24]
[+,+,14,25]
[intnum,1,14,26]
[],],14,27]
[),),14,28]
[then,then,15,12]
[{,{,15,14]
[linecomment,// swap temp and arr[i],16,33]
[id,temp,17,14]
[:=,:=,17,17]
[id,arr,17,21]
[[,[,17,22]
[id,j,17,23]
[],],17,24]
[;,;,17,25]
[id,arr,18,13]
[[,[,18,14]
[id,j,18,15]
[],],18,16]
[:=,:=,18,19]
[id,arr,18,23]
[[,[,18,24]
[id,j,18,25]
[+,+,18,26]
[intnum,1,18,27]
[],],18,28]
[;,;,18,29]
[id,arr,19,13]
[[,[,19,14]
[id,j,19,15]
[+,+,19,16]
[intnum,1,19,17]
[],],19,18]
[:=,:=,19,21]
[id,temp,19,26]
[;,;,19,27]
[},},20,9]
[else,else,20,14]
[;,;,20,16]
[id,j,21,9]
[:=,:=,21,12]
[id,j,21,14]
[+,+,21,15]
[intnum,1,21,16]
[;,;,21,17]
[},},22,7]
[;,;,22,8]
[id,i,23,5]
[:=,:=,23,8]
[id,i,23,10]
[+,+,23,11]
[intnum,1,23,12]
[;,;,23,13]
[},},24,3]
[;,;,24,4]
[},},25,1]
[blockcmt,/* print the array */,27,21]
[function,function,28,8]
[id,printArray,28,19]
[(,(,28,20]
[id,arr,28,23]
[:,:,28,24]
[int,int,28,28]
[[,[,28,29]
[],],28,30]
[,,,,28,31]
[id,size,28,36]
[:,:,28,37]
[int,int,28,41]
[),),28,42]
[=>,=>,28,45]
[void,void,28,50]
[{,{,29,1]
[local,local,30,7]
[id,n,30,9]
[:,:,30,10]
[int,int,30,14]
[;,;,30,15]
[local,local,31,7]
[id,i,31,9]
[:,:,31,10]
[int,int,31,14]
[;,;,31,15]
[id,n,32,3]
[:=,:=,32,6]
[id,size,32,11]
[;,;,32,12]
[id,i,33,3]
[:=,:=,33,6]
[intnum,0,33,8]
[;,;,33,9]
[while,while,34,7]
[(,(,34,9]
[id,i,34,10]
[<,<,34,11]
[id,n,34,12]
[),),34,13]
[{,{,34,15]
[write,write,35,9]
[(,(,35,10]
[id,arr,35,13]
[[,[,35,14]
[id,i,35,15]
[],],35,16]
[),),35,17]
[;,;,35,18]
[id,i,36,7]
[:=,:=,36,10]
[id,i,36,12]
[+,+,36,13]
[intnum,1,36,14]
[;,;,36,15]
[},},37,3]
[;,;,37,4]
[},},38,1]
[linecomment,// main funtion to test above,40,29]
[function,function,41,8]
[id,main,41,13]
[(,(,41,14]
[),),41,15]
[=>,=>,41,18]
[void,void,41,23]
[{,{,42,1]
[local,local,43,7]
[id,arr,43,11]
[:,:,43,12]
[int,int,43,16]
[[,[,43,17]
[intnum,7,43,18]
[],],43,19]
[;,;,43,20]
[id,arr,44,5]
[[,[,44,6]
[intnum,0,44,7]
[],],44,8]
[:=,:=,44,11]
[intnum,64,44,14]
[;,;,44,15]
[id,arr,45,5]
[[,[,45,6]
[intnum,1,45,7]
[],],45,8]
[:=,:=,45,11]
[intnum,34,45,14]
[;,;,45,15]
[id,arr,46,5]
[[,[,46,6]
[intnum,2,46,7]
[],],46,8]
[:=,:=,46,11]
[intnum,25,46,14]
[;,;,46,15]
[id,arr,47,5]
[[,[,47,6]
[intnum,3,47,7]
[],],47,8]
[:=,:=,47,11]
[intnum,12,47,14]
[;,;,47,15]
[id,arr,48,5]
[[,[,48,6]
[intnum,4,48,7]
[],],48,8]
[:=,:=,48,11]
[intnum,22,48,14]
[;,;,48,15]
[id,arr,49,5]
[[,[,49,6]
[intnum,5,49,7]
[],],49,8]
[:=,:=,49,11]
[intnum,11,49,14]
[;,;,49,15]
[id,arr,50,5]
[[,[,50,6]
[intnum,6,50,7]
[],],50,8]
[:=,:=,50,11]
[intnum,90,50,14]
[;,;,50,15]
[id,printarray,51,12]
[(,(,51,13]
[id,arr,51,16]
[,,,,51,17]
[intnum,7,51,19]
[),),51,20]
[;,;,51,21]
[id,bubbleSort,52,12]
[(,(,52,13]
[id,arr,52,16]
[,,,,52,17]
[intnum,7,52,19]
[),),52,20]
[;,;,52,21]
[id,printarray,53,12]
[(,(,53,13]
[id,arr,53,16]
[,,,,53,17]
[intnum,7,53,19]
[),),53,20]
[;,;,53,21]
[},},54,1]
[blockcmt,/*    classes    --------------------------------------|X| no class declaration| | class declaration| | multiple class declarations| | no data member declaration| | data member declaration| | multiple data member declaration| | no member function declaration| | member function declaration| | multiple member function declaration| | no member| | no inherited class| | one inherited class| | multiple inherited classes| | private member specifier| | public member specifier    functions: definitions    --------------------------------------| | no main function definition|X| main function definition| | no free function definition|X| free function definition|X| multiple free function definitions|X| no member function definition| | member function definition| | multiple member function definitions|X| return type: void| | return type: integer| | return type: float| | return type: id| | return type: array (not allowed)    functions: formal parameters    --------------------------------------|X| type: integer| | type: float| | type: id|X| type: 1-dim array | | type: n-dim array| | type: array (with size)|X| type: array (without size)    functions: calls    --------------------------------------|X| free function call| | member function call| | parameters:0| | parameters:1|X| parameters:n|X| array parameter - 1-dim| | array parameter - n-dim| | array parameter - with size| | array parameter - without size| | function call as statement| | function call as expression factor| | expression as parameter    variable declaration    --------------------------------------|X| type: integer| | type: float| | type: string| | type: id|X| type: 1-dim array | | type: n-dim array|X| type: array (with size)| | type: array (without size) (not allowed)    function body: local variable declarations    --------------------------------------| | no local variable declarations|X| local variable declarations| | intertwined statements and variable declarations    function body: statements    --------------------------------------| | no statement| | 1 statement|X| n statements|X| if statement|X| if: empty then or else blocks| | if: 1-statement then or else blocks|X| if: n-statements then or else blocks|X| while statement| | while: empty block| | while: 1-statement block|X| while: n-statement block| | read(<variable>) statement|X| write(<expr>) statement|X| return(<expr>) statement|X| assignment statement    variable + idnest    --------------------------------------|X| id| | id.id| | id.id(id)| | id(id).id| | id(id).id()| | id.id[id]| | id[id].id| | id[id].id[id]| | id.id[id][id]| | id[id][id].id| | id[id][id].id[id][id]| | id(id).id[id]| | id(id).id[id][id]| | expression as array index    expressions    --------------------------------------|X| single variable|X| involving addop| | involving multop|X| involving relop| | involving addop + multop|X| involving multop + relop| | involving addop + multop + relop| | involving parentheses| | involving nested parentheses| | involving not| | involving sign|X| involving literals| | involving variable + idnest|X| involving function calls| | involving all the above in one expression*/,56,3269]
