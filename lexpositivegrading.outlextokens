[eq,==,0,2][plus,+,0,4][or,or,0,7][openpar,(,0,9][semi,;,0,11][int,int,0,15][while,while,0,23][local,local,0,29][noteq,<>,1,2][minus,-,1,4][and,and,1,8][closepar,),1,10][comma,,,1,12][float,float,1,18][if,if,1,22][constructor,constructor,1,34][lt,<,2,1][mult,*,2,3][not,not,2,7][opencubr,{,2,9][dot,.,2,11][void,void,2,16][then,then,2,22][attribute,attribute,2,32][gt,>,3,1][div,/,3,3][closecubr,},3,6][colon,:,3,8][class,class,3,14][else,else,3,20][function,function,3,29][leq,<=,4,2][assign,:=,4,5][opensqbr,[,4,8][arrow,=>,4,11][self,self,4,16][read,read,4,22][public,public,4,29][geq,>=,5,2][closeqbr,],5,6][isa,isa,5,11][write,write,5,18][private,private,5,26][implementation,implementation,6,19][return,return,6,26][intnum,0,12,1][intnum,1,13,1][intnum,10,14,2][intnum,12,15,2][intnum,123,16,3][intnum,12345,17,5][floatnum,1.23,19,4][floatnum,12.34,20,5][intnum,120.34e10,21,9][intnum,12345.6789e-123,22,15][id,abc,24,3][id,abc1,25,4][id,a1bc,26,4][id,abc_1abc,27,8][id,abc1_abc,28,8][linecomment,//,31,28][eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,//,31,28]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]

[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]

[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,//,33,0]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,//,33,0]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,//,33,0]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,// this is an inline comment,33,0]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a 
multiple line
block comment 
*/,35,48]
[blockcmt,/* this is an imbricated 
/* block comment
*/
*/,37,51]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,// this is an inline comment,33,0]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a 
multiple line
block comment 
*/,35,48]
[blockcmt,/* this is an imbricated 
/* block comment
*/
*/,37,51]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,// this is an inline comment,32,0]
[blockcmt,/* this is a single line block comment */,32,41]
[blockcmt,/* this is a 
multiple line
block comment 
*/,34,48]
[blockcmt,/* this is an imbricated 
/* block comment
*/
*/,36,51]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,// this is an inline comment,30,28]
[blockcmt,/* this is a single line block comment */,32,41]
[blockcmt,/* this is a 
multiple line
block comment 
*/,34,48]
[blockcmt,/* this is an imbricated 
/* block comment
*/
*/,36,51]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,// this is an inline comment,30,28]
[blockcmt,/* this is a single line block comment */,2,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,7,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,12,4]
[eq,==,0,2]
[plus,+,0,4]
[or,or,0,7]
[openpar,(,0,9]
[semi,;,0,11]
[int,int,0,15]
[while,while,0,23]
[local,local,0,29]
[noteq,<>,1,2]
[minus,-,1,4]
[and,and,1,8]
[closepar,),1,10]
[comma,,,1,12]
[float,float,1,18]
[if,if,1,22]
[constructor,constructor,1,34]
[lt,<,2,1]
[mult,*,2,3]
[not,not,2,7]
[opencubr,{,2,9]
[dot,.,2,11]
[void,void,2,16]
[then,then,2,22]
[attribute,attribute,2,32]
[gt,>,3,1]
[div,/,3,3]
[closecubr,},3,6]
[colon,:,3,8]
[class,class,3,14]
[else,else,3,20]
[function,function,3,29]
[leq,<=,4,2]
[assign,:=,4,5]
[opensqbr,[,4,8]
[arrow,=>,4,11]
[self,self,4,16]
[read,read,4,22]
[public,public,4,29]
[geq,>=,5,2]
[closeqbr,],5,6]
[isa,isa,5,11]
[write,write,5,18]
[private,private,5,26]
[implementation,implementation,6,19]
[return,return,6,26]
[intnum,0,12,1]
[intnum,1,13,1]
[intnum,10,14,2]
[intnum,12,15,2]
[intnum,123,16,3]
[intnum,12345,17,5]
[floatnum,1.23,19,4]
[floatnum,12.34,20,5]
[intnum,120.34e10,21,9]
[intnum,12345.6789e-123,22,15]
[id,abc,24,3]
[id,abc1,25,4]
[id,a1bc,26,4]
[id,abc_1abc,27,8]
[id,abc1_abc,28,8]
[linecomment,// this is an inline comment,30,28]
[blockcmt,/* this is a single line block comment */,32,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,37,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,42,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,38,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,43,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,35,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,37,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,38,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,43,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,35,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,40,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,35,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,40,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,35,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,40,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,35,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,40,4]
[eq,==,1,2]
[plus,+,1,4]
[or,or,1,7]
[openpar,(,1,9]
[semi,;,1,11]
[int,int,1,15]
[while,while,1,23]
[local,local,1,29]
[noteq,<>,2,2]
[minus,-,2,4]
[and,and,2,8]
[closepar,),2,10]
[comma,,,2,12]
[float,float,2,18]
[if,if,2,22]
[constructor,constructor,2,34]
[lt,<,3,1]
[mult,*,3,3]
[not,not,3,7]
[opencubr,{,3,9]
[dot,.,3,11]
[void,void,3,16]
[then,then,3,22]
[attribute,attribute,3,32]
[gt,>,4,1]
[div,/,4,3]
[closecubr,},4,6]
[colon,:,4,8]
[class,class,4,14]
[else,else,4,20]
[function,function,4,29]
[leq,<=,5,2]
[assign,:=,5,5]
[opensqbr,[,5,8]
[arrow,=>,5,11]
[self,self,5,16]
[read,read,5,22]
[public,public,5,29]
[geq,>=,6,2]
[closeqbr,],6,6]
[isa,isa,6,11]
[write,write,6,18]
[private,private,6,26]
[implementation,implementation,7,19]
[return,return,7,26]
[intnum,0,13,1]
[intnum,1,14,1]
[intnum,10,15,2]
[intnum,12,16,2]
[intnum,123,17,3]
[intnum,12345,18,5]
[floatnum,1.23,20,4]
[floatnum,12.34,21,5]
[intnum,120.34e10,22,9]
[intnum,12345.6789e-123,23,15]
[id,abc,25,3]
[id,abc1,26,4]
[id,a1bc,27,4]
[id,abc_1abc,28,8]
[id,abc1_abc,29,8]
[linecomment,// this is an inline comment,31,28]
[blockcmt,/* this is a single line block comment */,33,41]
[blockcmt,/* this is a \nmultiple line\nblock comment \n*/,35,4]
[blockcmt,/* this is an imbricated \n/* block comment\n*/\n*/,40,4]
